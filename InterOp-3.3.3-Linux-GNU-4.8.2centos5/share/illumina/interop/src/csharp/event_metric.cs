//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Metrics {

using System;
using System.Runtime.InteropServices;
using Illumina.InterOp.Run;

public class event_metric : base_event_metric {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal event_metric(global::System.IntPtr cPtr, bool cMemoryOwn) : base(c_csharp_metricsPINVOKE.event_metric_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(event_metric obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~event_metric() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          c_csharp_metricsPINVOKE.delete_event_metric(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public event_metric() : this(c_csharp_metricsPINVOKE.new_event_metric__SWIG_0(), true) {
  }

  public event_metric(base_event_metric_header arg0) : this(c_csharp_metricsPINVOKE.new_event_metric__SWIG_1(base_event_metric_header.getCPtr(arg0)), true) {
    if (c_csharp_metricsPINVOKE.SWIGPendingException.Pending) throw c_csharp_metricsPINVOKE.SWIGPendingException.Retrieve();
  }

  public event_metric(uint lane, uint tile, uint cycle, ulong date_time, event_type event_type, double elapsed_ms, uint event_value, ulong point_ticks, ulong elapsed_ticks) : this(c_csharp_metricsPINVOKE.new_event_metric__SWIG_2(lane, tile, cycle, date_time, (int)event_type, elapsed_ms, event_value, point_ticks, elapsed_ticks), true) {
  }

  public event_metric(uint lane, uint tile, uint cycle, ulong date_time, event_type event_type, double elapsed_ms, uint event_value, ulong point_ticks) : this(c_csharp_metricsPINVOKE.new_event_metric__SWIG_3(lane, tile, cycle, date_time, (int)event_type, elapsed_ms, event_value, point_ticks), true) {
  }

  public event_metric(uint lane, uint tile, uint cycle, ulong date_time, event_type event_type, double elapsed_ms, uint event_value) : this(c_csharp_metricsPINVOKE.new_event_metric__SWIG_4(lane, tile, cycle, date_time, (int)event_type, elapsed_ms, event_value), true) {
  }

  public event_metric(uint lane, uint tile, uint cycle, ulong date_time, event_type event_type, double elapsed_ms) : this(c_csharp_metricsPINVOKE.new_event_metric__SWIG_5(lane, tile, cycle, date_time, (int)event_type, elapsed_ms), true) {
  }

  public void set(uint lane, uint tile, uint cycle, ulong date_time, event_type event_type, uint event_value) {
    c_csharp_metricsPINVOKE.event_metric_set__SWIG_0(swigCPtr, lane, tile, cycle, date_time, (int)event_type, event_value);
  }

  public void set(ulong date_time, ulong point_ticks, uint lane, uint tile, uint cycle, event_type event_type, uint event_value, double elapsed_ms, ulong elapsed_ticks) {
    c_csharp_metricsPINVOKE.event_metric_set__SWIG_1(swigCPtr, date_time, point_ticks, lane, tile, cycle, (int)event_type, event_value, elapsed_ms, elapsed_ticks);
  }

  public new void set_base(uint lane, uint tile) {
    c_csharp_metricsPINVOKE.event_metric_set_base(swigCPtr, lane, tile);
  }

  public new static ulong create_id(ulong lane, ulong tile, ulong cycle, ulong event_type) {
    ulong ret = c_csharp_metricsPINVOKE.event_metric_create_id__SWIG_0(lane, tile, cycle, event_type);
    return ret;
    }

  public new static ulong create_id(ulong lane, ulong tile, ulong cycle) {
    ulong ret = c_csharp_metricsPINVOKE.event_metric_create_id__SWIG_1(lane, tile, cycle);
    return ret;
    }

  public static ulong event_from_id(ulong id) {
    ulong ret = c_csharp_metricsPINVOKE.event_metric_event_from_id(id);
    return ret;
    }

  public ulong date_time() {
    ulong ret = c_csharp_metricsPINVOKE.event_metric_date_time(swigCPtr);
    return ret;
    }

  public ulong point_ticks() {
    ulong ret = c_csharp_metricsPINVOKE.event_metric_point_ticks(swigCPtr);
    return ret;
    }

  public csharp_date_time date_time_csharp() {
    csharp_date_time ret = new csharp_date_time(c_csharp_metricsPINVOKE.event_metric_date_time_csharp(swigCPtr), false);
    return ret;
  }

  public uint event_value() {
    uint ret = c_csharp_metricsPINVOKE.event_metric_event_value(swigCPtr);
    return ret;
  }

  public double elapsed_ms() {
    double ret = c_csharp_metricsPINVOKE.event_metric_elapsed_ms(swigCPtr);
    return ret;
  }

  public ulong elapsed_ticks() {
    ulong ret = c_csharp_metricsPINVOKE.event_metric_elapsed_ticks(swigCPtr);
    return ret;
    }

  public static string prefix() {
    string ret = c_csharp_metricsPINVOKE.event_metric_prefix();
    return ret;
  }

  public static readonly int TYPE = c_csharp_metricsPINVOKE.event_metric_TYPE_get();
  public static readonly int LATEST_VERSION = c_csharp_metricsPINVOKE.event_metric_LATEST_VERSION_get();

}

}
