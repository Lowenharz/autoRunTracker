//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Metrics {

using System;
using System.Runtime.InteropServices;
using Illumina.InterOp.Run;

public class index_info : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal index_info(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(index_info obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~index_info() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          c_csharp_metricsPINVOKE.delete_index_info(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public index_info() : this(c_csharp_metricsPINVOKE.new_index_info__SWIG_0(), true) {
  }

  public index_info(string index_seq, string sample_id, string sample_proj, ulong cluster_count) : this(c_csharp_metricsPINVOKE.new_index_info__SWIG_1(index_seq, sample_id, sample_proj, cluster_count), true) {
    if (c_csharp_metricsPINVOKE.SWIGPendingException.Pending) throw c_csharp_metricsPINVOKE.SWIGPendingException.Retrieve();
  }

  public string index_seq() {
    string ret = c_csharp_metricsPINVOKE.index_info_index_seq(swigCPtr);
    return ret;
  }

  public string sample_id() {
    string ret = c_csharp_metricsPINVOKE.index_info_sample_id(swigCPtr);
    return ret;
  }

  public string sample_proj() {
    string ret = c_csharp_metricsPINVOKE.index_info_sample_proj(swigCPtr);
    return ret;
  }

  public ulong cluster_count() {
    ulong ret = c_csharp_metricsPINVOKE.index_info_cluster_count(swigCPtr);
    return ret;
    }

  public bool is_dual() {
    bool ret = c_csharp_metricsPINVOKE.index_info_is_dual(swigCPtr);
    return ret;
  }

  public string index1() {
    string ret = c_csharp_metricsPINVOKE.index_info_index1(swigCPtr);
    return ret;
  }

  public string index2() {
    string ret = c_csharp_metricsPINVOKE.index_info_index2(swigCPtr);
    return ret;
  }

  public string unique_id() {
    string ret = c_csharp_metricsPINVOKE.index_info_unique_id(swigCPtr);
    return ret;
  }

}

}
