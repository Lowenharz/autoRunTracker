//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Metrics {

using System;
using System.Runtime.InteropServices;
using Illumina.InterOp.Run;

public class csharp_date_time : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal csharp_date_time(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(csharp_date_time obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~csharp_date_time() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          c_csharp_metricsPINVOKE.delete_csharp_date_time(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public csharp_date_time(ulong v) : this(c_csharp_metricsPINVOKE.new_csharp_date_time__SWIG_0(v), true) {
  }

  public csharp_date_time() : this(c_csharp_metricsPINVOKE.new_csharp_date_time__SWIG_1(), true) {
  }

  public ulong to_unix() {
    ulong ret = c_csharp_metricsPINVOKE.csharp_date_time_to_unix__SWIG_0(swigCPtr);
    return ret;
    }

  public double to_seconds() {
    double ret = c_csharp_metricsPINVOKE.csharp_date_time_to_seconds__SWIG_0(swigCPtr);
    return ret;
  }

  public static ulong to_unix(ulong val) {
    ulong ret = c_csharp_metricsPINVOKE.csharp_date_time_to_unix__SWIG_1(val);
    return ret;
    }

  public static double to_seconds(ulong val) {
    double ret = c_csharp_metricsPINVOKE.csharp_date_time_to_seconds__SWIG_1(val);
    return ret;
  }

  public static csharp_date_time to_csharp(ulong uval) {
    csharp_date_time ret = new csharp_date_time(c_csharp_metricsPINVOKE.csharp_date_time_to_csharp(uval), true);
    return ret;
  }

  public ulong value {
    set {
      c_csharp_metricsPINVOKE.csharp_date_time_value_set(swigCPtr, value);
    } 
    get {
        ulong ret = c_csharp_metricsPINVOKE.csharp_date_time_value_get(swigCPtr);
        return ret;
        } 
  }

  public ulong to_int() {
    ulong ret = c_csharp_metricsPINVOKE.csharp_date_time_to_int(swigCPtr);
    return ret;
    }

  public ulong to_binary() {
    ulong ret = c_csharp_metricsPINVOKE.csharp_date_time_to_binary(swigCPtr);
    return ret;
    }

  public bool equals(csharp_date_time other) {
    bool ret = c_csharp_metricsPINVOKE.csharp_date_time_equals(swigCPtr, csharp_date_time.getCPtr(other));
    if (c_csharp_metricsPINVOKE.SWIGPendingException.Pending) throw c_csharp_metricsPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
