//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Summary {

using System;
using System.Runtime.InteropServices;
using Illumina.InterOp.Metrics;
using Illumina.InterOp.Run;
using Illumina.InterOp.RunMetrics;

public class compass_cycle_table : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal compass_cycle_table(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(compass_cycle_table obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~compass_cycle_table() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          c_csharp_summaryPINVOKE.delete_compass_cycle_table(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public compass_cycle_table() : this(c_csharp_summaryPINVOKE.new_compass_cycle_table(), true) {
  }

  public void resize(uint row_count, uint col_count) {
    c_csharp_summaryPINVOKE.compass_cycle_table_resize(swigCPtr, row_count, col_count);
  }

  public float at(uint row, uint col) {
    float ret = c_csharp_summaryPINVOKE.compass_cycle_table_at(swigCPtr, row, col);
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string column_at(uint row) {
    string ret = c_csharp_summaryPINVOKE.compass_cycle_table_column_at__SWIG_0(swigCPtr, row);
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint column_count() {
    uint ret = c_csharp_summaryPINVOKE.compass_cycle_table_column_count(swigCPtr);
    return ret;
  }

  public uint row_count() {
    uint ret = c_csharp_summaryPINVOKE.compass_cycle_table_row_count(swigCPtr);
    return ret;
  }

}

}
