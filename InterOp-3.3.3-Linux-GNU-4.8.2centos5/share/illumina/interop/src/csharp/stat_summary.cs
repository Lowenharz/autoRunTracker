//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Summary {

using System;
using System.Runtime.InteropServices;
using Illumina.InterOp.Metrics;
using Illumina.InterOp.Run;
using Illumina.InterOp.RunMetrics;

public class stat_summary : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal stat_summary(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(stat_summary obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~stat_summary() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          c_csharp_summaryPINVOKE.delete_stat_summary(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public stat_summary(uint channel_count) : this(c_csharp_summaryPINVOKE.new_stat_summary(channel_count), true) {
  }

  public float percent_gt_q30() {
    float ret = c_csharp_summaryPINVOKE.stat_summary_percent_gt_q30__SWIG_0(swigCPtr);
    return ret;
  }

  public float yield_g() {
    float ret = c_csharp_summaryPINVOKE.stat_summary_yield_g__SWIG_0(swigCPtr);
    return ret;
  }

  public float projected_yield_g() {
    float ret = c_csharp_summaryPINVOKE.stat_summary_projected_yield_g__SWIG_0(swigCPtr);
    return ret;
  }

  public float reads() {
    float ret = c_csharp_summaryPINVOKE.stat_summary_reads__SWIG_0(swigCPtr);
    return ret;
  }

  public float reads_pf() {
    float ret = c_csharp_summaryPINVOKE.stat_summary_reads_pf__SWIG_0(swigCPtr);
    return ret;
  }

  public metric_stat density() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_density__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat density_pf() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_density_pf__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat cluster_count() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_cluster_count__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat cluster_count_pf() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_cluster_count_pf__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat percent_pf() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_percent_pf__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat phasing() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_phasing__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat prephasing() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_prephasing__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat percent_aligned() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_percent_aligned__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat error_rate() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_error_rate__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat error_rate_35() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_error_rate_35__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat error_rate_50() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_error_rate_50__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat error_rate_75() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_error_rate_75__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat error_rate_100() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_error_rate_100__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat first_cycle_intensity() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_first_cycle_intensity__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat phasing_slope() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_phasing_slope__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat phasing_offset() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_phasing_offset__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat prephasing_slope() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_prephasing_slope__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat prephasing_offset() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_prephasing_offset__SWIG_0(swigCPtr), false);
    return ret;
  }

  public void percent_gt_q30(float val) {
    c_csharp_summaryPINVOKE.stat_summary_percent_gt_q30__SWIG_1(swigCPtr, val);
  }

  public void yield_g(float val) {
    c_csharp_summaryPINVOKE.stat_summary_yield_g__SWIG_1(swigCPtr, val);
  }

  public void projected_yield_g(float val) {
    c_csharp_summaryPINVOKE.stat_summary_projected_yield_g__SWIG_1(swigCPtr, val);
  }

  public void reads(float val) {
    c_csharp_summaryPINVOKE.stat_summary_reads__SWIG_1(swigCPtr, val);
  }

  public void reads_pf(float val) {
    c_csharp_summaryPINVOKE.stat_summary_reads_pf__SWIG_1(swigCPtr, val);
  }

  public void density(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_density__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void density_pf(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_density_pf__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void cluster_count(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_cluster_count__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void cluster_count_pf(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_cluster_count_pf__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void percent_pf(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_percent_pf__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void phasing(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_phasing__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void prephasing(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_prephasing__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void percent_aligned(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_percent_aligned__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void error_rate(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_error_rate__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void error_rate_35(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_error_rate_35__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void error_rate_50(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_error_rate_50__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void error_rate_75(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_error_rate_75__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void error_rate_100(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_error_rate_100__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void first_cycle_intensity(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_first_cycle_intensity__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public float percent_gt_q30_last_10_cycles() {
    float ret = c_csharp_summaryPINVOKE.stat_summary_percent_gt_q30_last_10_cycles__SWIG_0(swigCPtr);
    return ret;
  }

  public float percent_occupied() {
    float ret = c_csharp_summaryPINVOKE.stat_summary_percent_occupied__SWIG_0(swigCPtr);
    return ret;
  }

  public metric_stat theta_z() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_theta_z__SWIG_0(swigCPtr), false);
    return ret;
  }

  public metric_stat theta() {
    metric_stat ret = new metric_stat(c_csharp_summaryPINVOKE.stat_summary_theta__SWIG_0(swigCPtr), false);
    return ret;
  }

  public void phasing_slope(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_phasing_slope__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void phasing_offset(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_phasing_offset__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void prephasing_slope(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_prephasing_slope__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void prephasing_offset(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_prephasing_offset__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public float_vector fwhm() {
    float_vector ret = new float_vector(c_csharp_summaryPINVOKE.stat_summary_fwhm__SWIG_0(swigCPtr), false);
    return ret;
  }

  public float_vector percent_base() {
    float_vector ret = new float_vector(c_csharp_summaryPINVOKE.stat_summary_percent_base__SWIG_0(swigCPtr), false);
    return ret;
  }

  public void percent_gt_q30_last_10_cycles(float val) {
    c_csharp_summaryPINVOKE.stat_summary_percent_gt_q30_last_10_cycles__SWIG_1(swigCPtr, val);
  }

  public void fwhm(uint channel, float val) {
    c_csharp_summaryPINVOKE.stat_summary_fwhm__SWIG_1(swigCPtr, channel, val);
  }

  public void percent_base(uint index, float val) {
    c_csharp_summaryPINVOKE.stat_summary_percent_base__SWIG_1(swigCPtr, index, val);
  }

  public void percent_occupied(float val) {
    c_csharp_summaryPINVOKE.stat_summary_percent_occupied__SWIG_1(swigCPtr, val);
  }

  public void theta_z(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_theta_z__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void theta(metric_stat stat) {
    c_csharp_summaryPINVOKE.stat_summary_theta__SWIG_1(swigCPtr, metric_stat.getCPtr(stat));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public void resize_stat(uint channel_count) {
    c_csharp_summaryPINVOKE.stat_summary_resize_stat(swigCPtr, channel_count);
  }

}

}
