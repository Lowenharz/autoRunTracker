//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Summary {

using System;
using System.Runtime.InteropServices;
using Illumina.InterOp.Metrics;
using Illumina.InterOp.Run;
using Illumina.InterOp.RunMetrics;

public class index_lane_summary : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal index_lane_summary(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(index_lane_summary obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~index_lane_summary() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          c_csharp_summaryPINVOKE.delete_index_lane_summary(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public index_lane_summary(ulong total_reads, ulong total_pf_reads, float total_fraction_mapped_reads, float mapped_reads_cv, float min_mapped_reads, float max_mapped_reads) : this(c_csharp_summaryPINVOKE.new_index_lane_summary__SWIG_0(total_reads, total_pf_reads, total_fraction_mapped_reads, mapped_reads_cv, min_mapped_reads, max_mapped_reads), true) {
  }

  public index_lane_summary(ulong total_reads, ulong total_pf_reads, float total_fraction_mapped_reads, float mapped_reads_cv, float min_mapped_reads) : this(c_csharp_summaryPINVOKE.new_index_lane_summary__SWIG_1(total_reads, total_pf_reads, total_fraction_mapped_reads, mapped_reads_cv, min_mapped_reads), true) {
  }

  public index_lane_summary(ulong total_reads, ulong total_pf_reads, float total_fraction_mapped_reads, float mapped_reads_cv) : this(c_csharp_summaryPINVOKE.new_index_lane_summary__SWIG_2(total_reads, total_pf_reads, total_fraction_mapped_reads, mapped_reads_cv), true) {
  }

  public index_lane_summary(ulong total_reads, ulong total_pf_reads, float total_fraction_mapped_reads) : this(c_csharp_summaryPINVOKE.new_index_lane_summary__SWIG_3(total_reads, total_pf_reads, total_fraction_mapped_reads), true) {
  }

  public index_lane_summary(ulong total_reads, ulong total_pf_reads) : this(c_csharp_summaryPINVOKE.new_index_lane_summary__SWIG_4(total_reads, total_pf_reads), true) {
  }

  public index_lane_summary(ulong total_reads) : this(c_csharp_summaryPINVOKE.new_index_lane_summary__SWIG_5(total_reads), true) {
  }

  public index_lane_summary() : this(c_csharp_summaryPINVOKE.new_index_lane_summary__SWIG_6(), true) {
  }

  public void resize(uint n) {
    c_csharp_summaryPINVOKE.index_lane_summary_resize(swigCPtr, n);
  }

  public void reserve(uint n) {
    c_csharp_summaryPINVOKE.index_lane_summary_reserve(swigCPtr, n);
  }

  public void push_back(index_count_summary count_summary) {
    c_csharp_summaryPINVOKE.index_lane_summary_push_back(swigCPtr, index_count_summary.getCPtr(count_summary));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public index_count_summary at(uint n) {
    index_count_summary ret = new index_count_summary(c_csharp_summaryPINVOKE.index_lane_summary_at(swigCPtr, n), false);
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint size() {
    uint ret = c_csharp_summaryPINVOKE.index_lane_summary_size(swigCPtr);
    return ret;
  }

  public ulong total_reads() {
    ulong ret = c_csharp_summaryPINVOKE.index_lane_summary_total_reads(swigCPtr);
    return ret;
    }

  public ulong total_pf_reads() {
    ulong ret = c_csharp_summaryPINVOKE.index_lane_summary_total_pf_reads(swigCPtr);
    return ret;
    }

  public float total_fraction_mapped_reads() {
    float ret = c_csharp_summaryPINVOKE.index_lane_summary_total_fraction_mapped_reads(swigCPtr);
    return ret;
  }

  public float mapped_reads_cv() {
    float ret = c_csharp_summaryPINVOKE.index_lane_summary_mapped_reads_cv(swigCPtr);
    return ret;
  }

  public float min_mapped_reads() {
    float ret = c_csharp_summaryPINVOKE.index_lane_summary_min_mapped_reads(swigCPtr);
    return ret;
  }

  public float max_mapped_reads() {
    float ret = c_csharp_summaryPINVOKE.index_lane_summary_max_mapped_reads(swigCPtr);
    return ret;
  }

  public void sort() {
    c_csharp_summaryPINVOKE.index_lane_summary_sort(swigCPtr);
  }

  public void set(ulong total_mapped_reads, ulong pf_cluster_count_total, ulong cluster_count_total, float min_fraction_mapped, float max_fraction_mapped, float cv_fraction_mapped) {
    c_csharp_summaryPINVOKE.index_lane_summary_set(swigCPtr, total_mapped_reads, pf_cluster_count_total, cluster_count_total, min_fraction_mapped, max_fraction_mapped, cv_fraction_mapped);
  }

  public void clear() {
    c_csharp_summaryPINVOKE.index_lane_summary_clear(swigCPtr);
  }

}

}
