//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Plot {

using System;
using System.Runtime.InteropServices;
using Illumina.InterOp.RunMetrics;
using Illumina.InterOp.Metrics;
using Illumina.InterOp.Run;

public class candle_stick_plot_data : chart_data {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal candle_stick_plot_data(global::System.IntPtr cPtr, bool cMemoryOwn) : base(c_csharp_plotPINVOKE.candle_stick_plot_data_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(candle_stick_plot_data obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~candle_stick_plot_data() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          c_csharp_plotPINVOKE.delete_candle_stick_plot_data(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public new void clear() {
    c_csharp_plotPINVOKE.candle_stick_plot_data_clear(swigCPtr);
  }

  public void resize(uint n) {
    c_csharp_plotPINVOKE.candle_stick_plot_data_resize(swigCPtr, n);
  }

  public void assign(uint n, candle_stick_series val) {
    c_csharp_plotPINVOKE.candle_stick_plot_data_assign(swigCPtr, n, candle_stick_series.getCPtr(val));
    if (c_csharp_plotPINVOKE.SWIGPendingException.Pending) throw c_csharp_plotPINVOKE.SWIGPendingException.Retrieve();
  }

  public void push_back(candle_stick_series val) {
    c_csharp_plotPINVOKE.candle_stick_plot_data_push_back(swigCPtr, candle_stick_series.getCPtr(val));
    if (c_csharp_plotPINVOKE.SWIGPendingException.Pending) throw c_csharp_plotPINVOKE.SWIGPendingException.Retrieve();
  }

  public candle_stick_series at(uint index) {
    candle_stick_series ret = new candle_stick_series(c_csharp_plotPINVOKE.candle_stick_plot_data_at(swigCPtr, index), false);
    if (c_csharp_plotPINVOKE.SWIGPendingException.Pending) throw c_csharp_plotPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint size() {
    uint ret = c_csharp_plotPINVOKE.candle_stick_plot_data_size(swigCPtr);
    return ret;
  }

  public bool empty() {
    bool ret = c_csharp_plotPINVOKE.candle_stick_plot_data_empty(swigCPtr);
    return ret;
  }

  public candle_stick_plot_data() : this(c_csharp_plotPINVOKE.new_candle_stick_plot_data(), true) {
  }

}

}
