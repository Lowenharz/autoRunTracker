//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Summary {

using System;
using System.Runtime.InteropServices;
using Illumina.InterOp.Metrics;
using Illumina.InterOp.Run;
using Illumina.InterOp.RunMetrics;

public class metric_stat : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal metric_stat(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(metric_stat obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~metric_stat() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          c_csharp_summaryPINVOKE.delete_metric_stat(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public metric_stat(float mean, float stddev, float median) : this(c_csharp_summaryPINVOKE.new_metric_stat__SWIG_0(mean, stddev, median), true) {
  }

  public metric_stat(float mean, float stddev) : this(c_csharp_summaryPINVOKE.new_metric_stat__SWIG_1(mean, stddev), true) {
  }

  public metric_stat(float mean) : this(c_csharp_summaryPINVOKE.new_metric_stat__SWIG_2(mean), true) {
  }

  public metric_stat() : this(c_csharp_summaryPINVOKE.new_metric_stat__SWIG_3(), true) {
  }

  public void clear(bool set_nan) {
    c_csharp_summaryPINVOKE.metric_stat_clear__SWIG_0(swigCPtr, set_nan);
  }

  public void clear() {
    c_csharp_summaryPINVOKE.metric_stat_clear__SWIG_1(swigCPtr);
  }

  public void mean(float val) {
    c_csharp_summaryPINVOKE.metric_stat_mean__SWIG_0(swigCPtr, val);
  }

  public void stddev(float val) {
    c_csharp_summaryPINVOKE.metric_stat_stddev__SWIG_0(swigCPtr, val);
  }

  public void median(float val) {
    c_csharp_summaryPINVOKE.metric_stat_median__SWIG_0(swigCPtr, val);
  }

  public float mean() {
    float ret = c_csharp_summaryPINVOKE.metric_stat_mean__SWIG_1(swigCPtr);
    return ret;
  }

  public float stddev() {
    float ret = c_csharp_summaryPINVOKE.metric_stat_stddev__SWIG_1(swigCPtr);
    return ret;
  }

  public float median() {
    float ret = c_csharp_summaryPINVOKE.metric_stat_median__SWIG_1(swigCPtr);
    return ret;
  }

}

}
