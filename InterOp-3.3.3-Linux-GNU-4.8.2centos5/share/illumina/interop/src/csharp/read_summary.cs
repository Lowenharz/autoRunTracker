//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Summary {

using System;
using System.Runtime.InteropServices;
using Illumina.InterOp.Metrics;
using Illumina.InterOp.Run;
using Illumina.InterOp.RunMetrics;

public class read_summary : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal read_summary(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(read_summary obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~read_summary() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          c_csharp_summaryPINVOKE.delete_read_summary(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public read_summary(read_info read, uint channel_count) : this(c_csharp_summaryPINVOKE.new_read_summary__SWIG_0(read_info.getCPtr(read), channel_count), true) {
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public read_summary(read_info read) : this(c_csharp_summaryPINVOKE.new_read_summary__SWIG_1(read_info.getCPtr(read)), true) {
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public read_summary() : this(c_csharp_summaryPINVOKE.new_read_summary__SWIG_2(), true) {
  }

  public lane_summary at(uint n) {
    lane_summary ret = new lane_summary(c_csharp_summaryPINVOKE.read_summary_at(swigCPtr, n), false);
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void resize(uint n) {
    c_csharp_summaryPINVOKE.read_summary_resize(swigCPtr, n);
  }

  public read_info read() {
    read_info ret = new read_info(c_csharp_summaryPINVOKE.read_summary_read(swigCPtr), false);
    return ret;
  }

  public metric_summary summary() {
    metric_summary ret = new metric_summary(c_csharp_summaryPINVOKE.read_summary_summary__SWIG_0(swigCPtr), false);
    return ret;
  }

  public void summary(metric_summary summary) {
    c_csharp_summaryPINVOKE.read_summary_summary__SWIG_1(swigCPtr, metric_summary.getCPtr(summary));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public uint size() {
    uint ret = c_csharp_summaryPINVOKE.read_summary_size(swigCPtr);
    return ret;
  }

  public uint lane_count() {
    uint ret = c_csharp_summaryPINVOKE.read_summary_lane_count(swigCPtr);
    return ret;
  }

}

}
