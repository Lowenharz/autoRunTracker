//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Run {

public class read_info : cycle_range {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal read_info(global::System.IntPtr cPtr, bool cMemoryOwn) : base(c_csharp_runPINVOKE.read_info_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(read_info obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~read_info() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          c_csharp_runPINVOKE.delete_read_info(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public read_info(uint number, uint first_cycle, uint last_cycle, bool is_index) : this(c_csharp_runPINVOKE.new_read_info__SWIG_0(number, first_cycle, last_cycle, is_index), true) {
  }

  public read_info(uint number, uint first_cycle, uint last_cycle) : this(c_csharp_runPINVOKE.new_read_info__SWIG_1(number, first_cycle, last_cycle), true) {
  }

  public read_info(uint number, uint first_cycle) : this(c_csharp_runPINVOKE.new_read_info__SWIG_2(number, first_cycle), true) {
  }

  public read_info(uint number) : this(c_csharp_runPINVOKE.new_read_info__SWIG_3(number), true) {
  }

  public read_info() : this(c_csharp_runPINVOKE.new_read_info__SWIG_4(), true) {
  }

  public uint number() {
    uint ret = c_csharp_runPINVOKE.read_info_number(swigCPtr);
    return ret;
  }

  public bool is_index() {
    bool ret = c_csharp_runPINVOKE.read_info_is_index(swigCPtr);
    return ret;
  }

  public uint total_cycles() {
    uint ret = c_csharp_runPINVOKE.read_info_total_cycles(swigCPtr);
    return ret;
  }

  public uint useable_cycles() {
    uint ret = c_csharp_runPINVOKE.read_info_useable_cycles(swigCPtr);
    return ret;
  }

}

}
