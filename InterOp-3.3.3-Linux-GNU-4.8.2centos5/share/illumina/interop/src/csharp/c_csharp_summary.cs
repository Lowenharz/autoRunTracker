//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Illumina.InterOp.Summary {

using Illumina.InterOp.Metrics;
using Illumina.InterOp.Run;
using Illumina.InterOp.RunMetrics;

public class c_csharp_summary {
  public static void summarize_run_metrics(run_metrics metrics, run_summary summary, bool skip_median, bool trim) {
    c_csharp_summaryPINVOKE.summarize_run_metrics__SWIG_0(run_metrics.getCPtr(metrics), run_summary.getCPtr(summary), skip_median, trim);
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void summarize_run_metrics(run_metrics metrics, run_summary summary, bool skip_median) {
    c_csharp_summaryPINVOKE.summarize_run_metrics__SWIG_1(run_metrics.getCPtr(metrics), run_summary.getCPtr(summary), skip_median);
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void summarize_run_metrics(run_metrics metrics, run_summary summary) {
    c_csharp_summaryPINVOKE.summarize_run_metrics__SWIG_2(run_metrics.getCPtr(metrics), run_summary.getCPtr(summary));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void summarize_index_metrics(run_metrics metrics, uint lane, index_lane_summary summary) {
    c_csharp_summaryPINVOKE.summarize_index_metrics__SWIG_0(run_metrics.getCPtr(metrics), lane, index_lane_summary.getCPtr(summary));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void summarize_index_metrics(base_index_metrics index_metrics, base_tile_metrics tile_metrics, uint lane_count, index_flowcell_summary summary) {
    c_csharp_summaryPINVOKE.summarize_index_metrics__SWIG_1(base_index_metrics.getCPtr(index_metrics), base_tile_metrics.getCPtr(tile_metrics), lane_count, index_flowcell_summary.getCPtr(summary));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void summarize_index_metrics(run_metrics metrics, index_flowcell_summary summary) {
    c_csharp_summaryPINVOKE.summarize_index_metrics__SWIG_2(run_metrics.getCPtr(metrics), index_flowcell_summary.getCPtr(summary));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void summarize_compass_run_metrics(run_metrics metrics, run_summary summary, bool skip_median, bool clear) {
    c_csharp_summaryPINVOKE.summarize_compass_run_metrics__SWIG_0(run_metrics.getCPtr(metrics), run_summary.getCPtr(summary), skip_median, clear);
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void summarize_compass_run_metrics(run_metrics metrics, run_summary summary, bool skip_median) {
    c_csharp_summaryPINVOKE.summarize_compass_run_metrics__SWIG_1(run_metrics.getCPtr(metrics), run_summary.getCPtr(summary), skip_median);
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void summarize_compass_run_metrics(run_metrics metrics, run_summary summary) {
    c_csharp_summaryPINVOKE.summarize_compass_run_metrics__SWIG_2(run_metrics.getCPtr(metrics), run_summary.getCPtr(summary));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void summarize_compass_cycle_metrics(run_metrics metrics, compass_cycle_table table) {
    c_csharp_summaryPINVOKE.summarize_compass_cycle_metrics(run_metrics.getCPtr(metrics), compass_cycle_table.getCPtr(table));
    if (c_csharp_summaryPINVOKE.SWIGPendingException.Pending) throw c_csharp_summaryPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
