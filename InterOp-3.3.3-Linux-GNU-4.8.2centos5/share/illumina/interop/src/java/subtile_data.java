/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class subtile_data extends flowcell_data {
  private transient long swigCPtr;

  protected subtile_data(long cPtr, boolean cMemoryOwn) {
    super(interop_plotJNI.subtile_data_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(subtile_data obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_plotJNI.delete_subtile_data(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public subtile_data() {
    this(interop_plotJNI.new_subtile_data(), true);
  }

  public void set_buffer(float[] data_buffer, int[] id_buffer) throws invalid_parameter {
    interop_plotJNI.subtile_data_set_buffer__SWIG_0(swigCPtr, this, data_buffer, id_buffer);
  }

  public void set_buffer(float[] data_buffer, int[] id_buffer, long lanes, long swaths, long tiles, long subtile_count_x, long subtile_count_y) {
    interop_plotJNI.subtile_data_set_buffer__SWIG_1(swigCPtr, this, data_buffer, id_buffer, lanes, swaths, tiles, subtile_count_x, subtile_count_y);
  }

  public void resize(long lanes, long swaths, long tiles, long subtile_count_x, long subtile_count_y) {
    interop_plotJNI.subtile_data_resize(swigCPtr, this, lanes, swaths, tiles, subtile_count_x, subtile_count_y);
  }

  public void set_data(long lane_idx, long tile_idx, long bin_x, long bin_y, long tile_id, float value) throws index_out_of_bounds_exception {
    interop_plotJNI.subtile_data_set_data(swigCPtr, this, lane_idx, tile_idx, bin_x, bin_y, tile_id, value);
  }

  public void populate_tile_data_at(float[] buffer, long buffer_size, long lane_idx, long tile_idx) {
    interop_plotJNI.subtile_data_populate_tile_data_at(swigCPtr, this, buffer, buffer_size, lane_idx, tile_idx);
  }

  public float at(long row, long col, long bin_x, long bin_y) throws index_out_of_bounds_exception {
    return interop_plotJNI.subtile_data_at(swigCPtr, this, row, col, bin_x, bin_y);
  }

  public long tile_id(long row, long col, long bin_x, long bin_y) throws index_out_of_bounds_exception {
    return interop_plotJNI.subtile_data_tile_id(swigCPtr, this, row, col, bin_x, bin_y);
  }

  public long subtile_count_x() {
    return interop_plotJNI.subtile_data_subtile_count_x(swigCPtr, this);
  }

  public long subtile_count_y() {
    return interop_plotJNI.subtile_data_subtile_count_y(swigCPtr, this);
  }

  public void clear() {
    interop_plotJNI.subtile_data_clear(swigCPtr, this);
  }

  public long index_of(long row, long col, long bin_x, long bin_y) throws index_out_of_bounds_exception {
    return interop_plotJNI.subtile_data_index_of(swigCPtr, this, row, col, bin_x, bin_y);
  }

}
