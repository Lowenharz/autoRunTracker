/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class bar_plot_data extends chart_data {
  private transient long swigCPtr;

  protected bar_plot_data(long cPtr, boolean cMemoryOwn) {
    super(interop_plotJNI.bar_plot_data_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(bar_plot_data obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_plotJNI.delete_bar_plot_data(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void clear() {
    interop_plotJNI.bar_plot_data_clear(swigCPtr, this);
  }

  public void resize(long n) {
    interop_plotJNI.bar_plot_data_resize(swigCPtr, this, n);
  }

  public void assign(long n, bar_series val) {
    interop_plotJNI.bar_plot_data_assign(swigCPtr, this, n, bar_series.getCPtr(val), val);
  }

  public void push_back(bar_series val) {
    interop_plotJNI.bar_plot_data_push_back(swigCPtr, this, bar_series.getCPtr(val), val);
  }

  public bar_series at(long index) throws index_out_of_bounds_exception {
    return new bar_series(interop_plotJNI.bar_plot_data_at(swigCPtr, this, index), false);
  }

  public long size() {
    return interop_plotJNI.bar_plot_data_size(swigCPtr, this);
  }

  public boolean empty() {
    return interop_plotJNI.bar_plot_data_empty(swigCPtr, this);
  }

  public bar_plot_data() {
    this(interop_plotJNI.new_bar_plot_data(), true);
  }

}
