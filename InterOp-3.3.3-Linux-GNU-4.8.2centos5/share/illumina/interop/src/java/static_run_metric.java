/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class static_run_metric extends base_static_run_metric {
  private transient long swigCPtr;

  protected static_run_metric(long cPtr, boolean cMemoryOwn) {
    super(interop_metricsJNI.static_run_metric_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(static_run_metric obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_metricsJNI.delete_static_run_metric(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static_run_metric() {
    this(interop_metricsJNI.new_static_run_metric__SWIG_0(), true);
  }

  public static_run_metric(static_run_metric_header header) {
    this(interop_metricsJNI.new_static_run_metric__SWIG_1(static_run_metric_header.getCPtr(header), header), true);
  }

  public static_run_metric(short camera, short channel, int distortion_type, float_vector x_values, float_vector y_values) {
    this(interop_metricsJNI.new_static_run_metric__SWIG_2(camera, channel, distortion_type, float_vector.getCPtr(x_values), x_values, float_vector.getCPtr(y_values), y_values), true);
  }

  public static_run_metric(long curve_length, long curve_check) {
    this(interop_metricsJNI.new_static_run_metric__SWIG_3(curve_length, curve_check), true);
  }

  public float x_values(long curve_length) {
    return interop_metricsJNI.static_run_metric_x_values(swigCPtr, this, curve_length);
  }

  public float y_values(long curve_check) {
    return interop_metricsJNI.static_run_metric_y_values(swigCPtr, this, curve_check);
  }

  public static String prefix() {
    return interop_metricsJNI.static_run_metric_prefix();
  }

  public final static int TYPE = interop_metricsJNI.static_run_metric_TYPE_get();
  public final static int LATEST_VERSION = interop_metricsJNI.static_run_metric_LATEST_VERSION_get();

}
