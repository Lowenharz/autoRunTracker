/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public final class column_id {
  public final static column_id LaneColumn = new column_id("LaneColumn");
  public final static column_id TileColumn = new column_id("TileColumn");
  public final static column_id CycleColumn = new column_id("CycleColumn");
  public final static column_id ReadColumn = new column_id("ReadColumn");
  public final static column_id CycleWithinReadColumn = new column_id("CycleWithinReadColumn");
  public final static column_id DensityKPermm2Column = new column_id("DensityKPermm2Column");
  public final static column_id DensityPfKPermm2Column = new column_id("DensityPfKPermm2Column");
  public final static column_id ClusterCountKColumn = new column_id("ClusterCountKColumn");
  public final static column_id ClusterCountPfKColumn = new column_id("ClusterCountPfKColumn");
  public final static column_id PercentPassFilterColumn = new column_id("PercentPassFilterColumn");
  public final static column_id PercentAlignedColumn = new column_id("PercentAlignedColumn");
  public final static column_id PercentPhasingColumn = new column_id("PercentPhasingColumn");
  public final static column_id PercentPrephasingColumn = new column_id("PercentPrephasingColumn");
  public final static column_id ErrorRateColumn = new column_id("ErrorRateColumn");
  public final static column_id PercentGreaterThanQ20Column = new column_id("PercentGreaterThanQ20Column");
  public final static column_id PercentGreaterThanQ30Column = new column_id("PercentGreaterThanQ30Column");
  public final static column_id P90Column = new column_id("P90Column");
  public final static column_id PercentNoCallsColumn = new column_id("PercentNoCallsColumn");
  public final static column_id PercentBaseColumn = new column_id("PercentBaseColumn");
  public final static column_id FwhmColumn = new column_id("FwhmColumn");
  public final static column_id CorrectedColumn = new column_id("CorrectedColumn");
  public final static column_id CalledColumn = new column_id("CalledColumn");
  public final static column_id SignalToNoiseColumn = new column_id("SignalToNoiseColumn");
  public final static column_id PercentPhasingWeightColumn = new column_id("PercentPhasingWeightColumn");
  public final static column_id PercentPrephasingWeightColumn = new column_id("PercentPrephasingWeightColumn");
  public final static column_id PhasingSlopeColumn = new column_id("PhasingSlopeColumn");
  public final static column_id PhasingOffsetColumn = new column_id("PhasingOffsetColumn");
  public final static column_id PrephasingSlopeColumn = new column_id("PrephasingSlopeColumn");
  public final static column_id PrephasingOffsetColumn = new column_id("PrephasingOffsetColumn");
  public final static column_id MinimumContrastColumn = new column_id("MinimumContrastColumn");
  public final static column_id MaximumContrastColumn = new column_id("MaximumContrastColumn");
  public final static column_id SurfaceColumn = new column_id("SurfaceColumn");
  public final static column_id SwathColumn = new column_id("SwathColumn");
  public final static column_id SectionColumn = new column_id("SectionColumn");
  public final static column_id TileNumberColumn = new column_id("TileNumberColumn");
  public final static column_id AffineTransformColumn = new column_id("AffineTransformColumn");
  public final static column_id SubtileOffsetsColumn = new column_id("SubtileOffsetsColumn");
  public final static column_id UpperLeftOffsetColumn = new column_id("UpperLeftOffsetColumn");
  public final static column_id ColorMatrixColumn = new column_id("ColorMatrixColumn");
  public final static column_id ClusterCountOccupiedKColumn = new column_id("ClusterCountOccupiedKColumn");
  public final static column_id PercentOccupiedColumn = new column_id("PercentOccupiedColumn");
  public final static column_id CloudCentroidColumn = new column_id("CloudCentroidColumn");
  public final static column_id ConfusionMatrixColumn = new column_id("ConfusionMatrixColumn");
  public final static column_id MaxResidualErrorColumn = new column_id("MaxResidualErrorColumn");
  public final static column_id CloudDeterminantColumn = new column_id("CloudDeterminantColumn");
  public final static column_id ImagingColumnCount = new column_id("ImagingColumnCount");
  public final static column_id UnknownColumnId = new column_id("UnknownColumnId", interop_tableJNI.UnknownColumnId_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static column_id swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + column_id.class + " with value " + swigValue);
  }

  private column_id(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private column_id(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private column_id(String swigName, column_id swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static column_id[] swigValues = { LaneColumn, TileColumn, CycleColumn, ReadColumn, CycleWithinReadColumn, DensityKPermm2Column, DensityPfKPermm2Column, ClusterCountKColumn, ClusterCountPfKColumn, PercentPassFilterColumn, PercentAlignedColumn, PercentPhasingColumn, PercentPrephasingColumn, ErrorRateColumn, PercentGreaterThanQ20Column, PercentGreaterThanQ30Column, P90Column, PercentNoCallsColumn, PercentBaseColumn, FwhmColumn, CorrectedColumn, CalledColumn, SignalToNoiseColumn, PercentPhasingWeightColumn, PercentPrephasingWeightColumn, PhasingSlopeColumn, PhasingOffsetColumn, PrephasingSlopeColumn, PrephasingOffsetColumn, MinimumContrastColumn, MaximumContrastColumn, SurfaceColumn, SwathColumn, SectionColumn, TileNumberColumn, AffineTransformColumn, SubtileOffsetsColumn, UpperLeftOffsetColumn, ColorMatrixColumn, ClusterCountOccupiedKColumn, PercentOccupiedColumn, CloudCentroidColumn, ConfusionMatrixColumn, MaxResidualErrorColumn, CloudDeterminantColumn, ImagingColumnCount, UnknownColumnId };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

