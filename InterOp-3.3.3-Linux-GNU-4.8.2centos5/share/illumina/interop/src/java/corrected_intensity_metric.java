/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class corrected_intensity_metric extends base_cycle_metric {
  private transient long swigCPtr;

  protected corrected_intensity_metric(long cPtr, boolean cMemoryOwn) {
    super(interop_metricsJNI.corrected_intensity_metric_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(corrected_intensity_metric obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_metricsJNI.delete_corrected_intensity_metric(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public corrected_intensity_metric() {
    this(interop_metricsJNI.new_corrected_intensity_metric__SWIG_0(), true);
  }

  public corrected_intensity_metric(base_cycle_metric_header arg0) {
    this(interop_metricsJNI.new_corrected_intensity_metric__SWIG_1(base_cycle_metric_header.getCPtr(arg0), arg0), true);
  }

  public corrected_intensity_metric(long lane, long tile, long cycle, int average_cycle_intensity, float signal_to_noise, float_vector corrected_int_called, ushort_vector corrected_int_all, uint_vector called_counts) {
    this(interop_metricsJNI.new_corrected_intensity_metric__SWIG_2(lane, tile, cycle, average_cycle_intensity, signal_to_noise, float_vector.getCPtr(corrected_int_called), corrected_int_called, ushort_vector.getCPtr(corrected_int_all), corrected_int_all, uint_vector.getCPtr(called_counts), called_counts), true);
  }

  public corrected_intensity_metric(long lane, long tile, long cycle, int average_cycle_intensity, float signal_to_noise, float[] corrected_int_called, short[] corrected_int_all, int[] called_counts) {
    this(interop_metricsJNI.new_corrected_intensity_metric__SWIG_3(lane, tile, cycle, average_cycle_intensity, signal_to_noise, corrected_int_called, corrected_int_all, called_counts), true);
  }

  public corrected_intensity_metric(long lane, long tile, long cycle, float_vector corrected_int_called, uint_vector called_counts) {
    this(interop_metricsJNI.new_corrected_intensity_metric__SWIG_4(lane, tile, cycle, float_vector.getCPtr(corrected_int_called), corrected_int_called, uint_vector.getCPtr(called_counts), called_counts), true);
  }

  public corrected_intensity_metric(long lane, long tile, long cycle, short[] corrected_int_called, int[] called_counts) {
    this(interop_metricsJNI.new_corrected_intensity_metric__SWIG_5(lane, tile, cycle, corrected_int_called, called_counts), true);
  }

  public corrected_intensity_metric(long lane, long tile, long cycle, uint_vector called_counts) {
    this(interop_metricsJNI.new_corrected_intensity_metric__SWIG_6(lane, tile, cycle, uint_vector.getCPtr(called_counts), called_counts), true);
  }

  public void set(long lane, long tile, long cycle, uint_vector called_counts) {
    interop_metricsJNI.corrected_intensity_metric_set(swigCPtr, this, lane, tile, cycle, uint_vector.getCPtr(called_counts), called_counts);
  }

  public int average_cycle_intensity() {
    return interop_metricsJNI.corrected_intensity_metric_average_cycle_intensity(swigCPtr, this);
  }

  public int corrected_int_all(dna_bases index) throws index_out_of_bounds_exception {
    return interop_metricsJNI.corrected_intensity_metric_corrected_int_all(swigCPtr, this, index.swigValue());
  }

  public float corrected_int_all_float(dna_bases index) throws index_out_of_bounds_exception {
    return interop_metricsJNI.corrected_intensity_metric_corrected_int_all_float(swigCPtr, this, index.swigValue());
  }

  public float corrected_int_called(dna_bases index) throws index_out_of_bounds_exception {
    return interop_metricsJNI.corrected_intensity_metric_corrected_int_called(swigCPtr, this, index.swigValue());
  }

  public uint_vector called_counts_array() {
    return new uint_vector(interop_metricsJNI.corrected_intensity_metric_called_counts_array(swigCPtr, this), false);
  }

  public float_vector corrected_int_called_array() {
    return new float_vector(interop_metricsJNI.corrected_intensity_metric_corrected_int_called_array__SWIG_0(swigCPtr, this), false);
  }

  public ushort_vector corrected_int_all_array() {
    return new ushort_vector(interop_metricsJNI.corrected_intensity_metric_corrected_int_all_array(swigCPtr, this), false);
  }

  public long called_counts(dna_bases index) throws index_out_of_bounds_exception {
    return interop_metricsJNI.corrected_intensity_metric_called_counts(swigCPtr, this, index.swigValue());
  }

  public long no_calls() {
    return interop_metricsJNI.corrected_intensity_metric_no_calls(swigCPtr, this);
  }

  public float signal_to_noise() {
    return interop_metricsJNI.corrected_intensity_metric_signal_to_noise(swigCPtr, this);
  }

  public long total_calls(boolean nocalls) {
    return interop_metricsJNI.corrected_intensity_metric_total_calls__SWIG_0(swigCPtr, this, nocalls);
  }

  public long total_calls() {
    return interop_metricsJNI.corrected_intensity_metric_total_calls__SWIG_1(swigCPtr, this);
  }

  public long total_intensity() {
    return interop_metricsJNI.corrected_intensity_metric_total_intensity(swigCPtr, this);
  }

  public float total_called_intensity() {
    return interop_metricsJNI.corrected_intensity_metric_total_called_intensity(swigCPtr, this);
  }

  public float percent_base(dna_bases index) throws index_out_of_bounds_exception {
    return interop_metricsJNI.corrected_intensity_metric_percent_base(swigCPtr, this, index.swigValue());
  }

  public float_vector percent_bases() {
    return new float_vector(interop_metricsJNI.corrected_intensity_metric_percent_bases(swigCPtr, this), true);
  }

  public float percent_nocall() throws index_out_of_bounds_exception {
    return interop_metricsJNI.corrected_intensity_metric_percent_nocall(swigCPtr, this);
  }

  public void corrected_int_called_array(float_vector vals) {
    interop_metricsJNI.corrected_intensity_metric_corrected_int_called_array__SWIG_1(swigCPtr, this, float_vector.getCPtr(vals), vals);
  }

  public boolean any_valid_called_int() {
    return interop_metricsJNI.corrected_intensity_metric_any_valid_called_int(swigCPtr, this);
  }

  public int averageCycleIntensity() {
    return interop_metricsJNI.corrected_intensity_metric_averageCycleIntensity(swigCPtr, this);
  }

  public int correctedIntAll(long index) {
    return interop_metricsJNI.corrected_intensity_metric_correctedIntAll__SWIG_0(swigCPtr, this, index);
  }

  public float correctedIntCalled(long index) {
    return interop_metricsJNI.corrected_intensity_metric_correctedIntCalled__SWIG_0(swigCPtr, this, index);
  }

  public float_vector correctedIntCalled() {
    return new float_vector(interop_metricsJNI.corrected_intensity_metric_correctedIntCalled__SWIG_1(swigCPtr, this), false);
  }

  public ushort_vector correctedIntAll() {
    return new ushort_vector(interop_metricsJNI.corrected_intensity_metric_correctedIntAll__SWIG_1(swigCPtr, this), false);
  }

  public uint_vector calledCounts() {
    return new uint_vector(interop_metricsJNI.corrected_intensity_metric_calledCounts__SWIG_0(swigCPtr, this), false);
  }

  public long noCalls() {
    return interop_metricsJNI.corrected_intensity_metric_noCalls(swigCPtr, this);
  }

  public float percentBase(int index) {
    return interop_metricsJNI.corrected_intensity_metric_percentBase(swigCPtr, this, index);
  }

  public long calledCounts(int index) {
    return interop_metricsJNI.corrected_intensity_metric_calledCounts__SWIG_1(swigCPtr, this, index);
  }

  public float signalToNoise() {
    return interop_metricsJNI.corrected_intensity_metric_signalToNoise(swigCPtr, this);
  }

  public long totalCalls(boolean nocalls) {
    return interop_metricsJNI.corrected_intensity_metric_totalCalls__SWIG_0(swigCPtr, this, nocalls);
  }

  public long totalCalls() {
    return interop_metricsJNI.corrected_intensity_metric_totalCalls__SWIG_1(swigCPtr, this);
  }

  public long totalIntensity() {
    return interop_metricsJNI.corrected_intensity_metric_totalIntensity(swigCPtr, this);
  }

  public float totalCalledIntensity() {
    return interop_metricsJNI.corrected_intensity_metric_totalCalledIntensity(swigCPtr, this);
  }

  public float percentIntensity(long index) {
    return interop_metricsJNI.corrected_intensity_metric_percentIntensity(swigCPtr, this, index);
  }

  public float percentCalledIntensity(long index) {
    return interop_metricsJNI.corrected_intensity_metric_percentCalledIntensity(swigCPtr, this, index);
  }

  public static String prefix() {
    return interop_metricsJNI.corrected_intensity_metric_prefix();
  }

  public final static int TYPE = interop_metricsJNI.corrected_intensity_metric_TYPE_get();
  public final static int LATEST_VERSION = interop_metricsJNI.corrected_intensity_metric_LATEST_VERSION_get();

}
