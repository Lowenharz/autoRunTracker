/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class interop_tableJNI {

  static {
    System.loadLibrary("interop_table");
  }

  public final static native long new_map_id_offset__SWIG_0();
  public final static native long new_map_id_offset__SWIG_1(long jarg1, map_id_offset jarg1_);
  public final static native long map_id_offset_size(long jarg1, map_id_offset jarg1_);
  public final static native boolean map_id_offset_empty(long jarg1, map_id_offset jarg1_);
  public final static native void map_id_offset_clear(long jarg1, map_id_offset jarg1_);
  public final static native java.math.BigInteger map_id_offset_get(long jarg1, map_id_offset jarg1_, java.math.BigInteger jarg2);
  public final static native void map_id_offset_set(long jarg1, map_id_offset jarg1_, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native void map_id_offset_del(long jarg1, map_id_offset jarg1_, java.math.BigInteger jarg2);
  public final static native boolean map_id_offset_has_key(long jarg1, map_id_offset jarg1_, java.math.BigInteger jarg2);
  public final static native void delete_map_id_offset(long jarg1);
  public final static native int UnknownColumnId_get();
  public final static native long new_imaging_column__SWIG_0();
  public final static native long new_imaging_column__SWIG_1(long jarg1, long jarg2);
  public final static native long new_imaging_column__SWIG_2(long jarg1, long jarg2, long jarg3, string_vector jarg3_);
  public final static native int imaging_column_id__SWIG_0(long jarg1, imaging_column jarg1_);
  public final static native String imaging_column_name(long jarg1, imaging_column jarg1_);
  public final static native boolean imaging_column_has_children(long jarg1, imaging_column jarg1_);
  public final static native long imaging_column_offset__SWIG_0(long jarg1, imaging_column jarg1_);
  public final static native long imaging_column_subcolumns(long jarg1, imaging_column jarg1_);
  public final static native String imaging_column_full_name(long jarg1, imaging_column jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void imaging_column_offset__SWIG_1(long jarg1, imaging_column jarg1_, long jarg2);
  public final static native void imaging_column_id__SWIG_1(long jarg1, imaging_column jarg1_, int jarg2);
  public final static native void imaging_column_parse_header_for_id(long jarg1, imaging_column jarg1_, String jarg2);
  public final static native long imaging_column_size(long jarg1, imaging_column jarg1_);
  public final static native long imaging_column_column_count(long jarg1, imaging_column jarg1_);
  public final static native String imaging_column_to_header__SWIG_0(int jarg1);
  public final static native String imaging_column_to_header__SWIG_1(String jarg1);
  public final static native String imaging_column_to_name__SWIG_0(String jarg1);
  public final static native String imaging_column_to_name__SWIG_1(long jarg1, imaging_column jarg1_);
  public final static native void delete_imaging_column(long jarg1);
  public final static native long new_imaging_table();
  public final static native void imaging_table_set_data(long jarg1, imaging_table jarg1_, long jarg2, long jarg3, imaging_column_vector jarg3_, long jarg4, float_vector jarg4_);
  public final static native float imaging_table_at__SWIG_0(long jarg1, imaging_table jarg1_, long jarg2, int jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native float imaging_table_at__SWIG_1(long jarg1, imaging_table jarg1_, long jarg2, int jarg3) throws index_out_of_bounds_exception;
  public final static native long imaging_table_columns(long jarg1, imaging_table jarg1_);
  public final static native boolean imaging_table_empty(long jarg1, imaging_table jarg1_);
  public final static native void imaging_table_clear(long jarg1, imaging_table jarg1_);
  public final static native long imaging_table_column_at(long jarg1, imaging_table jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long imaging_table_column_count(long jarg1, imaging_table jarg1_);
  public final static native long imaging_table_total_column_count(long jarg1, imaging_table jarg1_);
  public final static native long imaging_table_row_count(long jarg1, imaging_table jarg1_);
  public final static native void delete_imaging_table(long jarg1);
  public final static native long new_imaging_table_id_less(long jarg1, imaging_table jarg1_);
  public final static native void delete_imaging_table_id_less(long jarg1);
  public final static native long new_invalid_column_type(String jarg1);
  public final static native void delete_invalid_column_type(long jarg1);
  public final static native long new_imaging_column_vector__SWIG_0();
  public final static native long new_imaging_column_vector__SWIG_1(long jarg1);
  public final static native long imaging_column_vector_size(long jarg1, imaging_column_vector jarg1_);
  public final static native long imaging_column_vector_capacity(long jarg1, imaging_column_vector jarg1_);
  public final static native void imaging_column_vector_reserve(long jarg1, imaging_column_vector jarg1_, long jarg2);
  public final static native boolean imaging_column_vector_isEmpty(long jarg1, imaging_column_vector jarg1_);
  public final static native void imaging_column_vector_clear(long jarg1, imaging_column_vector jarg1_);
  public final static native void imaging_column_vector_add(long jarg1, imaging_column_vector jarg1_, long jarg2, imaging_column jarg2_);
  public final static native long imaging_column_vector_get(long jarg1, imaging_column_vector jarg1_, int jarg2);
  public final static native void imaging_column_vector_set(long jarg1, imaging_column_vector jarg1_, int jarg2, long jarg3, imaging_column jarg3_);
  public final static native void delete_imaging_column_vector(long jarg1);
  public final static native void populate_imaging_table_data(long jarg1, run_metrics jarg1_, long jarg2, imaging_column_vector jarg2_, long jarg3, map_id_offset jarg3_, float[] jarg4, long jarg5) throws index_out_of_bounds_exception;
  public final static native void count_table_rows(long jarg1, run_metrics jarg1_, long jarg2, map_id_offset jarg2_);
  public final static native long count_table_columns__SWIG_0(long jarg1, imaging_column_vector jarg1_);
  public final static native void create_imaging_table(long jarg1, run_metrics jarg1_, long jarg2, imaging_table jarg2_) throws invalid_column_type, index_out_of_bounds_exception;
  public final static native void list_imaging_table_metrics_to_load(long jarg1, uchar_vector jarg1_, boolean jarg2);
  public final static native long max_digits();
  public final static native long get_column_rounding(int jarg1);
  public final static native void create_imaging_table_columns__SWIG_0(long jarg1, string_vector jarg1_, long jarg2, bool_vector jarg2_, long jarg3, imaging_column_vector jarg3_, long jarg4, int jarg5) throws invalid_column_type, index_out_of_bounds_exception, invalid_channel_exception;
  public final static native void populate_column_offsets__SWIG_0(long jarg1, imaging_column_vector jarg1_) throws invalid_column_type;
  public final static native void create_imaging_table_columns__SWIG_1(long jarg1, run_metrics jarg1_, long jarg2, imaging_column_vector jarg2_) throws invalid_column_type, index_out_of_bounds_exception, invalid_channel_exception;
  public final static native int UnknownEventColumnId_get();
  public final static native long new_event_column__SWIG_0();
  public final static native long new_event_column__SWIG_1(int jarg1);
  public final static native long new_event_column__SWIG_2(long jarg1);
  public final static native int event_column_id__SWIG_0(long jarg1, event_column jarg1_);
  public final static native String event_column_name(long jarg1, event_column jarg1_);
  public final static native long event_column_offset__SWIG_0(long jarg1, event_column jarg1_);
  public final static native void event_column_offset__SWIG_1(long jarg1, event_column jarg1_, long jarg2);
  public final static native void event_column_id__SWIG_1(long jarg1, event_column jarg1_, int jarg2);
  public final static native void event_column_parse_header_for_id(long jarg1, event_column jarg1_, String jarg2);
  public final static native long event_column_size(long jarg1, event_column jarg1_);
  public final static native long event_column_column_count(long jarg1, event_column jarg1_);
  public final static native String event_column_to_header__SWIG_0(int jarg1);
  public final static native String event_column_to_header__SWIG_1(String jarg1);
  public final static native String event_column_to_name__SWIG_0(String jarg1);
  public final static native String event_column_to_name__SWIG_1(long jarg1, event_column jarg1_);
  public final static native void delete_event_column(long jarg1);
  public final static native long new_event_table();
  public final static native void event_table_set_data(long jarg1, event_table jarg1_, long jarg2, long jarg3, event_column_vector jarg3_, long jarg4, ulong_vector jarg4_);
  public final static native java.math.BigInteger event_table_at(long jarg1, event_table jarg1_, long jarg2, int jarg3) throws index_out_of_bounds_exception;
  public final static native long event_table_columns(long jarg1, event_table jarg1_);
  public final static native boolean event_table_empty(long jarg1, event_table jarg1_);
  public final static native void event_table_clear(long jarg1, event_table jarg1_);
  public final static native long event_table_column_at(long jarg1, event_table jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long event_table_column_count(long jarg1, event_table jarg1_);
  public final static native long event_table_total_column_count(long jarg1, event_table jarg1_);
  public final static native long event_table_row_count(long jarg1, event_table jarg1_);
  public final static native void delete_event_table(long jarg1);
  public final static native long new_event_table_id_less(long jarg1, event_table jarg1_);
  public final static native void delete_event_table_id_less(long jarg1);
  public final static native long new_event_column_vector__SWIG_0();
  public final static native long new_event_column_vector__SWIG_1(long jarg1);
  public final static native long event_column_vector_size(long jarg1, event_column_vector jarg1_);
  public final static native long event_column_vector_capacity(long jarg1, event_column_vector jarg1_);
  public final static native void event_column_vector_reserve(long jarg1, event_column_vector jarg1_, long jarg2);
  public final static native boolean event_column_vector_isEmpty(long jarg1, event_column_vector jarg1_);
  public final static native void event_column_vector_clear(long jarg1, event_column_vector jarg1_);
  public final static native void event_column_vector_add(long jarg1, event_column_vector jarg1_, long jarg2, event_column jarg2_);
  public final static native long event_column_vector_get(long jarg1, event_column_vector jarg1_, int jarg2);
  public final static native void event_column_vector_set(long jarg1, event_column_vector jarg1_, int jarg2, long jarg3, event_column jarg3_);
  public final static native void delete_event_column_vector(long jarg1);
  public final static native void populate_event_table_data(long jarg1, run_metrics jarg1_, long jarg2, event_column_vector jarg2_, long jarg3, map_id_offset jarg3_, long[] jarg4, long jarg5);
  public final static native void count_event_table_rows(long jarg1, run_metrics jarg1_, long jarg2, map_id_offset jarg2_);
  public final static native long count_table_columns__SWIG_1(long jarg1, event_column_vector jarg1_);
  public final static native void create_event_table(long jarg1, run_metrics jarg1_, long jarg2, event_table jarg2_) throws invalid_column_type, index_out_of_bounds_exception;
  public final static native void list_event_metrics(long jarg1, string_vector jarg1_);
  public final static native void create_event_table_columns__SWIG_0(long jarg1, event_column_vector jarg1_) throws invalid_column_type, index_out_of_bounds_exception, invalid_channel_exception;
  public final static native void populate_column_offsets__SWIG_1(long jarg1, event_column_vector jarg1_) throws invalid_column_type;
  public final static native void create_event_table_columns__SWIG_1(long jarg1, run_metrics jarg1_, long jarg2, event_column_vector jarg2_) throws invalid_column_type, index_out_of_bounds_exception, invalid_channel_exception;
  public final static native int UnknownRunDiagnosticsColumnId_get();
  public final static native long new_run_diagnostics_column__SWIG_0();
  public final static native long new_run_diagnostics_column__SWIG_1(int jarg1);
  public final static native long new_run_diagnostics_column__SWIG_2(long jarg1, long jarg2);
  public final static native long new_run_diagnostics_column__SWIG_3(long jarg1, long jarg2, long jarg3, string_vector jarg3_);
  public final static native int run_diagnostics_column_id__SWIG_0(long jarg1, run_diagnostics_column jarg1_);
  public final static native String run_diagnostics_column_name(long jarg1, run_diagnostics_column jarg1_);
  public final static native boolean run_diagnostics_column_has_children(long jarg1, run_diagnostics_column jarg1_);
  public final static native long run_diagnostics_column_offset__SWIG_0(long jarg1, run_diagnostics_column jarg1_);
  public final static native long run_diagnostics_column_subcolumns(long jarg1, run_diagnostics_column jarg1_);
  public final static native String run_diagnostics_column_full_name(long jarg1, run_diagnostics_column jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void run_diagnostics_column_offset__SWIG_1(long jarg1, run_diagnostics_column jarg1_, long jarg2);
  public final static native void run_diagnostics_column_id__SWIG_1(long jarg1, run_diagnostics_column jarg1_, int jarg2);
  public final static native void run_diagnostics_column_parse_header_for_id(long jarg1, run_diagnostics_column jarg1_, String jarg2);
  public final static native long run_diagnostics_column_size(long jarg1, run_diagnostics_column jarg1_);
  public final static native long run_diagnostics_column_column_count(long jarg1, run_diagnostics_column jarg1_);
  public final static native String run_diagnostics_column_to_header__SWIG_0(int jarg1);
  public final static native String run_diagnostics_column_to_header__SWIG_1(String jarg1);
  public final static native String run_diagnostics_column_to_name__SWIG_0(String jarg1);
  public final static native String run_diagnostics_column_to_name__SWIG_1(long jarg1, run_diagnostics_column jarg1_);
  public final static native void delete_run_diagnostics_column(long jarg1);
  public final static native long new_run_diagnostics_table();
  public final static native void run_diagnostics_table_set_data(long jarg1, run_diagnostics_table jarg1_, long jarg2, long jarg3, run_diagnostics_column_vector jarg3_, long jarg4, ulong_vector jarg4_);
  public final static native java.math.BigInteger run_diagnostics_table_at(long jarg1, run_diagnostics_table jarg1_, long jarg2, int jarg3) throws index_out_of_bounds_exception;
  public final static native long run_diagnostics_table_columns(long jarg1, run_diagnostics_table jarg1_);
  public final static native boolean run_diagnostics_table_empty(long jarg1, run_diagnostics_table jarg1_);
  public final static native void run_diagnostics_table_clear(long jarg1, run_diagnostics_table jarg1_);
  public final static native long run_diagnostics_table_column_at(long jarg1, run_diagnostics_table jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long run_diagnostics_table_column_count(long jarg1, run_diagnostics_table jarg1_);
  public final static native long run_diagnostics_table_total_column_count(long jarg1, run_diagnostics_table jarg1_);
  public final static native long run_diagnostics_table_row_count(long jarg1, run_diagnostics_table jarg1_);
  public final static native void delete_run_diagnostics_table(long jarg1);
  public final static native long new_run_diagnostics_column_vector__SWIG_0();
  public final static native long new_run_diagnostics_column_vector__SWIG_1(long jarg1);
  public final static native long run_diagnostics_column_vector_size(long jarg1, run_diagnostics_column_vector jarg1_);
  public final static native long run_diagnostics_column_vector_capacity(long jarg1, run_diagnostics_column_vector jarg1_);
  public final static native void run_diagnostics_column_vector_reserve(long jarg1, run_diagnostics_column_vector jarg1_, long jarg2);
  public final static native boolean run_diagnostics_column_vector_isEmpty(long jarg1, run_diagnostics_column_vector jarg1_);
  public final static native void run_diagnostics_column_vector_clear(long jarg1, run_diagnostics_column_vector jarg1_);
  public final static native void run_diagnostics_column_vector_add(long jarg1, run_diagnostics_column_vector jarg1_, long jarg2, run_diagnostics_column jarg2_);
  public final static native long run_diagnostics_column_vector_get(long jarg1, run_diagnostics_column_vector jarg1_, int jarg2);
  public final static native void run_diagnostics_column_vector_set(long jarg1, run_diagnostics_column_vector jarg1_, int jarg2, long jarg3, run_diagnostics_column jarg3_);
  public final static native void delete_run_diagnostics_column_vector(long jarg1);
  public final static native void populate_run_diagnostics_table_data(long jarg1, run_metrics jarg1_, long jarg2, run_diagnostics_column_vector jarg2_, long jarg3, map_id_offset jarg3_, long[] jarg4, long jarg5);
  public final static native void count_run_diagnostics_table_rows(long jarg1, run_metrics jarg1_, long jarg2, map_id_offset jarg2_);
  public final static native long count_table_columns__SWIG_2(long jarg1, run_diagnostics_column_vector jarg1_);
  public final static native void create_run_diagnostics_table(long jarg1, run_metrics jarg1_, long jarg2, run_diagnostics_table jarg2_) throws invalid_column_type, index_out_of_bounds_exception;
  public final static native void list_run_diagnostics_metrics(long jarg1, string_vector jarg1_);
  public final static native void create_run_diagnostics_table_columns__SWIG_0(long jarg1, run_diagnostics_column_vector jarg1_, long jarg2, bool_vector jarg2_) throws invalid_column_type, index_out_of_bounds_exception, invalid_channel_exception;
  public final static native void populate_column_offsets__SWIG_2(long jarg1, run_diagnostics_column_vector jarg1_) throws invalid_column_type;
  public final static native void create_run_diagnostics_table_columns__SWIG_1(long jarg1, run_metrics jarg1_, long jarg2, run_diagnostics_column_vector jarg2_) throws invalid_column_type, index_out_of_bounds_exception, invalid_channel_exception;
  public final static native long invalid_column_type_SWIGUpcast(long jarg1);
}
