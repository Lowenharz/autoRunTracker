/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public final class metric_base_type {
  public final static metric_base_type BaseTileType = new metric_base_type("BaseTileType");
  public final static metric_base_type BaseCycleType = new metric_base_type("BaseCycleType");
  public final static metric_base_type BaseReadType = new metric_base_type("BaseReadType");
  public final static metric_base_type BaseLaneType = new metric_base_type("BaseLaneType");
  public final static metric_base_type BaseRunType = new metric_base_type("BaseRunType");
  public final static metric_base_type BaseEventV1Type = new metric_base_type("BaseEventV1Type");
  public final static metric_base_type BaseEventV2Type = new metric_base_type("BaseEventV2Type");
  public final static metric_base_type BaseMetricCount = new metric_base_type("BaseMetricCount");
  public final static metric_base_type UnknownBaseType = new metric_base_type("UnknownBaseType", interop_runJNI.UnknownBaseType_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static metric_base_type swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + metric_base_type.class + " with value " + swigValue);
  }

  private metric_base_type(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private metric_base_type(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private metric_base_type(String swigName, metric_base_type swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static metric_base_type[] swigValues = { BaseTileType, BaseCycleType, BaseReadType, BaseLaneType, BaseRunType, BaseEventV1Type, BaseEventV2Type, BaseMetricCount, UnknownBaseType };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

