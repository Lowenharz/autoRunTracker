/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class interop_plotJNI {

  static {
    System.loadLibrary("interop_plot");
  }

  public final static native long new_invalid_filter_option(String jarg1);
  public final static native void delete_invalid_filter_option(long jarg1);
  public final static native long new_axis();
  public final static native void axis_set_range(long jarg1, axis jarg1_, float jarg2, float jarg3);
  public final static native void axis_set_label(long jarg1, axis jarg1_, String jarg2);
  public final static native String axis_label(long jarg1, axis jarg1_);
  public final static native float axis_min(long jarg1, axis jarg1_);
  public final static native float axis_max(long jarg1, axis jarg1_);
  public final static native void axis_clear(long jarg1, axis jarg1_);
  public final static native void delete_axis(long jarg1);
  public final static native void axes_set_range(long jarg1, axes jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void axes_set_xrange(long jarg1, axes jarg1_, float jarg2, float jarg3);
  public final static native void axes_set_yrange(long jarg1, axes jarg1_, float jarg2, float jarg3);
  public final static native void axes_set_xlabel(long jarg1, axes jarg1_, String jarg2);
  public final static native void axes_set_ylabel(long jarg1, axes jarg1_, String jarg2);
  public final static native String axes_xlabel(long jarg1, axes jarg1_);
  public final static native String axes_ylabel(long jarg1, axes jarg1_);
  public final static native void axes_set_xaxis(long jarg1, axes jarg1_, long jarg2, axis jarg2_);
  public final static native void axes_set_yaxis(long jarg1, axes jarg1_, long jarg2, axis jarg2_);
  public final static native long axes_x(long jarg1, axes jarg1_);
  public final static native long axes_y(long jarg1, axes jarg1_);
  public final static native void axes_clear(long jarg1, axes jarg1_);
  public final static native long new_axes();
  public final static native void delete_axes(long jarg1);
  public final static native int filter_options_ALL_IDS_get();
  public final static native int filter_options_ALL_CHANNELS_get();
  public final static native int filter_options_ALL_BASES_get();
  public final static native long new_filter_options__SWIG_0(int jarg1, long jarg2, short jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10);
  public final static native long new_filter_options__SWIG_1(int jarg1, long jarg2, short jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native long new_filter_options__SWIG_2(int jarg1, long jarg2, short jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native long new_filter_options__SWIG_3(int jarg1, long jarg2, short jarg3, int jarg4, long jarg5, long jarg6, long jarg7);
  public final static native long new_filter_options__SWIG_4(int jarg1, long jarg2, short jarg3, int jarg4, long jarg5, long jarg6);
  public final static native long new_filter_options__SWIG_5(int jarg1, long jarg2, short jarg3, int jarg4, long jarg5);
  public final static native long new_filter_options__SWIG_6(int jarg1, long jarg2, short jarg3, int jarg4);
  public final static native long new_filter_options__SWIG_7(int jarg1, long jarg2, short jarg3);
  public final static native long new_filter_options__SWIG_8(int jarg1, long jarg2);
  public final static native long new_filter_options__SWIG_9(int jarg1);
  public final static native void filter_options_reset(long jarg1, filter_options jarg1_);
  public final static native void filter_options_validate__SWIG_0(long jarg1, filter_options jarg1_, int jarg2, long jarg3, info jarg3_, boolean jarg4) throws invalid_filter_option;
  public final static native void filter_options_validate__SWIG_1(long jarg1, filter_options jarg1_, int jarg2, long jarg3, info jarg3_) throws invalid_filter_option;
  public final static native boolean filter_options_all_channels__SWIG_0(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_all_channels__SWIG_1(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_all_bases__SWIG_0(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_all_bases__SWIG_1(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_all_reads(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_all_cycles(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_all_lanes(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_all_tile_numbers(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_all_swaths(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_all_sections(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_is_specific_read__SWIG_0(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_is_specific_read__SWIG_1(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_is_specific_surface(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_valid_lane(long jarg1, filter_options jarg1_, long jarg2);
  public final static native boolean filter_options_valid_surface(long jarg1, filter_options jarg1_, long jarg2);
  public final static native boolean filter_options_valid_read(long jarg1, filter_options jarg1_, long jarg2);
  public final static native boolean filter_options_valid_cycle(long jarg1, filter_options jarg1_, long jarg2);
  public final static native boolean filter_options_valid_tile_number(long jarg1, filter_options jarg1_, long jarg2);
  public final static native boolean filter_options_valid_swath(long jarg1, filter_options jarg1_, long jarg2);
  public final static native boolean filter_options_valid_section(long jarg1, filter_options jarg1_, long jarg2);
  public final static native boolean filter_options_valid_channel(long jarg1, filter_options jarg1_, short jarg2);
  public final static native boolean filter_options_valid_base(long jarg1, filter_options jarg1_, int jarg2);
  public final static native void filter_options_tile_naming_method(long jarg1, filter_options jarg1_, int jarg2);
  public final static native void filter_options_channel__SWIG_0(long jarg1, filter_options jarg1_, short jarg2);
  public final static native void filter_options_dna_base__SWIG_0(long jarg1, filter_options jarg1_, int jarg2);
  public final static native void filter_options_read__SWIG_0(long jarg1, filter_options jarg1_, long jarg2);
  public final static native void filter_options_cycle__SWIG_0(long jarg1, filter_options jarg1_, long jarg2);
  public final static native void filter_options_surface__SWIG_0(long jarg1, filter_options jarg1_, long jarg2);
  public final static native void filter_options_swath(long jarg1, filter_options jarg1_, long jarg2);
  public final static native void filter_options_section(long jarg1, filter_options jarg1_, long jarg2);
  public final static native void filter_options_tile_number(long jarg1, filter_options jarg1_, long jarg2);
  public final static native void filter_options_lane__SWIG_0(long jarg1, filter_options jarg1_, long jarg2);
  public final static native long filter_options_lane__SWIG_1(long jarg1, filter_options jarg1_);
  public final static native short filter_options_channel__SWIG_1(long jarg1, filter_options jarg1_);
  public final static native int filter_options_dna_base__SWIG_1(long jarg1, filter_options jarg1_);
  public final static native long filter_options_read__SWIG_1(long jarg1, filter_options jarg1_);
  public final static native long filter_options_cycle__SWIG_1(long jarg1, filter_options jarg1_);
  public final static native long filter_options_surface__SWIG_1(long jarg1, filter_options jarg1_);
  public final static native String filter_options_cycle_description(long jarg1, filter_options jarg1_);
  public final static native String filter_options_lane_description(long jarg1, filter_options jarg1_);
  public final static native String filter_options_channel_description(long jarg1, filter_options jarg1_, long jarg2, string_vector jarg2_);
  public final static native String filter_options_base_description(long jarg1, filter_options jarg1_);
  public final static native String filter_options_surface_description(long jarg1, filter_options jarg1_);
  public final static native String filter_options_read_description(long jarg1, filter_options jarg1_);
  public final static native int filter_options_naming_method(long jarg1, filter_options jarg1_);
  public final static native boolean filter_options_supports_section(long jarg1, filter_options jarg1_, int jarg2, long jarg3, info jarg3_);
  public final static native boolean filter_options_supports_swath(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_supports_tile(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_supports_all_lanes(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_supports_lane(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_supports_all_bases(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_supports_base(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_supports_all_channels(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_supports_channel(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_supports_all_cycles(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_supports_cycle(long jarg1, filter_options jarg1_, int jarg2, int jarg3);
  public final static native boolean filter_options_supports_all_reads(long jarg1, filter_options jarg1_, int jarg2);
  public final static native boolean filter_options_supports_read(long jarg1, filter_options jarg1_, int jarg2, int jarg3);
  public final static native boolean filter_options_supports_surface(long jarg1, filter_options jarg1_, int jarg2, long jarg3, info jarg3_);
  public final static native void delete_filter_options(long jarg1);
  public final static native void chart_data_set_axes(long jarg1, chart_data jarg1_, long jarg2, axes jarg2_);
  public final static native void chart_data_set_xaxis(long jarg1, chart_data jarg1_, long jarg2, axis jarg2_);
  public final static native void chart_data_set_yaxis(long jarg1, chart_data jarg1_, long jarg2, axis jarg2_);
  public final static native void chart_data_set_xlabel(long jarg1, chart_data jarg1_, String jarg2);
  public final static native void chart_data_set_ylabel(long jarg1, chart_data jarg1_, String jarg2);
  public final static native void chart_data_set_range(long jarg1, chart_data jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void chart_data_set_xrange(long jarg1, chart_data jarg1_, float jarg2, float jarg3);
  public final static native void chart_data_set_yrange(long jarg1, chart_data jarg1_, float jarg2, float jarg3);
  public final static native long chart_data_x_axis(long jarg1, chart_data jarg1_);
  public final static native long chart_data_y_axis(long jarg1, chart_data jarg1_);
  public final static native void chart_data_set_title(long jarg1, chart_data jarg1_, String jarg2);
  public final static native String chart_data_title(long jarg1, chart_data jarg1_);
  public final static native long chart_data_xyaxes(long jarg1, chart_data jarg1_);
  public final static native void chart_data_clear(long jarg1, chart_data jarg1_);
  public final static native long new_chart_data();
  public final static native void delete_chart_data(long jarg1);
  public final static native long new_heatmap_data();
  public final static native void delete_heatmap_data(long jarg1);
  public final static native void heatmap_data_set_buffer__SWIG_0(long jarg1, heatmap_data jarg1_, float[] jarg2) throws invalid_parameter;
  public final static native void heatmap_data_set_buffer__SWIG_1(long jarg1, heatmap_data jarg1_, float[] jarg2, long jarg3, long jarg4, float jarg5);
  public final static native void heatmap_data_set_buffer__SWIG_2(long jarg1, heatmap_data jarg1_, float[] jarg2, long jarg3, long jarg4);
  public final static native void heatmap_data_resize__SWIG_0(long jarg1, heatmap_data jarg1_, long jarg2, long jarg3, float jarg4);
  public final static native void heatmap_data_resize__SWIG_1(long jarg1, heatmap_data jarg1_, long jarg2, long jarg3);
  public final static native float heatmap_data_at__SWIG_0(long jarg1, heatmap_data jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native float heatmap_data_at__SWIG_1(long jarg1, heatmap_data jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long heatmap_data_row_count(long jarg1, heatmap_data jarg1_);
  public final static native long heatmap_data_column_count(long jarg1, heatmap_data jarg1_);
  public final static native long heatmap_data_length(long jarg1, heatmap_data jarg1_);
  public final static native boolean heatmap_data_empty(long jarg1, heatmap_data jarg1_);
  public final static native void heatmap_data_clear(long jarg1, heatmap_data jarg1_);
  public final static native long heatmap_data_index_of(long jarg1, heatmap_data jarg1_, long jarg2, long jarg3);
  public final static native long new_flowcell_data();
  public final static native void delete_flowcell_data(long jarg1);
  public final static native void flowcell_data_set_buffer(long jarg1, flowcell_data jarg1_, float[] jarg2, int[] jarg3, long jarg4, long jarg5, long jarg6) throws invalid_parameter;
  public final static native void flowcell_data_resize(long jarg1, flowcell_data jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void flowcell_data_clear(long jarg1, flowcell_data jarg1_);
  public final static native long flowcell_data_tile_at(long jarg1, flowcell_data jarg1_, long jarg2);
  public final static native void flowcell_data_set_data(long jarg1, flowcell_data jarg1_, long jarg2, long jarg3, long jarg4, float jarg5) throws index_out_of_bounds_exception;
  public final static native long flowcell_data_tile_id(long jarg1, flowcell_data jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native void flowcell_data_set_saxis(long jarg1, flowcell_data jarg1_, long jarg2, axis jarg2_);
  public final static native void flowcell_data_set_label(long jarg1, flowcell_data jarg1_, String jarg2);
  public final static native long flowcell_data_saxis(long jarg1, flowcell_data jarg1_);
  public final static native void flowcell_data_set_subtitle(long jarg1, flowcell_data jarg1_, String jarg2);
  public final static native void flowcell_data_set_range(long jarg1, flowcell_data jarg1_, float jarg2, float jarg3);
  public final static native String flowcell_data_subtitle(long jarg1, flowcell_data jarg1_);
  public final static native long flowcell_data_lane_count(long jarg1, flowcell_data jarg1_);
  public final static native long flowcell_data_swath_count(long jarg1, flowcell_data jarg1_);
  public final static native long flowcell_data_tile_count(long jarg1, flowcell_data jarg1_);
  public final static native long flowcell_data_total_tile_count(long jarg1, flowcell_data jarg1_);
  public final static native long new_subtile_data();
  public final static native void delete_subtile_data(long jarg1);
  public final static native void subtile_data_set_buffer__SWIG_0(long jarg1, subtile_data jarg1_, float[] jarg2, int[] jarg3) throws invalid_parameter;
  public final static native void subtile_data_set_buffer__SWIG_1(long jarg1, subtile_data jarg1_, float[] jarg2, int[] jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native void subtile_data_resize(long jarg1, subtile_data jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void subtile_data_set_data(long jarg1, subtile_data jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, float jarg7) throws index_out_of_bounds_exception;
  public final static native void subtile_data_populate_tile_data_at(long jarg1, subtile_data jarg1_, float[] jarg2, long jarg3, long jarg4, long jarg5);
  public final static native float subtile_data_at(long jarg1, subtile_data jarg1_, long jarg2, long jarg3, long jarg4, long jarg5) throws index_out_of_bounds_exception;
  public final static native long subtile_data_tile_id(long jarg1, subtile_data jarg1_, long jarg2, long jarg3, long jarg4, long jarg5) throws index_out_of_bounds_exception;
  public final static native long subtile_data_subtile_count_x(long jarg1, subtile_data jarg1_);
  public final static native long subtile_data_subtile_count_y(long jarg1, subtile_data jarg1_);
  public final static native void subtile_data_clear(long jarg1, subtile_data jarg1_);
  public final static native long subtile_data_index_of(long jarg1, subtile_data jarg1_, long jarg2, long jarg3, long jarg4, long jarg5) throws index_out_of_bounds_exception;
  public final static native long new_float_point__SWIG_0(float jarg1, float jarg2);
  public final static native long new_float_point__SWIG_1(float jarg1);
  public final static native long new_float_point__SWIG_2();
  public final static native float float_point_x(long jarg1, float_point jarg1_);
  public final static native float float_point_y(long jarg1, float_point jarg1_);
  public final static native float float_point_max_value(long jarg1, float_point jarg1_);
  public final static native float float_point_min_value(long jarg1, float_point jarg1_);
  public final static native void float_point_add(long jarg1, float_point jarg1_, float jarg2, float jarg3);
  public final static native void float_point_set(long jarg1, float_point jarg1_, float jarg2, float jarg3);
  public final static native void delete_float_point(long jarg1);
  public final static native long new_candle_stick_point__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, long jarg7, long jarg8, float_vector jarg8_);
  public final static native long new_candle_stick_point__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, long jarg7);
  public final static native long new_candle_stick_point__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native long new_candle_stick_point__SWIG_3(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native long new_candle_stick_point__SWIG_4(float jarg1, float jarg2, float jarg3, float jarg4);
  public final static native long new_candle_stick_point__SWIG_5(float jarg1, float jarg2, float jarg3);
  public final static native long new_candle_stick_point__SWIG_6(float jarg1, float jarg2);
  public final static native long new_candle_stick_point__SWIG_7(float jarg1);
  public final static native long new_candle_stick_point__SWIG_8();
  public final static native float candle_stick_point_max_value(long jarg1, candle_stick_point jarg1_);
  public final static native float candle_stick_point_min_value(long jarg1, candle_stick_point jarg1_);
  public final static native float candle_stick_point_p25(long jarg1, candle_stick_point jarg1_);
  public final static native float candle_stick_point_p50(long jarg1, candle_stick_point jarg1_);
  public final static native float candle_stick_point_p75(long jarg1, candle_stick_point jarg1_);
  public final static native float candle_stick_point_lower(long jarg1, candle_stick_point jarg1_);
  public final static native float candle_stick_point_upper(long jarg1, candle_stick_point jarg1_);
  public final static native long candle_stick_point_outliers(long jarg1, candle_stick_point jarg1_);
  public final static native long candle_stick_point_data_point_count(long jarg1, candle_stick_point jarg1_);
  public final static native void delete_candle_stick_point(long jarg1);
  public final static native long new_bar_point__SWIG_0(float jarg1, float jarg2, float jarg3);
  public final static native long new_bar_point__SWIG_1(float jarg1, float jarg2);
  public final static native long new_bar_point__SWIG_2(float jarg1);
  public final static native long new_bar_point__SWIG_3();
  public final static native void bar_point_set__SWIG_0(long jarg1, bar_point jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void bar_point_set__SWIG_1(long jarg1, bar_point jarg1_, float jarg2, float jarg3);
  public final static native float bar_point_width(long jarg1, bar_point jarg1_);
  public final static native float bar_point_min_value(long jarg1, bar_point jarg1_);
  public final static native void delete_bar_point(long jarg1);
  public final static native long new_bar_vector__SWIG_0();
  public final static native long new_bar_vector__SWIG_1(long jarg1);
  public final static native long bar_vector_size(long jarg1, bar_vector jarg1_);
  public final static native long bar_vector_capacity(long jarg1, bar_vector jarg1_);
  public final static native void bar_vector_reserve(long jarg1, bar_vector jarg1_, long jarg2);
  public final static native boolean bar_vector_isEmpty(long jarg1, bar_vector jarg1_);
  public final static native void bar_vector_clear(long jarg1, bar_vector jarg1_);
  public final static native void bar_vector_add(long jarg1, bar_vector jarg1_, long jarg2, bar_point jarg2_);
  public final static native long bar_vector_get(long jarg1, bar_vector jarg1_, int jarg2);
  public final static native void bar_vector_set(long jarg1, bar_vector jarg1_, int jarg2, long jarg3, bar_point jarg3_);
  public final static native void delete_bar_vector(long jarg1);
  public final static native long new_candle_stick_vector__SWIG_0();
  public final static native long new_candle_stick_vector__SWIG_1(long jarg1);
  public final static native long candle_stick_vector_size(long jarg1, candle_stick_vector jarg1_);
  public final static native long candle_stick_vector_capacity(long jarg1, candle_stick_vector jarg1_);
  public final static native void candle_stick_vector_reserve(long jarg1, candle_stick_vector jarg1_, long jarg2);
  public final static native boolean candle_stick_vector_isEmpty(long jarg1, candle_stick_vector jarg1_);
  public final static native void candle_stick_vector_clear(long jarg1, candle_stick_vector jarg1_);
  public final static native void candle_stick_vector_add(long jarg1, candle_stick_vector jarg1_, long jarg2, candle_stick_point jarg2_);
  public final static native long candle_stick_vector_get(long jarg1, candle_stick_vector jarg1_, int jarg2);
  public final static native void candle_stick_vector_set(long jarg1, candle_stick_vector jarg1_, int jarg2, long jarg3, candle_stick_point jarg3_);
  public final static native void delete_candle_stick_vector(long jarg1);
  public final static native void candle_stick_collection_push_back(long jarg1, candle_stick_collection jarg1_, long jarg2, candle_stick_point jarg2_);
  public final static native long candle_stick_collection_at(long jarg1, candle_stick_collection jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long candle_stick_collection_size(long jarg1, candle_stick_collection jarg1_);
  public final static native void candle_stick_collection_assign(long jarg1, candle_stick_collection jarg1_, long jarg2, long jarg3, candle_stick_point jarg3_);
  public final static native void candle_stick_collection_resize(long jarg1, candle_stick_collection jarg1_, long jarg2);
  public final static native long new_candle_stick_collection();
  public final static native void delete_candle_stick_collection(long jarg1);
  public final static native void bar_collection_push_back(long jarg1, bar_collection jarg1_, long jarg2, bar_point jarg2_);
  public final static native long bar_collection_at(long jarg1, bar_collection jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long bar_collection_size(long jarg1, bar_collection jarg1_);
  public final static native void bar_collection_assign(long jarg1, bar_collection jarg1_, long jarg2, long jarg3, bar_point jarg3_);
  public final static native void bar_collection_resize(long jarg1, bar_collection jarg1_, long jarg2);
  public final static native long new_bar_collection();
  public final static native void delete_bar_collection(long jarg1);
  public final static native long new_candle_stick_series__SWIG_0(String jarg1, String jarg2, int jarg3);
  public final static native long new_candle_stick_series__SWIG_1(String jarg1, String jarg2);
  public final static native long new_candle_stick_series__SWIG_2(String jarg1);
  public final static native long new_candle_stick_series__SWIG_3();
  public final static native String candle_stick_series_title(long jarg1, candle_stick_series jarg1_);
  public final static native String candle_stick_series_color__SWIG_0(long jarg1, candle_stick_series jarg1_);
  public final static native int candle_stick_series_series_type(long jarg1, candle_stick_series jarg1_);
  public final static native long candle_stick_series_options(long jarg1, candle_stick_series jarg1_);
  public final static native void candle_stick_series_add_option(long jarg1, candle_stick_series jarg1_, String jarg2);
  public final static native void candle_stick_series_color__SWIG_1(long jarg1, candle_stick_series jarg1_, String jarg2);
  public final static native void delete_candle_stick_series(long jarg1);
  public final static native long new_bar_series__SWIG_0(String jarg1, String jarg2, int jarg3);
  public final static native long new_bar_series__SWIG_1(String jarg1, String jarg2);
  public final static native long new_bar_series__SWIG_2(String jarg1);
  public final static native long new_bar_series__SWIG_3();
  public final static native String bar_series_title(long jarg1, bar_series jarg1_);
  public final static native String bar_series_color__SWIG_0(long jarg1, bar_series jarg1_);
  public final static native int bar_series_series_type(long jarg1, bar_series jarg1_);
  public final static native long bar_series_options(long jarg1, bar_series jarg1_);
  public final static native void bar_series_add_option(long jarg1, bar_series jarg1_, String jarg2);
  public final static native void bar_series_color__SWIG_1(long jarg1, bar_series jarg1_, String jarg2);
  public final static native void delete_bar_series(long jarg1);
  public final static native void candle_stick_plot_data_clear(long jarg1, candle_stick_plot_data jarg1_);
  public final static native void candle_stick_plot_data_resize(long jarg1, candle_stick_plot_data jarg1_, long jarg2);
  public final static native void candle_stick_plot_data_assign(long jarg1, candle_stick_plot_data jarg1_, long jarg2, long jarg3, candle_stick_series jarg3_);
  public final static native void candle_stick_plot_data_push_back(long jarg1, candle_stick_plot_data jarg1_, long jarg2, candle_stick_series jarg2_);
  public final static native long candle_stick_plot_data_at(long jarg1, candle_stick_plot_data jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long candle_stick_plot_data_size(long jarg1, candle_stick_plot_data jarg1_);
  public final static native boolean candle_stick_plot_data_empty(long jarg1, candle_stick_plot_data jarg1_);
  public final static native long new_candle_stick_plot_data();
  public final static native void delete_candle_stick_plot_data(long jarg1);
  public final static native void bar_plot_data_clear(long jarg1, bar_plot_data jarg1_);
  public final static native void bar_plot_data_resize(long jarg1, bar_plot_data jarg1_, long jarg2);
  public final static native void bar_plot_data_assign(long jarg1, bar_plot_data jarg1_, long jarg2, long jarg3, bar_series jarg3_);
  public final static native void bar_plot_data_push_back(long jarg1, bar_plot_data jarg1_, long jarg2, bar_series jarg2_);
  public final static native long bar_plot_data_at(long jarg1, bar_plot_data jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long bar_plot_data_size(long jarg1, bar_plot_data jarg1_);
  public final static native boolean bar_plot_data_empty(long jarg1, bar_plot_data jarg1_);
  public final static native long new_bar_plot_data();
  public final static native void delete_bar_plot_data(long jarg1);
  public final static native void plot_by_cycle__SWIG_0(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, candle_stick_plot_data jarg4_, boolean jarg5) throws index_out_of_bounds_exception, invalid_metric_type, invalid_channel_exception, invalid_filter_option, invalid_read_exception;
  public final static native void plot_by_cycle__SWIG_1(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, candle_stick_plot_data jarg4_) throws index_out_of_bounds_exception, invalid_metric_type, invalid_channel_exception, invalid_filter_option, invalid_read_exception;
  public final static native void plot_by_cycle__SWIG_2(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, candle_stick_plot_data jarg4_, boolean jarg5) throws index_out_of_bounds_exception, invalid_filter_option, invalid_channel_exception, invalid_metric_type;
  public final static native void plot_by_cycle__SWIG_3(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, candle_stick_plot_data jarg4_) throws index_out_of_bounds_exception, invalid_filter_option, invalid_channel_exception, invalid_metric_type;
  public final static native void list_by_cycle_metrics__SWIG_0(long jarg1, metric_type_description_vector jarg1_, boolean jarg2, boolean jarg3);
  public final static native void list_by_cycle_metrics__SWIG_1(long jarg1, metric_type_description_vector jarg1_, boolean jarg2);
  public final static native void filter_by_cycle_metrics__SWIG_0(long jarg1, metric_type_description_vector jarg1_, boolean jarg2, boolean jarg3);
  public final static native void filter_by_cycle_metrics__SWIG_1(long jarg1, metric_type_description_vector jarg1_, boolean jarg2);
  public final static native void plot_by_lane__SWIG_0(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, candle_stick_plot_data jarg4_, boolean jarg5) throws index_out_of_bounds_exception, invalid_metric_type, invalid_filter_option;
  public final static native void plot_by_lane__SWIG_1(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, candle_stick_plot_data jarg4_) throws index_out_of_bounds_exception, invalid_metric_type, invalid_filter_option;
  public final static native void plot_by_lane__SWIG_2(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, candle_stick_plot_data jarg4_, boolean jarg5) throws index_out_of_bounds_exception, invalid_metric_type, invalid_filter_option;
  public final static native void plot_by_lane__SWIG_3(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, candle_stick_plot_data jarg4_) throws index_out_of_bounds_exception, invalid_metric_type, invalid_filter_option;
  public final static native void list_by_lane_metrics__SWIG_0(long jarg1, metric_type_description_vector jarg1_, boolean jarg2, boolean jarg3);
  public final static native void list_by_lane_metrics__SWIG_1(long jarg1, metric_type_description_vector jarg1_, boolean jarg2);
  public final static native void filter_by_lane_metrics__SWIG_0(long jarg1, metric_type_description_vector jarg1_, boolean jarg2, boolean jarg3);
  public final static native void filter_by_lane_metrics__SWIG_1(long jarg1, metric_type_description_vector jarg1_, boolean jarg2);
  public final static native void plot_qscore_histogram__SWIG_0(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_, long jarg3, bar_plot_data jarg3_, long jarg4) throws invalid_read_exception, index_out_of_bounds_exception, invalid_filter_option;
  public final static native void plot_qscore_histogram__SWIG_1(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_, long jarg3, bar_plot_data jarg3_) throws invalid_read_exception, index_out_of_bounds_exception, invalid_filter_option;
  public final static native void plot_qscore_heatmap__SWIG_0(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_, long jarg3, heatmap_data jarg3_, float[] jarg4, long jarg5) throws index_out_of_bounds_exception, invalid_filter_option;
  public final static native void plot_qscore_heatmap__SWIG_1(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_, long jarg3, heatmap_data jarg3_, float[] jarg4) throws index_out_of_bounds_exception, invalid_filter_option;
  public final static native void plot_qscore_heatmap__SWIG_2(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_, long jarg3, heatmap_data jarg3_) throws index_out_of_bounds_exception, invalid_filter_option;
  public final static native long count_rows_for_heatmap(long jarg1, run_metrics jarg1_);
  public final static native long count_columns_for_heatmap(long jarg1, run_metrics jarg1_);
  public final static native void plot_flowcell_map__SWIG_0(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, int[] jarg6, boolean jarg7) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map__SWIG_1(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, int[] jarg6) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map__SWIG_2(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map__SWIG_3(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map2__SWIG_0(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, long jarg6, int[] jarg7, long jarg8, boolean jarg9) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map2__SWIG_1(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, long jarg6, int[] jarg7, long jarg8) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map__SWIG_4(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, int[] jarg6, boolean jarg7) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map__SWIG_5(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, int[] jarg6) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map__SWIG_6(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map__SWIG_7(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map2__SWIG_2(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, long jarg6, int[] jarg7, long jarg8, boolean jarg9) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_flowcell_map2__SWIG_3(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, long jarg6, int[] jarg7, long jarg8) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void list_flowcell_metrics__SWIG_0(long jarg1, metric_type_description_vector jarg1_, boolean jarg2, boolean jarg3);
  public final static native void list_flowcell_metrics__SWIG_1(long jarg1, metric_type_description_vector jarg1_, boolean jarg2);
  public final static native void filter_flowcell_metrics__SWIG_0(long jarg1, metric_type_description_vector jarg1_, boolean jarg2, boolean jarg3);
  public final static native void filter_flowcell_metrics__SWIG_1(long jarg1, metric_type_description_vector jarg1_, boolean jarg2);
  public final static native long calculate_flowcell_buffer_size(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_);
  public final static native void plot_sample_qc(long jarg1, run_metrics jarg1_, long jarg2, long jarg3, bar_plot_data jarg3_) throws index_out_of_bounds_exception;
  public final static native void list_plot_metrics(long jarg1, metric_type_description_vector jarg1_);
  public final static native void list_available_plot_metrics(long jarg1, run_metrics jarg1_, long jarg2, metric_type_description_vector jarg2_);
  public final static native void find_first_valid__SWIG_0(long jarg1, subtile_data jarg1_, long jarg2, base_metric jarg2_) throws index_out_of_bounds_exception;
  public final static native void find_first_valid__SWIG_1(long jarg1, subtile_data jarg1_, float[] jarg2, int[] jarg3, long jarg4, base_metric jarg4_) throws index_out_of_bounds_exception, invalid_parameter;
  public final static native void select_tile_values__SWIG_0(long jarg1, subtile_data jarg1_, long jarg2, long jarg3, float[] jarg4) throws index_out_of_bounds_exception;
  public final static native void select_tile_values__SWIG_1(long jarg1, subtile_data jarg1_, long jarg2, long jarg3, float[] jarg4, int[] jarg5, float[] jarg6) throws index_out_of_bounds_exception, invalid_parameter;
  public final static native void plot_subtile_map__SWIG_0(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, subtile_data jarg4_, float[] jarg5, int[] jarg6) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_subtile_map__SWIG_1(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, subtile_data jarg4_, float[] jarg5) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_subtile_map__SWIG_2(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, subtile_data jarg4_) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_subtile_map__SWIG_3(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, subtile_data jarg4_, float[] jarg5, int[] jarg6) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_subtile_map__SWIG_4(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, subtile_data jarg4_, float[] jarg5) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_subtile_map__SWIG_5(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, subtile_data jarg4_) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void list_subtile_metrics__SWIG_0(long jarg1, metric_type_description_vector jarg1_);
  public final static native void list_subtile_metrics__SWIG_1(long jarg1, run_metrics jarg1_, long jarg2, metric_type_description_vector jarg2_);
  public final static native long calculate_subtile_buffer_size(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_) throws invalid_metric_type;
  public final static native void plot_subtile_aggregate__SWIG_0(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, candle_stick_plot_data jarg4_, long jarg5, candle_stick_plot_data jarg5_) throws index_out_of_bounds_exception, invalid_metric_type, invalid_filter_option;
  public final static native void plot_subtile_aggregate__SWIG_1(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, candle_stick_plot_data jarg4_, long jarg5, candle_stick_plot_data jarg5_) throws index_out_of_bounds_exception, invalid_metric_type, invalid_filter_option;
  public final static native void plot_distortion(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_, long jarg3, long jarg4, candle_stick_plot_data jarg4_) throws index_out_of_bounds_exception, invalid_channel_exception, invalid_filter_option, invalid_read_exception;
  public final static native void plot_event_by_cycle(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_, long jarg3, candle_stick_plot_data jarg3_) throws index_out_of_bounds_exception, invalid_metric_type, invalid_filter_option;
  public final static native void list_interval_events(long jarg1, event_type_vector jarg1_);
  public final static native void plot_event_by_event_type__SWIG_0(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_, long jarg3, candle_stick_plot_data jarg3_, boolean jarg4) throws index_out_of_bounds_exception, invalid_metric_type, invalid_filter_option;
  public final static native void plot_event_by_event_type__SWIG_1(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_, long jarg3, candle_stick_plot_data jarg3_) throws index_out_of_bounds_exception, invalid_metric_type, invalid_filter_option;
  public final static native void plot_run_diagnostics_by_cycle(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_, long jarg3, candle_stick_plot_data jarg3_) throws index_out_of_bounds_exception, invalid_metric_type, invalid_filter_option;
  public final static native void plot_run_diagnostics_flowcell_map__SWIG_0(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, int[] jarg6) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_run_diagnostics_flowcell_map__SWIG_1(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_run_diagnostics_flowcell_map__SWIG_2(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_run_diagnostics_flowcell_map2__SWIG_0(long jarg1, run_metrics jarg1_, int jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, long jarg6, int[] jarg7, long jarg8) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_run_diagnostics_flowcell_map__SWIG_3(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, int[] jarg6) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_run_diagnostics_flowcell_map__SWIG_4(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_run_diagnostics_flowcell_map__SWIG_5(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native void plot_run_diagnostics_flowcell_map2__SWIG_1(long jarg1, run_metrics jarg1_, String jarg2, long jarg3, filter_options jarg3_, long jarg4, flowcell_data jarg4_, float[] jarg5, long jarg6, int[] jarg7, long jarg8) throws invalid_filter_option, invalid_metric_type, index_out_of_bounds_exception;
  public final static native long calculate_run_diagnostics_flowcell_buffer_size(long jarg1, run_metrics jarg1_, long jarg2, filter_options jarg2_);
  public final static native long invalid_filter_option_SWIGUpcast(long jarg1);
  public final static native long heatmap_data_SWIGUpcast(long jarg1);
  public final static native long flowcell_data_SWIGUpcast(long jarg1);
  public final static native long subtile_data_SWIGUpcast(long jarg1);
  public final static native long candle_stick_point_SWIGUpcast(long jarg1);
  public final static native long bar_point_SWIGUpcast(long jarg1);
  public final static native long candle_stick_series_SWIGUpcast(long jarg1);
  public final static native long bar_series_SWIGUpcast(long jarg1);
  public final static native long candle_stick_plot_data_SWIGUpcast(long jarg1);
  public final static native long bar_plot_data_SWIGUpcast(long jarg1);
}
