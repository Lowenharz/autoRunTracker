/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class interop_metricsJNI {

  static {
    System.loadLibrary("interop_metrics");
  }

  public final static native long new_index_out_of_bounds_exception(String jarg1);
  public final static native void delete_index_out_of_bounds_exception(long jarg1);
  public final static native long new_csharp_date_time__SWIG_0(java.math.BigInteger jarg1);
  public final static native long new_csharp_date_time__SWIG_1();
  public final static native java.math.BigInteger csharp_date_time_to_unix__SWIG_0(long jarg1, csharp_date_time jarg1_);
  public final static native double csharp_date_time_to_seconds__SWIG_0(long jarg1, csharp_date_time jarg1_);
  public final static native java.math.BigInteger csharp_date_time_to_unix__SWIG_1(java.math.BigInteger jarg1);
  public final static native double csharp_date_time_to_seconds__SWIG_1(java.math.BigInteger jarg1);
  public final static native long csharp_date_time_to_csharp(java.math.BigInteger jarg1);
  public final static native void csharp_date_time_value_set(long jarg1, csharp_date_time jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger csharp_date_time_value_get(long jarg1, csharp_date_time jarg1_);
  public final static native java.math.BigInteger csharp_date_time_to_int(long jarg1, csharp_date_time jarg1_);
  public final static native java.math.BigInteger csharp_date_time_to_binary(long jarg1, csharp_date_time jarg1_);
  public final static native boolean csharp_date_time_equals(long jarg1, csharp_date_time jarg1_, long jarg2, csharp_date_time jarg2_);
  public final static native void delete_csharp_date_time(long jarg1);
  public final static native long new_empty_header();
  public final static native void delete_empty_header(long jarg1);
  public final static native long base_metric_header_default_header();
  public final static native long new_base_metric_header();
  public final static native void delete_base_metric_header(long jarg1);
  public final static native long new_empty_metric();
  public final static native void delete_empty_metric(long jarg1);
  public final static native int base_metric_LANE_BIT_COUNT_get();
  public final static native int base_metric_TILE_BIT_COUNT_get();
  public final static native int base_metric_CYCLE_BIT_COUNT_get();
  public final static native int base_metric_READ_BIT_COUNT_get();
  public final static native int base_metric_RESERVED_BIT_COUNT_get();
  public final static native int base_metric_READ_BIT_SHIFT_get();
  public final static native int base_metric_CYCLE_BIT_SHIFT_get();
  public final static native int base_metric_EVENT_BIT_SHIFT_get();
  public final static native int base_metric_TILE_BIT_SHIFT_get();
  public final static native int base_metric_LANE_BIT_SHIFT_get();
  public final static native long new_base_metric__SWIG_0(long jarg1, long jarg2);
  public final static native long new_base_metric__SWIG_1(long jarg1);
  public final static native long new_base_metric__SWIG_2();
  public final static native void base_metric_set_base(long jarg1, base_metric jarg1_, long jarg2, long jarg3);
  public final static native java.math.BigInteger base_metric_id(long jarg1, base_metric jarg1_);
  public final static native java.math.BigInteger base_metric_tile_hash(long jarg1, base_metric jarg1_);
  public final static native java.math.BigInteger base_metric_create_id__SWIG_0(java.math.BigInteger jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native java.math.BigInteger base_metric_create_id__SWIG_1(java.math.BigInteger jarg1, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger base_metric_lane_from_id(java.math.BigInteger jarg1);
  public final static native java.math.BigInteger base_metric_tile_hash_from_id(java.math.BigInteger jarg1);
  public final static native java.math.BigInteger base_metric_tile_from_id(java.math.BigInteger jarg1);
  public final static native long base_metric_lane(long jarg1, base_metric jarg1_);
  public final static native long base_metric_tile(long jarg1, base_metric jarg1_);
  public final static native long base_metric_number(long jarg1, base_metric jarg1_, int jarg2);
  public final static native long base_metric_section(long jarg1, base_metric jarg1_, int jarg2);
  public final static native long base_metric_surface(long jarg1, base_metric jarg1_, int jarg2);
  public final static native long base_metric_swath(long jarg1, base_metric jarg1_, int jarg2);
  public final static native long base_metric_phyiscalLocationIndex(long jarg1, base_metric jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, boolean jarg6);
  public final static native long base_metric_phyiscalLocationColumn(long jarg1, base_metric jarg1_, int jarg2, long jarg3, boolean jarg4);
  public final static native long base_metric_phyiscalLocationRow(long jarg1, base_metric jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native long base_metric_physical_location_index(long jarg1, base_metric jarg1_, int jarg2, long jarg3, long jarg4, long jarg5, boolean jarg6);
  public final static native long base_metric_physical_location_column(long jarg1, base_metric jarg1_, int jarg2, long jarg3, boolean jarg4);
  public final static native long base_metric_physical_location_row(long jarg1, base_metric jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native String base_metric_suffix();
  public final static native void delete_base_metric(long jarg1);
  public final static native long new_base_cycle_metric_header();
  public final static native long base_cycle_metric_header_default_header();
  public final static native long base_cycle_metric_header_max_cycle(long jarg1, base_cycle_metric_header jarg1_);
  public final static native void base_cycle_metric_header_clear(long jarg1, base_cycle_metric_header jarg1_);
  public final static native void delete_base_cycle_metric_header(long jarg1);
  public final static native long new_base_cycle_metric__SWIG_0(long jarg1, long jarg2, long jarg3);
  public final static native long new_base_cycle_metric__SWIG_1(long jarg1, long jarg2);
  public final static native long new_base_cycle_metric__SWIG_2(long jarg1);
  public final static native long new_base_cycle_metric__SWIG_3();
  public final static native void base_cycle_metric_set_base__SWIG_0(long jarg1, base_cycle_metric jarg1_, long jarg2, long jarg3);
  public final static native void base_cycle_metric_set_base__SWIG_1(long jarg1, base_cycle_metric jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_cycle_metric_cycle(long jarg1, base_cycle_metric jarg1_);
  public final static native java.math.BigInteger base_cycle_metric_id(long jarg1, base_cycle_metric jarg1_);
  public final static native java.math.BigInteger base_cycle_metric_cycle_hash(long jarg1, base_cycle_metric jarg1_);
  public final static native java.math.BigInteger base_cycle_metric_cycle_from_id(java.math.BigInteger jarg1);
  public final static native java.math.BigInteger base_cycle_metric_reserved_from_id(java.math.BigInteger jarg1);
  public final static native java.math.BigInteger base_cycle_metric_create_id(java.math.BigInteger jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native void delete_base_cycle_metric(long jarg1);
  public final static native long new_base_read_metric_header();
  public final static native long base_read_metric_header_default_header();
  public final static native void delete_base_read_metric_header(long jarg1);
  public final static native long new_base_read_metric(long jarg1, long jarg2, long jarg3);
  public final static native void base_read_metric_set_base__SWIG_0(long jarg1, base_read_metric jarg1_, long jarg2, long jarg3);
  public final static native void base_read_metric_set_base__SWIG_1(long jarg1, base_read_metric jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_read_metric_read(long jarg1, base_read_metric jarg1_);
  public final static native java.math.BigInteger base_read_metric_id(long jarg1, base_read_metric jarg1_);
  public final static native java.math.BigInteger base_read_metric_create_id(java.math.BigInteger jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native java.math.BigInteger base_read_metric_read_from_id(java.math.BigInteger jarg1);
  public final static native void delete_base_read_metric(long jarg1);
  public final static native long new_base_static_run_metric_header();
  public final static native void delete_base_static_run_metric_header(long jarg1);
  public final static native int base_static_run_metric_CHANNEL_BIT_SHIFT_get();
  public final static native int base_static_run_metric_DISTORTION_BIT_SHIFT_get();
  public final static native long new_base_static_run_metric(int jarg1, int jarg2, int jarg3);
  public final static native void base_static_run_metric_set_base(long jarg1, base_static_run_metric jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native String base_static_run_metric_suffix();
  public final static native long base_static_run_metric_id(long jarg1, base_static_run_metric jarg1_);
  public final static native long base_static_run_metric_create_id(long jarg1, long jarg2, long jarg3);
  public final static native int base_static_run_metric_camera(long jarg1, base_static_run_metric jarg1_);
  public final static native int base_static_run_metric_channel(long jarg1, base_static_run_metric jarg1_);
  public final static native int base_static_run_metric_distortion_type(long jarg1, base_static_run_metric jarg1_);
  public final static native long base_static_run_metric_lane(long jarg1, base_static_run_metric jarg1_);
  public final static native long base_static_run_metric_tile(long jarg1, base_static_run_metric jarg1_);
  public final static native void delete_base_static_run_metric(long jarg1);
  public final static native long new_base_event_metric_header();
  public final static native long base_event_metric_header_default_header();
  public final static native long base_event_metric_header_max_cycle(long jarg1, base_event_metric_header jarg1_);
  public final static native void base_event_metric_header_clear(long jarg1, base_event_metric_header jarg1_);
  public final static native void delete_base_event_metric_header(long jarg1);
  public final static native long new_base_event_metric__SWIG_0(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long new_base_event_metric__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long new_base_event_metric__SWIG_2(long jarg1, long jarg2);
  public final static native long new_base_event_metric__SWIG_3(long jarg1);
  public final static native long new_base_event_metric__SWIG_4();
  public final static native void base_event_metric_set_base__SWIG_0(long jarg1, base_event_metric jarg1_, long jarg2, long jarg3);
  public final static native void base_event_metric_set_base__SWIG_1(long jarg1, base_event_metric jarg1_, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native int base_event_metric_event_type__SWIG_0(long jarg1, base_event_metric jarg1_);
  public final static native java.math.BigInteger base_event_metric_event_type_long(long jarg1, base_event_metric jarg1_);
  public final static native void base_event_metric_event_type__SWIG_1(long jarg1, base_event_metric jarg1_, int jarg2);
  public final static native java.math.BigInteger base_event_metric_id(long jarg1, base_event_metric jarg1_);
  public final static native java.math.BigInteger base_event_metric_create_id(java.math.BigInteger jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3, java.math.BigInteger jarg4);
  public final static native void delete_base_event_metric(long jarg1);
  public final static native long new_point2d__SWIG_0();
  public final static native long new_point2d__SWIG_1(float jarg1, float jarg2);
  public final static native long new_point2d__SWIG_2(long jarg1, point2d jarg1_);
  public final static native float point2d_x(long jarg1, point2d jarg1_);
  public final static native float point2d_y(long jarg1, point2d jarg1_);
  public final static native void delete_point2d(long jarg1);
  public final static native long new_index_info_vector__SWIG_0();
  public final static native long new_index_info_vector__SWIG_1(long jarg1);
  public final static native long index_info_vector_size(long jarg1, index_info_vector jarg1_);
  public final static native long index_info_vector_capacity(long jarg1, index_info_vector jarg1_);
  public final static native void index_info_vector_reserve(long jarg1, index_info_vector jarg1_, long jarg2);
  public final static native boolean index_info_vector_isEmpty(long jarg1, index_info_vector jarg1_);
  public final static native void index_info_vector_clear(long jarg1, index_info_vector jarg1_);
  public final static native void index_info_vector_add(long jarg1, index_info_vector jarg1_, long jarg2, index_info jarg2_);
  public final static native long index_info_vector_get(long jarg1, index_info_vector jarg1_, int jarg2);
  public final static native void index_info_vector_set(long jarg1, index_info_vector jarg1_, int jarg2, long jarg3, index_info jarg3_);
  public final static native void delete_index_info_vector(long jarg1);
  public final static native long new_tile_metric_map__SWIG_0();
  public final static native long new_tile_metric_map__SWIG_1(long jarg1, tile_metric_map jarg1_);
  public final static native long tile_metric_map_size(long jarg1, tile_metric_map jarg1_);
  public final static native boolean tile_metric_map_empty(long jarg1, tile_metric_map jarg1_);
  public final static native void tile_metric_map_clear(long jarg1, tile_metric_map jarg1_);
  public final static native long tile_metric_map_get(long jarg1, tile_metric_map jarg1_, java.math.BigInteger jarg2);
  public final static native void tile_metric_map_set(long jarg1, tile_metric_map jarg1_, java.math.BigInteger jarg2, long jarg3, base_metric jarg3_);
  public final static native void tile_metric_map_del(long jarg1, tile_metric_map jarg1_, java.math.BigInteger jarg2);
  public final static native boolean tile_metric_map_has_key(long jarg1, tile_metric_map jarg1_, java.math.BigInteger jarg2);
  public final static native void delete_tile_metric_map(long jarg1);
  public final static native long new_cycle_metric_map__SWIG_0();
  public final static native long new_cycle_metric_map__SWIG_1(long jarg1, cycle_metric_map jarg1_);
  public final static native long cycle_metric_map_size(long jarg1, cycle_metric_map jarg1_);
  public final static native boolean cycle_metric_map_empty(long jarg1, cycle_metric_map jarg1_);
  public final static native void cycle_metric_map_clear(long jarg1, cycle_metric_map jarg1_);
  public final static native long cycle_metric_map_get(long jarg1, cycle_metric_map jarg1_, java.math.BigInteger jarg2);
  public final static native void cycle_metric_map_set(long jarg1, cycle_metric_map jarg1_, java.math.BigInteger jarg2, long jarg3, base_cycle_metric jarg3_);
  public final static native void cycle_metric_map_del(long jarg1, cycle_metric_map jarg1_, java.math.BigInteger jarg2);
  public final static native boolean cycle_metric_map_has_key(long jarg1, cycle_metric_map jarg1_, java.math.BigInteger jarg2);
  public final static native void delete_cycle_metric_map(long jarg1);
  public final static native long new_read_metric_vector__SWIG_0();
  public final static native long new_read_metric_vector__SWIG_1(long jarg1);
  public final static native long read_metric_vector_size(long jarg1, read_metric_vector jarg1_);
  public final static native long read_metric_vector_capacity(long jarg1, read_metric_vector jarg1_);
  public final static native void read_metric_vector_reserve(long jarg1, read_metric_vector jarg1_, long jarg2);
  public final static native boolean read_metric_vector_isEmpty(long jarg1, read_metric_vector jarg1_);
  public final static native void read_metric_vector_clear(long jarg1, read_metric_vector jarg1_);
  public final static native void read_metric_vector_add(long jarg1, read_metric_vector jarg1_, long jarg2, read_metric jarg2_);
  public final static native long read_metric_vector_get(long jarg1, read_metric_vector jarg1_, int jarg2);
  public final static native void read_metric_vector_set(long jarg1, read_metric_vector jarg1_, int jarg2, long jarg3, read_metric jarg3_);
  public final static native void delete_read_metric_vector(long jarg1);
  public final static native long new_q_score_bin_vector__SWIG_0();
  public final static native long new_q_score_bin_vector__SWIG_1(long jarg1);
  public final static native long q_score_bin_vector_size(long jarg1, q_score_bin_vector jarg1_);
  public final static native long q_score_bin_vector_capacity(long jarg1, q_score_bin_vector jarg1_);
  public final static native void q_score_bin_vector_reserve(long jarg1, q_score_bin_vector jarg1_, long jarg2);
  public final static native boolean q_score_bin_vector_isEmpty(long jarg1, q_score_bin_vector jarg1_);
  public final static native void q_score_bin_vector_clear(long jarg1, q_score_bin_vector jarg1_);
  public final static native void q_score_bin_vector_add(long jarg1, q_score_bin_vector jarg1_, long jarg2, q_score_bin jarg2_);
  public final static native long q_score_bin_vector_get(long jarg1, q_score_bin_vector jarg1_, int jarg2);
  public final static native void q_score_bin_vector_set(long jarg1, q_score_bin_vector jarg1_, int jarg2, long jarg3, q_score_bin jarg3_);
  public final static native void delete_q_score_bin_vector(long jarg1);
  public final static native long new_metric_type_name_pair__SWIG_0();
  public final static native long new_metric_type_name_pair__SWIG_1(int jarg1, String jarg2);
  public final static native long new_metric_type_name_pair__SWIG_2(long jarg1, metric_type_name_pair jarg1_);
  public final static native void metric_type_name_pair_first_set(long jarg1, metric_type_name_pair jarg1_, int jarg2);
  public final static native int metric_type_name_pair_first_get(long jarg1, metric_type_name_pair jarg1_);
  public final static native void metric_type_name_pair_second_set(long jarg1, metric_type_name_pair jarg1_, String jarg2);
  public final static native String metric_type_name_pair_second_get(long jarg1, metric_type_name_pair jarg1_);
  public final static native void delete_metric_type_name_pair(long jarg1);
  public final static native long new_metric_type_description__SWIG_0();
  public final static native long new_metric_type_description__SWIG_1(int jarg1, String jarg2);
  public final static native long new_metric_type_description__SWIG_2(long jarg1, metric_type_name_pair jarg1_);
  public final static native int metric_type_description_value(long jarg1, metric_type_description jarg1_);
  public final static native String metric_type_description_description(long jarg1, metric_type_description jarg1_);
  public final static native void delete_metric_type_description(long jarg1);
  public final static native long new_metric_type_description_vector__SWIG_0();
  public final static native long new_metric_type_description_vector__SWIG_1(long jarg1);
  public final static native long metric_type_description_vector_size(long jarg1, metric_type_description_vector jarg1_);
  public final static native long metric_type_description_vector_capacity(long jarg1, metric_type_description_vector jarg1_);
  public final static native void metric_type_description_vector_reserve(long jarg1, metric_type_description_vector jarg1_, long jarg2);
  public final static native boolean metric_type_description_vector_isEmpty(long jarg1, metric_type_description_vector jarg1_);
  public final static native void metric_type_description_vector_clear(long jarg1, metric_type_description_vector jarg1_);
  public final static native void metric_type_description_vector_add(long jarg1, metric_type_description_vector jarg1_, long jarg2, metric_type_description jarg2_);
  public final static native long metric_type_description_vector_get(long jarg1, metric_type_description_vector jarg1_, int jarg2);
  public final static native void metric_type_description_vector_set(long jarg1, metric_type_description_vector jarg1_, int jarg2, long jarg3, metric_type_description jarg3_);
  public final static native void delete_metric_type_description_vector(long jarg1);
  public final static native long new_metric_type_vector__SWIG_0();
  public final static native long new_metric_type_vector__SWIG_1(long jarg1);
  public final static native long metric_type_vector_size(long jarg1, metric_type_vector jarg1_);
  public final static native long metric_type_vector_capacity(long jarg1, metric_type_vector jarg1_);
  public final static native void metric_type_vector_reserve(long jarg1, metric_type_vector jarg1_, long jarg2);
  public final static native boolean metric_type_vector_isEmpty(long jarg1, metric_type_vector jarg1_);
  public final static native void metric_type_vector_clear(long jarg1, metric_type_vector jarg1_);
  public final static native void metric_type_vector_add(long jarg1, metric_type_vector jarg1_, int jarg2);
  public final static native int metric_type_vector_get(long jarg1, metric_type_vector jarg1_, int jarg2);
  public final static native void metric_type_vector_set(long jarg1, metric_type_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_metric_type_vector(long jarg1);
  public final static native long new_metric_group_vector__SWIG_0();
  public final static native long new_metric_group_vector__SWIG_1(long jarg1);
  public final static native long metric_group_vector_size(long jarg1, metric_group_vector jarg1_);
  public final static native long metric_group_vector_capacity(long jarg1, metric_group_vector jarg1_);
  public final static native void metric_group_vector_reserve(long jarg1, metric_group_vector jarg1_, long jarg2);
  public final static native boolean metric_group_vector_isEmpty(long jarg1, metric_group_vector jarg1_);
  public final static native void metric_group_vector_clear(long jarg1, metric_group_vector jarg1_);
  public final static native void metric_group_vector_add(long jarg1, metric_group_vector jarg1_, int jarg2);
  public final static native int metric_group_vector_get(long jarg1, metric_group_vector jarg1_, int jarg2);
  public final static native void metric_group_vector_set(long jarg1, metric_group_vector jarg1_, int jarg2, int jarg3);
  public final static native void delete_metric_group_vector(long jarg1);
  public final static native int corrected_intensity_metric_TYPE_get();
  public final static native int corrected_intensity_metric_LATEST_VERSION_get();
  public final static native long new_corrected_intensity_metric__SWIG_0();
  public final static native long new_corrected_intensity_metric__SWIG_1(long jarg1, base_cycle_metric_header jarg1_);
  public final static native long new_corrected_intensity_metric__SWIG_2(long jarg1, long jarg2, long jarg3, int jarg4, float jarg5, long jarg6, float_vector jarg6_, long jarg7, ushort_vector jarg7_, long jarg8, uint_vector jarg8_);
  public final static native long new_corrected_intensity_metric__SWIG_3(long jarg1, long jarg2, long jarg3, int jarg4, float jarg5, float[] jarg6, short[] jarg7, int[] jarg8);
  public final static native long new_corrected_intensity_metric__SWIG_4(long jarg1, long jarg2, long jarg3, long jarg4, float_vector jarg4_, long jarg5, uint_vector jarg5_);
  public final static native long new_corrected_intensity_metric__SWIG_5(long jarg1, long jarg2, long jarg3, short[] jarg4, int[] jarg5);
  public final static native long new_corrected_intensity_metric__SWIG_6(long jarg1, long jarg2, long jarg3, long jarg4, uint_vector jarg4_);
  public final static native void corrected_intensity_metric_set(long jarg1, corrected_intensity_metric jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, uint_vector jarg5_);
  public final static native int corrected_intensity_metric_average_cycle_intensity(long jarg1, corrected_intensity_metric jarg1_);
  public final static native int corrected_intensity_metric_corrected_int_all(long jarg1, corrected_intensity_metric jarg1_, int jarg2) throws index_out_of_bounds_exception;
  public final static native float corrected_intensity_metric_corrected_int_all_float(long jarg1, corrected_intensity_metric jarg1_, int jarg2) throws index_out_of_bounds_exception;
  public final static native float corrected_intensity_metric_corrected_int_called(long jarg1, corrected_intensity_metric jarg1_, int jarg2) throws index_out_of_bounds_exception;
  public final static native long corrected_intensity_metric_called_counts_array(long jarg1, corrected_intensity_metric jarg1_);
  public final static native long corrected_intensity_metric_corrected_int_called_array__SWIG_0(long jarg1, corrected_intensity_metric jarg1_);
  public final static native long corrected_intensity_metric_corrected_int_all_array(long jarg1, corrected_intensity_metric jarg1_);
  public final static native long corrected_intensity_metric_called_counts(long jarg1, corrected_intensity_metric jarg1_, int jarg2) throws index_out_of_bounds_exception;
  public final static native long corrected_intensity_metric_no_calls(long jarg1, corrected_intensity_metric jarg1_);
  public final static native float corrected_intensity_metric_signal_to_noise(long jarg1, corrected_intensity_metric jarg1_);
  public final static native long corrected_intensity_metric_total_calls__SWIG_0(long jarg1, corrected_intensity_metric jarg1_, boolean jarg2);
  public final static native long corrected_intensity_metric_total_calls__SWIG_1(long jarg1, corrected_intensity_metric jarg1_);
  public final static native long corrected_intensity_metric_total_intensity(long jarg1, corrected_intensity_metric jarg1_);
  public final static native float corrected_intensity_metric_total_called_intensity(long jarg1, corrected_intensity_metric jarg1_);
  public final static native float corrected_intensity_metric_percent_base(long jarg1, corrected_intensity_metric jarg1_, int jarg2) throws index_out_of_bounds_exception;
  public final static native long corrected_intensity_metric_percent_bases(long jarg1, corrected_intensity_metric jarg1_);
  public final static native float corrected_intensity_metric_percent_nocall(long jarg1, corrected_intensity_metric jarg1_) throws index_out_of_bounds_exception;
  public final static native void corrected_intensity_metric_corrected_int_called_array__SWIG_1(long jarg1, corrected_intensity_metric jarg1_, long jarg2, float_vector jarg2_);
  public final static native boolean corrected_intensity_metric_any_valid_called_int(long jarg1, corrected_intensity_metric jarg1_);
  public final static native int corrected_intensity_metric_averageCycleIntensity(long jarg1, corrected_intensity_metric jarg1_);
  public final static native int corrected_intensity_metric_correctedIntAll__SWIG_0(long jarg1, corrected_intensity_metric jarg1_, long jarg2);
  public final static native float corrected_intensity_metric_correctedIntCalled__SWIG_0(long jarg1, corrected_intensity_metric jarg1_, long jarg2);
  public final static native long corrected_intensity_metric_correctedIntCalled__SWIG_1(long jarg1, corrected_intensity_metric jarg1_);
  public final static native long corrected_intensity_metric_correctedIntAll__SWIG_1(long jarg1, corrected_intensity_metric jarg1_);
  public final static native long corrected_intensity_metric_calledCounts__SWIG_0(long jarg1, corrected_intensity_metric jarg1_);
  public final static native long corrected_intensity_metric_noCalls(long jarg1, corrected_intensity_metric jarg1_);
  public final static native float corrected_intensity_metric_percentBase(long jarg1, corrected_intensity_metric jarg1_, int jarg2);
  public final static native long corrected_intensity_metric_calledCounts__SWIG_1(long jarg1, corrected_intensity_metric jarg1_, int jarg2);
  public final static native float corrected_intensity_metric_signalToNoise(long jarg1, corrected_intensity_metric jarg1_);
  public final static native long corrected_intensity_metric_totalCalls__SWIG_0(long jarg1, corrected_intensity_metric jarg1_, boolean jarg2);
  public final static native long corrected_intensity_metric_totalCalls__SWIG_1(long jarg1, corrected_intensity_metric jarg1_);
  public final static native long corrected_intensity_metric_totalIntensity(long jarg1, corrected_intensity_metric jarg1_);
  public final static native float corrected_intensity_metric_totalCalledIntensity(long jarg1, corrected_intensity_metric jarg1_);
  public final static native float corrected_intensity_metric_percentIntensity(long jarg1, corrected_intensity_metric jarg1_, long jarg2);
  public final static native float corrected_intensity_metric_percentCalledIntensity(long jarg1, corrected_intensity_metric jarg1_, long jarg2);
  public final static native String corrected_intensity_metric_prefix();
  public final static native void delete_corrected_intensity_metric(long jarg1);
  public final static native int error_metric_MAX_MISMATCH_get();
  public final static native int error_metric_TYPE_get();
  public final static native int error_metric_LATEST_VERSION_get();
  public final static native long new_error_metric__SWIG_0();
  public final static native long new_error_metric__SWIG_1(long jarg1, base_cycle_metric_header jarg1_);
  public final static native long new_error_metric__SWIG_2(long jarg1, long jarg2, long jarg3, float jarg4);
  public final static native float error_metric_error_rate(long jarg1, error_metric jarg1_);
  public final static native long error_metric_mismatch_cluster_count(long jarg1, error_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long error_metric_mismatch_count(long jarg1, error_metric jarg1_);
  public final static native long error_metric_mismatch_cluster_counts(long jarg1, error_metric jarg1_);
  public final static native float error_metric_errorRate(long jarg1, error_metric jarg1_);
  public final static native String error_metric_prefix();
  public final static native void delete_error_metric(long jarg1);
  public final static native int extraction_metric_header_MAX_CHANNELS_get();
  public final static native long new_extraction_metric_header(int jarg1);
  public final static native int extraction_metric_header_channel_count__SWIG_0(long jarg1, extraction_metric_header jarg1_);
  public final static native void extraction_metric_header_channel_count__SWIG_1(long jarg1, extraction_metric_header jarg1_, long jarg2);
  public final static native long extraction_metric_header_default_header();
  public final static native void extraction_metric_header_clear(long jarg1, extraction_metric_header jarg1_);
  public final static native void delete_extraction_metric_header(long jarg1);
  public final static native int extraction_metric_MAX_CHANNELS_get();
  public final static native int extraction_metric_TYPE_get();
  public final static native int extraction_metric_LATEST_VERSION_get();
  public final static native long new_extraction_metric__SWIG_0();
  public final static native long new_extraction_metric__SWIG_1(long jarg1, extraction_metric_header jarg1_);
  public final static native long new_extraction_metric__SWIG_2(long jarg1, long jarg2, long jarg3, java.math.BigInteger jarg4, long jarg5, ushort_vector jarg5_, long jarg6, float_vector jarg6_);
  public final static native long new_extraction_metric__SWIG_3(long jarg1, long jarg2, long jarg3, java.math.BigInteger jarg4, short[] jarg5, float[] jarg6, long jarg7);
  public final static native long new_extraction_metric__SWIG_4(long jarg1, long jarg2, long jarg3, java.math.BigInteger jarg4, short[] jarg5, float[] jarg6);
  public final static native long new_extraction_metric__SWIG_5(long jarg1, long jarg2, long jarg3, long jarg4, csharp_date_time jarg4_, long jarg5, ushort_vector jarg5_, long jarg6, float_vector jarg6_);
  public final static native long new_extraction_metric__SWIG_6(long jarg1, long jarg2, long jarg3, long jarg4, csharp_date_time jarg4_, short[] jarg5, float[] jarg6, long jarg7);
  public final static native long new_extraction_metric__SWIG_7(long jarg1, long jarg2, long jarg3, long jarg4, csharp_date_time jarg4_, short[] jarg5, float[] jarg6);
  public final static native long new_extraction_metric__SWIG_8(long jarg1, long jarg2, long jarg3, long jarg4, ushort_vector jarg4_, long jarg5, float_vector jarg5_);
  public final static native void extraction_metric_set__SWIG_0(long jarg1, extraction_metric jarg1_, long jarg2, long jarg3, long jarg4, java.math.BigInteger jarg5, long jarg6, ushort_vector jarg6_, long jarg7, float_vector jarg7_);
  public final static native void extraction_metric_set__SWIG_1(long jarg1, extraction_metric jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, ushort_vector jarg5_, long jarg6, float_vector jarg6_);
  public final static native java.math.BigInteger extraction_metric_date_time__SWIG_0(long jarg1, extraction_metric jarg1_);
  public final static native long extraction_metric_date_time_csharp(long jarg1, extraction_metric jarg1_);
  public final static native java.math.BigInteger extraction_metric_date_time_csharp_raw(long jarg1, extraction_metric jarg1_);
  public final static native int extraction_metric_max_intensity(long jarg1, extraction_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native float extraction_metric_focus_score(long jarg1, extraction_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long extraction_metric_max_intensity_values(long jarg1, extraction_metric jarg1_);
  public final static native long extraction_metric_focus_scores(long jarg1, extraction_metric jarg1_);
  public final static native long extraction_metric_channel_count(long jarg1, extraction_metric jarg1_);
  public final static native void extraction_metric_trim(long jarg1, extraction_metric jarg1_, long jarg2);
  public final static native float extraction_metric_focusScore(long jarg1, extraction_metric jarg1_, long jarg2);
  public final static native java.math.BigInteger extraction_metric_dateTime(long jarg1, extraction_metric jarg1_);
  public final static native long extraction_metric_focusScores(long jarg1, extraction_metric jarg1_);
  public final static native void extraction_metric_date_time__SWIG_1(long jarg1, extraction_metric jarg1_, java.math.BigInteger jarg2);
  public final static native boolean extraction_metric_is_any_p90_zero(long jarg1, extraction_metric jarg1_);
  public final static native String extraction_metric_prefix();
  public final static native void delete_extraction_metric(long jarg1);
  public final static native int image_metric_header_MAX_CHANNELS_get();
  public final static native long new_image_metric_header(int jarg1);
  public final static native int image_metric_header_channelCount(long jarg1, image_metric_header jarg1_);
  public final static native int image_metric_header_channel_count__SWIG_0(long jarg1, image_metric_header jarg1_);
  public final static native void image_metric_header_channel_count__SWIG_1(long jarg1, image_metric_header jarg1_, long jarg2);
  public final static native long image_metric_header_default_header();
  public final static native void image_metric_header_clear(long jarg1, image_metric_header jarg1_);
  public final static native void delete_image_metric_header(long jarg1);
  public final static native int image_metric_MAX_CHANNELS_get();
  public final static native int image_metric_TYPE_get();
  public final static native int image_metric_LATEST_VERSION_get();
  public final static native long new_image_metric__SWIG_0();
  public final static native long new_image_metric__SWIG_1(long jarg1, image_metric_header jarg1_);
  public final static native long new_image_metric__SWIG_2(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, ushort_vector jarg5_, long jarg6, ushort_vector jarg6_);
  public final static native long new_image_metric__SWIG_3(long jarg1, long jarg2, long jarg3, int jarg4, short[] jarg5, short[] jarg6);
  public final static native int image_metric_min_contrast(long jarg1, image_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native int image_metric_max_contrast(long jarg1, image_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long image_metric_min_contrast_array(long jarg1, image_metric jarg1_);
  public final static native long image_metric_max_contrast_array(long jarg1, image_metric jarg1_);
  public final static native int image_metric_channel_count(long jarg1, image_metric jarg1_);
  public final static native boolean image_metric_is_any_channel_blank(long jarg1, image_metric jarg1_);
  public final static native void image_metric_trim(long jarg1, image_metric jarg1_, long jarg2);
  public final static native int image_metric_minContrast__SWIG_0(long jarg1, image_metric jarg1_, long jarg2);
  public final static native int image_metric_maxContrast__SWIG_0(long jarg1, image_metric jarg1_, long jarg2);
  public final static native long image_metric_minContrast__SWIG_1(long jarg1, image_metric jarg1_);
  public final static native long image_metric_maxContrast__SWIG_1(long jarg1, image_metric jarg1_);
  public final static native int image_metric_channelCount(long jarg1, image_metric jarg1_);
  public final static native String image_metric_prefix();
  public final static native void delete_image_metric(long jarg1);
  public final static native long new_q_score_bin__SWIG_0(int jarg1, int jarg2, int jarg3);
  public final static native long new_q_score_bin__SWIG_1(int jarg1, int jarg2);
  public final static native long new_q_score_bin__SWIG_2(int jarg1);
  public final static native long new_q_score_bin__SWIG_3();
  public final static native int q_score_bin_lower(long jarg1, q_score_bin jarg1_);
  public final static native int q_score_bin_upper(long jarg1, q_score_bin jarg1_);
  public final static native int q_score_bin_value(long jarg1, q_score_bin jarg1_);
  public final static native void delete_q_score_bin(long jarg1);
  public final static native int q_score_header_MAX_Q_BINS_get();
  public final static native long new_q_score_header__SWIG_0();
  public final static native long new_q_score_header__SWIG_1(long jarg1, q_score_bin_vector jarg1_);
  public final static native long q_score_header_bin_at(long jarg1, q_score_header jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long q_score_header_get_bins(long jarg1, q_score_header jarg1_);
  public final static native long q_score_header_bins(long jarg1, q_score_header jarg1_);
  public final static native long q_score_header_bin_count(long jarg1, q_score_header jarg1_);
  public final static native long q_score_header_q_val_count(long jarg1, q_score_header jarg1_);
  public final static native long q_score_header_index_for_q_value(long jarg1, q_score_header jarg1_, long jarg2);
  public final static native long q_score_header_binCount(long jarg1, q_score_header jarg1_);
  public final static native long q_score_header_default_header();
  public final static native long q_score_header_binAt(long jarg1, q_score_header jarg1_, long jarg2);
  public final static native void q_score_header_clear(long jarg1, q_score_header jarg1_);
  public final static native void delete_q_score_header(long jarg1);
  public final static native int q_metric_TYPE_get();
  public final static native int q_metric_LATEST_VERSION_get();
  public final static native int q_metric_MAX_Q_BINS_get();
  public final static native long new_q_metric__SWIG_0();
  public final static native long new_q_metric__SWIG_1(long jarg1, q_score_header jarg1_);
  public final static native long new_q_metric__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4, uint_vector jarg4_);
  public final static native long new_q_metric__SWIG_3(long jarg1, long jarg2, long jarg3, int[] jarg4, long jarg5);
  public final static native void q_metric_set(long jarg1, q_metric jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, uint_vector jarg5_);
  public final static native long q_metric_qscore_hist__SWIG_0(long jarg1, q_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long q_metric_qscore_hist__SWIG_1(long jarg1, q_metric jarg1_);
  public final static native long q_metric_size(long jarg1, q_metric jarg1_);
  public final static native long q_metric_sum_qscore(long jarg1, q_metric jarg1_);
  public final static native java.math.BigInteger q_metric_sum_qscore_cumulative(long jarg1, q_metric jarg1_);
  public final static native long q_metric_total_over_qscore__SWIG_0(long jarg1, q_metric jarg1_, long jarg2, long jarg3, q_score_bin_vector jarg3_);
  public final static native long q_metric_total_over_qscore__SWIG_1(long jarg1, q_metric jarg1_, long jarg2);
  public final static native java.math.BigInteger q_metric_total_over_qscore_cumulative__SWIG_0(long jarg1, q_metric jarg1_, long jarg2);
  public final static native float q_metric_percent_over_qscore__SWIG_0(long jarg1, q_metric jarg1_, long jarg2);
  public final static native float q_metric_percent_over_qscore_cumulative__SWIG_0(long jarg1, q_metric jarg1_, long jarg2);
  public final static native java.math.BigInteger q_metric_total_over_qscore_cumulative__SWIG_1(long jarg1, q_metric jarg1_, long jarg2, long jarg3, q_score_bin_vector jarg3_);
  public final static native float q_metric_percent_over_qscore__SWIG_1(long jarg1, q_metric jarg1_, long jarg2, long jarg3, q_score_bin_vector jarg3_);
  public final static native float q_metric_percent_over_qscore_cumulative__SWIG_1(long jarg1, q_metric jarg1_, long jarg2, long jarg3, q_score_bin_vector jarg3_);
  public final static native long q_metric_median__SWIG_0(long jarg1, q_metric jarg1_, long jarg2, q_score_bin_vector jarg2_);
  public final static native long q_metric_median__SWIG_1(long jarg1, q_metric jarg1_);
  public final static native boolean q_metric_is_cumulative_empty(long jarg1, q_metric jarg1_);
  public final static native void q_metric_accumulate(long jarg1, q_metric jarg1_, long jarg2, q_metric jarg2_);
  public final static native void q_metric_compress(long jarg1, q_metric jarg1_, long jarg2, q_score_header jarg2_);
  public final static native long q_metric_qscoreHist__SWIG_0(long jarg1, q_metric jarg1_, long jarg2);
  public final static native long q_metric_qscoreHist__SWIG_1(long jarg1, q_metric jarg1_);
  public final static native String q_metric_prefix();
  public final static native void delete_q_metric(long jarg1);
  public final static native long new_tile_metric_header(float jarg1);
  public final static native float tile_metric_header_density(long jarg1, tile_metric_header jarg1_);
  public final static native long tile_metric_header_default_header();
  public final static native void tile_metric_header_clear(long jarg1, tile_metric_header jarg1_);
  public final static native void delete_tile_metric_header(long jarg1);
  public final static native long new_read_metric__SWIG_0(long jarg1, float jarg2, float jarg3, float jarg4);
  public final static native long new_read_metric__SWIG_1(long jarg1, float jarg2, float jarg3);
  public final static native long new_read_metric__SWIG_2(long jarg1, float jarg2);
  public final static native long new_read_metric__SWIG_3(long jarg1);
  public final static native long new_read_metric__SWIG_4();
  public final static native long read_metric_read(long jarg1, read_metric jarg1_);
  public final static native float read_metric_percent_aligned__SWIG_0(long jarg1, read_metric jarg1_);
  public final static native float read_metric_percent_phasing__SWIG_0(long jarg1, read_metric jarg1_);
  public final static native float read_metric_percent_prephasing__SWIG_0(long jarg1, read_metric jarg1_);
  public final static native void read_metric_percent_aligned__SWIG_1(long jarg1, read_metric jarg1_, float jarg2);
  public final static native void read_metric_percent_phasing__SWIG_1(long jarg1, read_metric jarg1_, float jarg2);
  public final static native void read_metric_percent_prephasing__SWIG_1(long jarg1, read_metric jarg1_, float jarg2);
  public final static native void delete_read_metric(long jarg1);
  public final static native int tile_metric_TYPE_get();
  public final static native int tile_metric_LATEST_VERSION_get();
  public final static native long new_tile_metric__SWIG_0();
  public final static native long new_tile_metric__SWIG_1(long jarg1, tile_metric_header jarg1_);
  public final static native long new_tile_metric__SWIG_2(long jarg1, long jarg2, float jarg3, float jarg4, float jarg5, float jarg6, long jarg7, read_metric_vector jarg7_);
  public final static native long new_tile_metric__SWIG_3(long jarg1, long jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native long new_tile_metric__SWIG_4(long jarg1, long jarg2, long jarg3, read_metric_vector jarg3_);
  public final static native long new_tile_metric__SWIG_5(long jarg1, long jarg2);
  public final static native long new_tile_metric__SWIG_6(long jarg1, tile_metric jarg1_, long jarg2, read_metric_vector jarg2_);
  public final static native long new_tile_metric__SWIG_7(long jarg1, tile_metric jarg1_);
  public final static native long new_tile_metric__SWIG_8(long jarg1, long jarg2, float jarg3, float jarg4, long jarg5, read_metric_vector jarg5_);
  public final static native long new_tile_metric__SWIG_9(long jarg1, long jarg2, float jarg3, float jarg4);
  public final static native float tile_metric_cluster_density(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_cluster_density_k(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_cluster_density_pf(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_cluster_density_pf_k(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_cluster_count(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_cluster_count_k(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_cluster_count_m(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_cluster_count_pf(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_cluster_count_pf_k(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_cluster_count_pf_m(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_percent_pf(long jarg1, tile_metric jarg1_);
  public final static native long tile_metric_read_metrics(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_percent_aligned(long jarg1, tile_metric jarg1_, long jarg2);
  public final static native float tile_metric_percent_phasing(long jarg1, tile_metric jarg1_, long jarg2);
  public final static native float tile_metric_percent_prephasing(long jarg1, tile_metric jarg1_, long jarg2);
  public final static native float tile_metric_percent_aligned_at(long jarg1, tile_metric jarg1_, long jarg2);
  public final static native float tile_metric_percent_phasing_at(long jarg1, tile_metric jarg1_, long jarg2);
  public final static native float tile_metric_percent_prephasing_at(long jarg1, tile_metric jarg1_, long jarg2);
  public final static native long tile_metric_read_count(long jarg1, tile_metric jarg1_);
  public final static native boolean tile_metric_is_dead_tile(long jarg1, tile_metric jarg1_);
  public final static native void tile_metric_update_phasing_if_missing(long jarg1, tile_metric jarg1_, long jarg2, float jarg3, float jarg4);
  public final static native float tile_metric_clusterDensity(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_clusterDensityPf(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_clusterCount(long jarg1, tile_metric jarg1_);
  public final static native float tile_metric_clusterCountPf(long jarg1, tile_metric jarg1_);
  public final static native String tile_metric_prefix();
  public final static native void delete_tile_metric(long jarg1);
  public final static native long new_index_info__SWIG_0();
  public final static native long new_index_info__SWIG_1(String jarg1, String jarg2, String jarg3, java.math.BigInteger jarg4);
  public final static native String index_info_index_seq(long jarg1, index_info jarg1_);
  public final static native String index_info_sample_id(long jarg1, index_info jarg1_);
  public final static native String index_info_sample_proj(long jarg1, index_info jarg1_);
  public final static native java.math.BigInteger index_info_cluster_count(long jarg1, index_info jarg1_);
  public final static native boolean index_info_is_dual(long jarg1, index_info jarg1_);
  public final static native String index_info_index1(long jarg1, index_info jarg1_);
  public final static native String index_info_index2(long jarg1, index_info jarg1_);
  public final static native String index_info_unique_id(long jarg1, index_info jarg1_);
  public final static native void delete_index_info(long jarg1);
  public final static native long new_index_metric_header();
  public final static native long index_metric_header_index_order__SWIG_0(long jarg1, index_metric_header jarg1_);
  public final static native void index_metric_header_index_order__SWIG_1(long jarg1, index_metric_header jarg1_, long jarg2, string_vector jarg2_);
  public final static native long index_metric_header_default_header();
  public final static native void index_metric_header_clear(long jarg1, index_metric_header jarg1_);
  public final static native void delete_index_metric_header(long jarg1);
  public final static native int index_metric_TYPE_get();
  public final static native int index_metric_LATEST_VERSION_get();
  public final static native long new_index_metric__SWIG_0();
  public final static native long new_index_metric__SWIG_1(long jarg1, index_metric_header jarg1_);
  public final static native long new_index_metric__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4, index_info_vector jarg4_);
  public final static native long index_metric_size(long jarg1, index_metric jarg1_);
  public final static native long index_metric_indices__SWIG_0(long jarg1, index_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native long index_metric_indices__SWIG_1(long jarg1, index_metric jarg1_);
  public final static native String index_metric_prefix();
  public final static native void delete_index_metric(long jarg1);
  public final static native long new_q_collapsed_header__SWIG_0();
  public final static native long new_q_collapsed_header__SWIG_1(long jarg1, q_score_bin_vector jarg1_);
  public final static native long q_collapsed_header_default_header();
  public final static native void q_collapsed_header_clear(long jarg1, q_collapsed_header jarg1_);
  public final static native void delete_q_collapsed_header(long jarg1);
  public final static native int q_collapsed_metric_TYPE_get();
  public final static native int q_collapsed_metric_LATEST_VERSION_get();
  public final static native long new_q_collapsed_metric__SWIG_0();
  public final static native long new_q_collapsed_metric__SWIG_1(long jarg1, q_collapsed_header jarg1_);
  public final static native long new_q_collapsed_metric__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native long q_collapsed_metric_q20(long jarg1, q_collapsed_metric jarg1_);
  public final static native long q_collapsed_metric_q30(long jarg1, q_collapsed_metric jarg1_);
  public final static native long q_collapsed_metric_total(long jarg1, q_collapsed_metric jarg1_);
  public final static native long q_collapsed_metric_median_qscore(long jarg1, q_collapsed_metric jarg1_);
  public final static native float q_collapsed_metric_median_qscore_flt(long jarg1, q_collapsed_metric jarg1_);
  public final static native java.math.BigInteger q_collapsed_metric_cumulative_q20(long jarg1, q_collapsed_metric jarg1_);
  public final static native java.math.BigInteger q_collapsed_metric_cumulative_q30(long jarg1, q_collapsed_metric jarg1_);
  public final static native java.math.BigInteger q_collapsed_metric_cumulative_total(long jarg1, q_collapsed_metric jarg1_);
  public final static native float q_collapsed_metric_percent_over_q20(long jarg1, q_collapsed_metric jarg1_);
  public final static native float q_collapsed_metric_percent_over_q30(long jarg1, q_collapsed_metric jarg1_);
  public final static native float q_collapsed_metric_cumulative_percent_over_q20(long jarg1, q_collapsed_metric jarg1_);
  public final static native float q_collapsed_metric_cumulative_percent_over_q30(long jarg1, q_collapsed_metric jarg1_);
  public final static native void q_collapsed_metric_accumulate(long jarg1, q_collapsed_metric jarg1_, long jarg2, q_collapsed_metric jarg2_);
  public final static native String q_collapsed_metric_prefix();
  public final static native String q_collapsed_metric_suffix();
  public final static native void delete_q_collapsed_metric(long jarg1);
  public final static native int q_by_lane_metric_TYPE_get();
  public final static native int q_by_lane_metric_LATEST_VERSION_get();
  public final static native long new_q_by_lane_metric__SWIG_0();
  public final static native long new_q_by_lane_metric__SWIG_1(long jarg1, q_score_header jarg1_);
  public final static native long new_q_by_lane_metric__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4, uint_vector jarg4_);
  public final static native void q_by_lane_metric_accumulate_by_lane(long jarg1, q_by_lane_metric jarg1_, long jarg2, q_metric jarg2_);
  public final static native String q_by_lane_metric_suffix();
  public final static native void delete_q_by_lane_metric(long jarg1);
  public final static native int base_corrected_intensity_metrics_TYPE_get();
  public final static native int base_corrected_intensity_metrics_LATEST_VERSION_get();
  public final static native long new_base_corrected_intensity_metrics__SWIG_0(short jarg1);
  public final static native long new_base_corrected_intensity_metrics__SWIG_1(long jarg1, base_cycle_metric_header jarg1_, short jarg2);
  public final static native long new_base_corrected_intensity_metrics__SWIG_2(long jarg1, base_cycle_metric_header jarg1_);
  public final static native long new_base_corrected_intensity_metrics__SWIG_3();
  public final static native long new_base_corrected_intensity_metrics__SWIG_4(long jarg1, vector_corrected_intensity_metrics jarg1_, short jarg2, long jarg3, base_cycle_metric_header jarg3_);
  public final static native boolean base_corrected_intensity_metrics_data_source_exists__SWIG_0(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native void base_corrected_intensity_metrics_data_source_exists__SWIG_1(long jarg1, base_corrected_intensity_metrics jarg1_, boolean jarg2);
  public final static native void base_corrected_intensity_metrics_rebuild_index__SWIG_0(long jarg1, base_corrected_intensity_metrics jarg1_, boolean jarg2);
  public final static native void base_corrected_intensity_metrics_rebuild_index__SWIG_1(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native void base_corrected_intensity_metrics_resize(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2);
  public final static native void base_corrected_intensity_metrics_reserve(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2);
  public final static native void base_corrected_intensity_metrics_trim(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2);
  public final static native long base_corrected_intensity_metrics_find__SWIG_0(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_corrected_intensity_metrics_find__SWIG_1(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_corrected_intensity_metrics_find__SWIG_2(long jarg1, base_corrected_intensity_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_corrected_intensity_metrics_has_metric__SWIG_0(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_corrected_intensity_metrics_has_metric__SWIG_1(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_corrected_intensity_metrics_has_metric__SWIG_2(long jarg1, base_corrected_intensity_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_corrected_intensity_metrics_insert__SWIG_0(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2, corrected_intensity_metric jarg2_);
  public final static native void base_corrected_intensity_metrics_insert__SWIG_1(long jarg1, base_corrected_intensity_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, corrected_intensity_metric jarg3_);
  public final static native long base_corrected_intensity_metrics_get_metric__SWIG_0(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_corrected_intensity_metrics_get_metric__SWIG_1(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_corrected_intensity_metrics_get_metric__SWIG_2(long jarg1, base_corrected_intensity_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_corrected_intensity_metrics_at(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_corrected_intensity_metrics_set_version(long jarg1, base_corrected_intensity_metrics jarg1_, short jarg2);
  public final static native long base_corrected_intensity_metrics_keys(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native long base_corrected_intensity_metrics_lanes(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native long base_corrected_intensity_metrics_lane_count(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native long base_corrected_intensity_metrics_max_lane(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native long base_corrected_intensity_metrics_tile_numbers_for_lane(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2);
  public final static native long base_corrected_intensity_metrics_tile_numbers(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native long base_corrected_intensity_metrics_metrics_for_lane__SWIG_0(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2);
  public final static native void base_corrected_intensity_metrics_metrics_for_lane__SWIG_1(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2, vector_corrected_intensity_metrics jarg2_, long jarg3);
  public final static native long base_corrected_intensity_metrics_cycles(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native long base_corrected_intensity_metrics_metrics_for_cycle(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2);
  public final static native long base_corrected_intensity_metrics_size(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native boolean base_corrected_intensity_metrics_empty(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native short base_corrected_intensity_metrics_version(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native void base_corrected_intensity_metrics_clear(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native long base_corrected_intensity_metrics_metrics(long jarg1, base_corrected_intensity_metrics jarg1_);
  public final static native String base_corrected_intensity_metrics_prefix();
  public final static native String base_corrected_intensity_metrics_suffix();
  public final static native long base_corrected_intensity_metrics_get_metric_ref__SWIG_0(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_corrected_intensity_metrics_get_metric_ref__SWIG_1(long jarg1, base_corrected_intensity_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_corrected_intensity_metrics_get_metric_ref__SWIG_2(long jarg1, base_corrected_intensity_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_corrected_intensity_metrics(long jarg1);
  public final static native long new_vector_corrected_intensity_metrics__SWIG_0();
  public final static native long new_vector_corrected_intensity_metrics__SWIG_1(long jarg1);
  public final static native long vector_corrected_intensity_metrics_size(long jarg1, vector_corrected_intensity_metrics jarg1_);
  public final static native long vector_corrected_intensity_metrics_capacity(long jarg1, vector_corrected_intensity_metrics jarg1_);
  public final static native void vector_corrected_intensity_metrics_reserve(long jarg1, vector_corrected_intensity_metrics jarg1_, long jarg2);
  public final static native boolean vector_corrected_intensity_metrics_isEmpty(long jarg1, vector_corrected_intensity_metrics jarg1_);
  public final static native void vector_corrected_intensity_metrics_clear(long jarg1, vector_corrected_intensity_metrics jarg1_);
  public final static native void vector_corrected_intensity_metrics_add(long jarg1, vector_corrected_intensity_metrics jarg1_, long jarg2, corrected_intensity_metric jarg2_);
  public final static native long vector_corrected_intensity_metrics_get(long jarg1, vector_corrected_intensity_metrics jarg1_, int jarg2);
  public final static native void vector_corrected_intensity_metrics_set(long jarg1, vector_corrected_intensity_metrics jarg1_, int jarg2, long jarg3, corrected_intensity_metric jarg3_);
  public final static native void delete_vector_corrected_intensity_metrics(long jarg1);
  public final static native int base_error_metrics_TYPE_get();
  public final static native int base_error_metrics_LATEST_VERSION_get();
  public final static native long new_base_error_metrics__SWIG_0(short jarg1);
  public final static native long new_base_error_metrics__SWIG_1(long jarg1, base_cycle_metric_header jarg1_, short jarg2);
  public final static native long new_base_error_metrics__SWIG_2(long jarg1, base_cycle_metric_header jarg1_);
  public final static native long new_base_error_metrics__SWIG_3();
  public final static native long new_base_error_metrics__SWIG_4(long jarg1, vector_error_metrics jarg1_, short jarg2, long jarg3, base_cycle_metric_header jarg3_);
  public final static native boolean base_error_metrics_data_source_exists__SWIG_0(long jarg1, base_error_metrics jarg1_);
  public final static native void base_error_metrics_data_source_exists__SWIG_1(long jarg1, base_error_metrics jarg1_, boolean jarg2);
  public final static native void base_error_metrics_rebuild_index__SWIG_0(long jarg1, base_error_metrics jarg1_, boolean jarg2);
  public final static native void base_error_metrics_rebuild_index__SWIG_1(long jarg1, base_error_metrics jarg1_);
  public final static native void base_error_metrics_resize(long jarg1, base_error_metrics jarg1_, long jarg2);
  public final static native void base_error_metrics_reserve(long jarg1, base_error_metrics jarg1_, long jarg2);
  public final static native void base_error_metrics_trim(long jarg1, base_error_metrics jarg1_, long jarg2);
  public final static native long base_error_metrics_find__SWIG_0(long jarg1, base_error_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_error_metrics_find__SWIG_1(long jarg1, base_error_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_error_metrics_find__SWIG_2(long jarg1, base_error_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_error_metrics_has_metric__SWIG_0(long jarg1, base_error_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_error_metrics_has_metric__SWIG_1(long jarg1, base_error_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_error_metrics_has_metric__SWIG_2(long jarg1, base_error_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_error_metrics_insert__SWIG_0(long jarg1, base_error_metrics jarg1_, long jarg2, error_metric jarg2_);
  public final static native void base_error_metrics_insert__SWIG_1(long jarg1, base_error_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, error_metric jarg3_);
  public final static native long base_error_metrics_get_metric__SWIG_0(long jarg1, base_error_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_error_metrics_get_metric__SWIG_1(long jarg1, base_error_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_error_metrics_get_metric__SWIG_2(long jarg1, base_error_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_error_metrics_at(long jarg1, base_error_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_error_metrics_set_version(long jarg1, base_error_metrics jarg1_, short jarg2);
  public final static native long base_error_metrics_keys(long jarg1, base_error_metrics jarg1_);
  public final static native long base_error_metrics_lanes(long jarg1, base_error_metrics jarg1_);
  public final static native long base_error_metrics_lane_count(long jarg1, base_error_metrics jarg1_);
  public final static native long base_error_metrics_max_lane(long jarg1, base_error_metrics jarg1_);
  public final static native long base_error_metrics_tile_numbers_for_lane(long jarg1, base_error_metrics jarg1_, long jarg2);
  public final static native long base_error_metrics_tile_numbers(long jarg1, base_error_metrics jarg1_);
  public final static native long base_error_metrics_metrics_for_lane__SWIG_0(long jarg1, base_error_metrics jarg1_, long jarg2);
  public final static native void base_error_metrics_metrics_for_lane__SWIG_1(long jarg1, base_error_metrics jarg1_, long jarg2, vector_error_metrics jarg2_, long jarg3);
  public final static native long base_error_metrics_cycles(long jarg1, base_error_metrics jarg1_);
  public final static native long base_error_metrics_metrics_for_cycle(long jarg1, base_error_metrics jarg1_, long jarg2);
  public final static native long base_error_metrics_size(long jarg1, base_error_metrics jarg1_);
  public final static native boolean base_error_metrics_empty(long jarg1, base_error_metrics jarg1_);
  public final static native short base_error_metrics_version(long jarg1, base_error_metrics jarg1_);
  public final static native void base_error_metrics_clear(long jarg1, base_error_metrics jarg1_);
  public final static native long base_error_metrics_metrics(long jarg1, base_error_metrics jarg1_);
  public final static native String base_error_metrics_prefix();
  public final static native String base_error_metrics_suffix();
  public final static native long base_error_metrics_get_metric_ref__SWIG_0(long jarg1, base_error_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_error_metrics_get_metric_ref__SWIG_1(long jarg1, base_error_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_error_metrics_get_metric_ref__SWIG_2(long jarg1, base_error_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_error_metrics(long jarg1);
  public final static native long new_vector_error_metrics__SWIG_0();
  public final static native long new_vector_error_metrics__SWIG_1(long jarg1);
  public final static native long vector_error_metrics_size(long jarg1, vector_error_metrics jarg1_);
  public final static native long vector_error_metrics_capacity(long jarg1, vector_error_metrics jarg1_);
  public final static native void vector_error_metrics_reserve(long jarg1, vector_error_metrics jarg1_, long jarg2);
  public final static native boolean vector_error_metrics_isEmpty(long jarg1, vector_error_metrics jarg1_);
  public final static native void vector_error_metrics_clear(long jarg1, vector_error_metrics jarg1_);
  public final static native void vector_error_metrics_add(long jarg1, vector_error_metrics jarg1_, long jarg2, error_metric jarg2_);
  public final static native long vector_error_metrics_get(long jarg1, vector_error_metrics jarg1_, int jarg2);
  public final static native void vector_error_metrics_set(long jarg1, vector_error_metrics jarg1_, int jarg2, long jarg3, error_metric jarg3_);
  public final static native void delete_vector_error_metrics(long jarg1);
  public final static native int base_extraction_metrics_TYPE_get();
  public final static native int base_extraction_metrics_LATEST_VERSION_get();
  public final static native long new_base_extraction_metrics__SWIG_0(short jarg1);
  public final static native long new_base_extraction_metrics__SWIG_1(long jarg1, extraction_metric_header jarg1_, short jarg2);
  public final static native long new_base_extraction_metrics__SWIG_2(long jarg1, extraction_metric_header jarg1_);
  public final static native long new_base_extraction_metrics__SWIG_3();
  public final static native long new_base_extraction_metrics__SWIG_4(long jarg1, vector_extraction_metrics jarg1_, short jarg2, long jarg3, extraction_metric_header jarg3_);
  public final static native boolean base_extraction_metrics_data_source_exists__SWIG_0(long jarg1, base_extraction_metrics jarg1_);
  public final static native void base_extraction_metrics_data_source_exists__SWIG_1(long jarg1, base_extraction_metrics jarg1_, boolean jarg2);
  public final static native void base_extraction_metrics_rebuild_index__SWIG_0(long jarg1, base_extraction_metrics jarg1_, boolean jarg2);
  public final static native void base_extraction_metrics_rebuild_index__SWIG_1(long jarg1, base_extraction_metrics jarg1_);
  public final static native void base_extraction_metrics_resize(long jarg1, base_extraction_metrics jarg1_, long jarg2);
  public final static native void base_extraction_metrics_reserve(long jarg1, base_extraction_metrics jarg1_, long jarg2);
  public final static native void base_extraction_metrics_trim(long jarg1, base_extraction_metrics jarg1_, long jarg2);
  public final static native long base_extraction_metrics_find__SWIG_0(long jarg1, base_extraction_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_extraction_metrics_find__SWIG_1(long jarg1, base_extraction_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_extraction_metrics_find__SWIG_2(long jarg1, base_extraction_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_extraction_metrics_has_metric__SWIG_0(long jarg1, base_extraction_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_extraction_metrics_has_metric__SWIG_1(long jarg1, base_extraction_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_extraction_metrics_has_metric__SWIG_2(long jarg1, base_extraction_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_extraction_metrics_insert__SWIG_0(long jarg1, base_extraction_metrics jarg1_, long jarg2, extraction_metric jarg2_);
  public final static native void base_extraction_metrics_insert__SWIG_1(long jarg1, base_extraction_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, extraction_metric jarg3_);
  public final static native long base_extraction_metrics_get_metric__SWIG_0(long jarg1, base_extraction_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_extraction_metrics_get_metric__SWIG_1(long jarg1, base_extraction_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_extraction_metrics_get_metric__SWIG_2(long jarg1, base_extraction_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_extraction_metrics_at(long jarg1, base_extraction_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_extraction_metrics_set_version(long jarg1, base_extraction_metrics jarg1_, short jarg2);
  public final static native long base_extraction_metrics_keys(long jarg1, base_extraction_metrics jarg1_);
  public final static native long base_extraction_metrics_lanes(long jarg1, base_extraction_metrics jarg1_);
  public final static native long base_extraction_metrics_lane_count(long jarg1, base_extraction_metrics jarg1_);
  public final static native long base_extraction_metrics_max_lane(long jarg1, base_extraction_metrics jarg1_);
  public final static native long base_extraction_metrics_tile_numbers_for_lane(long jarg1, base_extraction_metrics jarg1_, long jarg2);
  public final static native long base_extraction_metrics_tile_numbers(long jarg1, base_extraction_metrics jarg1_);
  public final static native long base_extraction_metrics_metrics_for_lane__SWIG_0(long jarg1, base_extraction_metrics jarg1_, long jarg2);
  public final static native void base_extraction_metrics_metrics_for_lane__SWIG_1(long jarg1, base_extraction_metrics jarg1_, long jarg2, vector_extraction_metrics jarg2_, long jarg3);
  public final static native long base_extraction_metrics_cycles(long jarg1, base_extraction_metrics jarg1_);
  public final static native long base_extraction_metrics_metrics_for_cycle(long jarg1, base_extraction_metrics jarg1_, long jarg2);
  public final static native long base_extraction_metrics_size(long jarg1, base_extraction_metrics jarg1_);
  public final static native boolean base_extraction_metrics_empty(long jarg1, base_extraction_metrics jarg1_);
  public final static native short base_extraction_metrics_version(long jarg1, base_extraction_metrics jarg1_);
  public final static native void base_extraction_metrics_clear(long jarg1, base_extraction_metrics jarg1_);
  public final static native long base_extraction_metrics_metrics(long jarg1, base_extraction_metrics jarg1_);
  public final static native String base_extraction_metrics_prefix();
  public final static native String base_extraction_metrics_suffix();
  public final static native long base_extraction_metrics_get_metric_ref__SWIG_0(long jarg1, base_extraction_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_extraction_metrics_get_metric_ref__SWIG_1(long jarg1, base_extraction_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_extraction_metrics_get_metric_ref__SWIG_2(long jarg1, base_extraction_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_extraction_metrics(long jarg1);
  public final static native long new_vector_extraction_metrics__SWIG_0();
  public final static native long new_vector_extraction_metrics__SWIG_1(long jarg1);
  public final static native long vector_extraction_metrics_size(long jarg1, vector_extraction_metrics jarg1_);
  public final static native long vector_extraction_metrics_capacity(long jarg1, vector_extraction_metrics jarg1_);
  public final static native void vector_extraction_metrics_reserve(long jarg1, vector_extraction_metrics jarg1_, long jarg2);
  public final static native boolean vector_extraction_metrics_isEmpty(long jarg1, vector_extraction_metrics jarg1_);
  public final static native void vector_extraction_metrics_clear(long jarg1, vector_extraction_metrics jarg1_);
  public final static native void vector_extraction_metrics_add(long jarg1, vector_extraction_metrics jarg1_, long jarg2, extraction_metric jarg2_);
  public final static native long vector_extraction_metrics_get(long jarg1, vector_extraction_metrics jarg1_, int jarg2);
  public final static native void vector_extraction_metrics_set(long jarg1, vector_extraction_metrics jarg1_, int jarg2, long jarg3, extraction_metric jarg3_);
  public final static native void delete_vector_extraction_metrics(long jarg1);
  public final static native int base_image_metrics_TYPE_get();
  public final static native int base_image_metrics_LATEST_VERSION_get();
  public final static native long new_base_image_metrics__SWIG_0(short jarg1);
  public final static native long new_base_image_metrics__SWIG_1(long jarg1, image_metric_header jarg1_, short jarg2);
  public final static native long new_base_image_metrics__SWIG_2(long jarg1, image_metric_header jarg1_);
  public final static native long new_base_image_metrics__SWIG_3();
  public final static native long new_base_image_metrics__SWIG_4(long jarg1, vector_image_metrics jarg1_, short jarg2, long jarg3, image_metric_header jarg3_);
  public final static native boolean base_image_metrics_data_source_exists__SWIG_0(long jarg1, base_image_metrics jarg1_);
  public final static native void base_image_metrics_data_source_exists__SWIG_1(long jarg1, base_image_metrics jarg1_, boolean jarg2);
  public final static native void base_image_metrics_rebuild_index__SWIG_0(long jarg1, base_image_metrics jarg1_, boolean jarg2);
  public final static native void base_image_metrics_rebuild_index__SWIG_1(long jarg1, base_image_metrics jarg1_);
  public final static native void base_image_metrics_resize(long jarg1, base_image_metrics jarg1_, long jarg2);
  public final static native void base_image_metrics_reserve(long jarg1, base_image_metrics jarg1_, long jarg2);
  public final static native void base_image_metrics_trim(long jarg1, base_image_metrics jarg1_, long jarg2);
  public final static native long base_image_metrics_find__SWIG_0(long jarg1, base_image_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_image_metrics_find__SWIG_1(long jarg1, base_image_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_image_metrics_find__SWIG_2(long jarg1, base_image_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_image_metrics_has_metric__SWIG_0(long jarg1, base_image_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_image_metrics_has_metric__SWIG_1(long jarg1, base_image_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_image_metrics_has_metric__SWIG_2(long jarg1, base_image_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_image_metrics_insert__SWIG_0(long jarg1, base_image_metrics jarg1_, long jarg2, image_metric jarg2_);
  public final static native void base_image_metrics_insert__SWIG_1(long jarg1, base_image_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, image_metric jarg3_);
  public final static native long base_image_metrics_get_metric__SWIG_0(long jarg1, base_image_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_image_metrics_get_metric__SWIG_1(long jarg1, base_image_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_image_metrics_get_metric__SWIG_2(long jarg1, base_image_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_image_metrics_at(long jarg1, base_image_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_image_metrics_set_version(long jarg1, base_image_metrics jarg1_, short jarg2);
  public final static native long base_image_metrics_keys(long jarg1, base_image_metrics jarg1_);
  public final static native long base_image_metrics_lanes(long jarg1, base_image_metrics jarg1_);
  public final static native long base_image_metrics_lane_count(long jarg1, base_image_metrics jarg1_);
  public final static native long base_image_metrics_max_lane(long jarg1, base_image_metrics jarg1_);
  public final static native long base_image_metrics_tile_numbers_for_lane(long jarg1, base_image_metrics jarg1_, long jarg2);
  public final static native long base_image_metrics_tile_numbers(long jarg1, base_image_metrics jarg1_);
  public final static native long base_image_metrics_metrics_for_lane__SWIG_0(long jarg1, base_image_metrics jarg1_, long jarg2);
  public final static native void base_image_metrics_metrics_for_lane__SWIG_1(long jarg1, base_image_metrics jarg1_, long jarg2, vector_image_metrics jarg2_, long jarg3);
  public final static native long base_image_metrics_cycles(long jarg1, base_image_metrics jarg1_);
  public final static native long base_image_metrics_metrics_for_cycle(long jarg1, base_image_metrics jarg1_, long jarg2);
  public final static native long base_image_metrics_size(long jarg1, base_image_metrics jarg1_);
  public final static native boolean base_image_metrics_empty(long jarg1, base_image_metrics jarg1_);
  public final static native short base_image_metrics_version(long jarg1, base_image_metrics jarg1_);
  public final static native void base_image_metrics_clear(long jarg1, base_image_metrics jarg1_);
  public final static native long base_image_metrics_metrics(long jarg1, base_image_metrics jarg1_);
  public final static native String base_image_metrics_prefix();
  public final static native String base_image_metrics_suffix();
  public final static native long base_image_metrics_get_metric_ref__SWIG_0(long jarg1, base_image_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_image_metrics_get_metric_ref__SWIG_1(long jarg1, base_image_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_image_metrics_get_metric_ref__SWIG_2(long jarg1, base_image_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_image_metrics(long jarg1);
  public final static native long new_vector_image_metrics__SWIG_0();
  public final static native long new_vector_image_metrics__SWIG_1(long jarg1);
  public final static native long vector_image_metrics_size(long jarg1, vector_image_metrics jarg1_);
  public final static native long vector_image_metrics_capacity(long jarg1, vector_image_metrics jarg1_);
  public final static native void vector_image_metrics_reserve(long jarg1, vector_image_metrics jarg1_, long jarg2);
  public final static native boolean vector_image_metrics_isEmpty(long jarg1, vector_image_metrics jarg1_);
  public final static native void vector_image_metrics_clear(long jarg1, vector_image_metrics jarg1_);
  public final static native void vector_image_metrics_add(long jarg1, vector_image_metrics jarg1_, long jarg2, image_metric jarg2_);
  public final static native long vector_image_metrics_get(long jarg1, vector_image_metrics jarg1_, int jarg2);
  public final static native void vector_image_metrics_set(long jarg1, vector_image_metrics jarg1_, int jarg2, long jarg3, image_metric jarg3_);
  public final static native void delete_vector_image_metrics(long jarg1);
  public final static native int base_q_metrics_TYPE_get();
  public final static native int base_q_metrics_LATEST_VERSION_get();
  public final static native long new_base_q_metrics__SWIG_0(short jarg1);
  public final static native long new_base_q_metrics__SWIG_1(long jarg1, q_score_header jarg1_, short jarg2);
  public final static native long new_base_q_metrics__SWIG_2(long jarg1, q_score_header jarg1_);
  public final static native long new_base_q_metrics__SWIG_3();
  public final static native long new_base_q_metrics__SWIG_4(long jarg1, vector_q_metrics jarg1_, short jarg2, long jarg3, q_score_header jarg3_);
  public final static native boolean base_q_metrics_data_source_exists__SWIG_0(long jarg1, base_q_metrics jarg1_);
  public final static native void base_q_metrics_data_source_exists__SWIG_1(long jarg1, base_q_metrics jarg1_, boolean jarg2);
  public final static native void base_q_metrics_rebuild_index__SWIG_0(long jarg1, base_q_metrics jarg1_, boolean jarg2);
  public final static native void base_q_metrics_rebuild_index__SWIG_1(long jarg1, base_q_metrics jarg1_);
  public final static native void base_q_metrics_resize(long jarg1, base_q_metrics jarg1_, long jarg2);
  public final static native void base_q_metrics_reserve(long jarg1, base_q_metrics jarg1_, long jarg2);
  public final static native void base_q_metrics_trim(long jarg1, base_q_metrics jarg1_, long jarg2);
  public final static native long base_q_metrics_find__SWIG_0(long jarg1, base_q_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_q_metrics_find__SWIG_1(long jarg1, base_q_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_q_metrics_find__SWIG_2(long jarg1, base_q_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_q_metrics_has_metric__SWIG_0(long jarg1, base_q_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_q_metrics_has_metric__SWIG_1(long jarg1, base_q_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_q_metrics_has_metric__SWIG_2(long jarg1, base_q_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_q_metrics_insert__SWIG_0(long jarg1, base_q_metrics jarg1_, long jarg2, q_metric jarg2_);
  public final static native void base_q_metrics_insert__SWIG_1(long jarg1, base_q_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, q_metric jarg3_);
  public final static native long base_q_metrics_get_metric__SWIG_0(long jarg1, base_q_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_q_metrics_get_metric__SWIG_1(long jarg1, base_q_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_q_metrics_get_metric__SWIG_2(long jarg1, base_q_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_q_metrics_at(long jarg1, base_q_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_q_metrics_set_version(long jarg1, base_q_metrics jarg1_, short jarg2);
  public final static native long base_q_metrics_keys(long jarg1, base_q_metrics jarg1_);
  public final static native long base_q_metrics_lanes(long jarg1, base_q_metrics jarg1_);
  public final static native long base_q_metrics_lane_count(long jarg1, base_q_metrics jarg1_);
  public final static native long base_q_metrics_max_lane(long jarg1, base_q_metrics jarg1_);
  public final static native long base_q_metrics_tile_numbers_for_lane(long jarg1, base_q_metrics jarg1_, long jarg2);
  public final static native long base_q_metrics_tile_numbers(long jarg1, base_q_metrics jarg1_);
  public final static native long base_q_metrics_metrics_for_lane__SWIG_0(long jarg1, base_q_metrics jarg1_, long jarg2);
  public final static native void base_q_metrics_metrics_for_lane__SWIG_1(long jarg1, base_q_metrics jarg1_, long jarg2, vector_q_metrics jarg2_, long jarg3);
  public final static native long base_q_metrics_cycles(long jarg1, base_q_metrics jarg1_);
  public final static native long base_q_metrics_metrics_for_cycle(long jarg1, base_q_metrics jarg1_, long jarg2);
  public final static native long base_q_metrics_size(long jarg1, base_q_metrics jarg1_);
  public final static native boolean base_q_metrics_empty(long jarg1, base_q_metrics jarg1_);
  public final static native short base_q_metrics_version(long jarg1, base_q_metrics jarg1_);
  public final static native void base_q_metrics_clear(long jarg1, base_q_metrics jarg1_);
  public final static native long base_q_metrics_metrics(long jarg1, base_q_metrics jarg1_);
  public final static native String base_q_metrics_prefix();
  public final static native String base_q_metrics_suffix();
  public final static native long base_q_metrics_get_metric_ref__SWIG_0(long jarg1, base_q_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_q_metrics_get_metric_ref__SWIG_1(long jarg1, base_q_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_q_metrics_get_metric_ref__SWIG_2(long jarg1, base_q_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_q_metrics(long jarg1);
  public final static native long new_vector_q_metrics__SWIG_0();
  public final static native long new_vector_q_metrics__SWIG_1(long jarg1);
  public final static native long vector_q_metrics_size(long jarg1, vector_q_metrics jarg1_);
  public final static native long vector_q_metrics_capacity(long jarg1, vector_q_metrics jarg1_);
  public final static native void vector_q_metrics_reserve(long jarg1, vector_q_metrics jarg1_, long jarg2);
  public final static native boolean vector_q_metrics_isEmpty(long jarg1, vector_q_metrics jarg1_);
  public final static native void vector_q_metrics_clear(long jarg1, vector_q_metrics jarg1_);
  public final static native void vector_q_metrics_add(long jarg1, vector_q_metrics jarg1_, long jarg2, q_metric jarg2_);
  public final static native long vector_q_metrics_get(long jarg1, vector_q_metrics jarg1_, int jarg2);
  public final static native void vector_q_metrics_set(long jarg1, vector_q_metrics jarg1_, int jarg2, long jarg3, q_metric jarg3_);
  public final static native void delete_vector_q_metrics(long jarg1);
  public final static native int base_tile_metrics_TYPE_get();
  public final static native int base_tile_metrics_LATEST_VERSION_get();
  public final static native long new_base_tile_metrics__SWIG_0(short jarg1);
  public final static native long new_base_tile_metrics__SWIG_1(long jarg1, tile_metric_header jarg1_, short jarg2);
  public final static native long new_base_tile_metrics__SWIG_2(long jarg1, tile_metric_header jarg1_);
  public final static native long new_base_tile_metrics__SWIG_3();
  public final static native long new_base_tile_metrics__SWIG_4(long jarg1, vector_tile_metrics jarg1_, short jarg2, long jarg3, tile_metric_header jarg3_);
  public final static native boolean base_tile_metrics_data_source_exists__SWIG_0(long jarg1, base_tile_metrics jarg1_);
  public final static native void base_tile_metrics_data_source_exists__SWIG_1(long jarg1, base_tile_metrics jarg1_, boolean jarg2);
  public final static native void base_tile_metrics_rebuild_index__SWIG_0(long jarg1, base_tile_metrics jarg1_, boolean jarg2);
  public final static native void base_tile_metrics_rebuild_index__SWIG_1(long jarg1, base_tile_metrics jarg1_);
  public final static native void base_tile_metrics_resize(long jarg1, base_tile_metrics jarg1_, long jarg2);
  public final static native void base_tile_metrics_reserve(long jarg1, base_tile_metrics jarg1_, long jarg2);
  public final static native void base_tile_metrics_trim(long jarg1, base_tile_metrics jarg1_, long jarg2);
  public final static native long base_tile_metrics_find__SWIG_0(long jarg1, base_tile_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_tile_metrics_find__SWIG_1(long jarg1, base_tile_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_tile_metrics_find__SWIG_2(long jarg1, base_tile_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_tile_metrics_has_metric__SWIG_0(long jarg1, base_tile_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_tile_metrics_has_metric__SWIG_1(long jarg1, base_tile_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_tile_metrics_has_metric__SWIG_2(long jarg1, base_tile_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_tile_metrics_insert__SWIG_0(long jarg1, base_tile_metrics jarg1_, long jarg2, tile_metric jarg2_);
  public final static native void base_tile_metrics_insert__SWIG_1(long jarg1, base_tile_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, tile_metric jarg3_);
  public final static native long base_tile_metrics_get_metric__SWIG_0(long jarg1, base_tile_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_tile_metrics_get_metric__SWIG_1(long jarg1, base_tile_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_tile_metrics_get_metric__SWIG_2(long jarg1, base_tile_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_tile_metrics_at(long jarg1, base_tile_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_tile_metrics_set_version(long jarg1, base_tile_metrics jarg1_, short jarg2);
  public final static native long base_tile_metrics_keys(long jarg1, base_tile_metrics jarg1_);
  public final static native long base_tile_metrics_lanes(long jarg1, base_tile_metrics jarg1_);
  public final static native long base_tile_metrics_lane_count(long jarg1, base_tile_metrics jarg1_);
  public final static native long base_tile_metrics_max_lane(long jarg1, base_tile_metrics jarg1_);
  public final static native long base_tile_metrics_tile_numbers_for_lane(long jarg1, base_tile_metrics jarg1_, long jarg2);
  public final static native long base_tile_metrics_tile_numbers(long jarg1, base_tile_metrics jarg1_);
  public final static native long base_tile_metrics_metrics_for_lane__SWIG_0(long jarg1, base_tile_metrics jarg1_, long jarg2);
  public final static native void base_tile_metrics_metrics_for_lane__SWIG_1(long jarg1, base_tile_metrics jarg1_, long jarg2, vector_tile_metrics jarg2_, long jarg3);
  public final static native long base_tile_metrics_cycles(long jarg1, base_tile_metrics jarg1_);
  public final static native long base_tile_metrics_metrics_for_cycle(long jarg1, base_tile_metrics jarg1_, long jarg2);
  public final static native long base_tile_metrics_size(long jarg1, base_tile_metrics jarg1_);
  public final static native boolean base_tile_metrics_empty(long jarg1, base_tile_metrics jarg1_);
  public final static native short base_tile_metrics_version(long jarg1, base_tile_metrics jarg1_);
  public final static native void base_tile_metrics_clear(long jarg1, base_tile_metrics jarg1_);
  public final static native long base_tile_metrics_metrics(long jarg1, base_tile_metrics jarg1_);
  public final static native String base_tile_metrics_prefix();
  public final static native String base_tile_metrics_suffix();
  public final static native long base_tile_metrics_get_metric_ref__SWIG_0(long jarg1, base_tile_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_tile_metrics_get_metric_ref__SWIG_1(long jarg1, base_tile_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_tile_metrics_get_metric_ref__SWIG_2(long jarg1, base_tile_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_tile_metrics(long jarg1);
  public final static native long new_vector_tile_metrics__SWIG_0();
  public final static native long new_vector_tile_metrics__SWIG_1(long jarg1);
  public final static native long vector_tile_metrics_size(long jarg1, vector_tile_metrics jarg1_);
  public final static native long vector_tile_metrics_capacity(long jarg1, vector_tile_metrics jarg1_);
  public final static native void vector_tile_metrics_reserve(long jarg1, vector_tile_metrics jarg1_, long jarg2);
  public final static native boolean vector_tile_metrics_isEmpty(long jarg1, vector_tile_metrics jarg1_);
  public final static native void vector_tile_metrics_clear(long jarg1, vector_tile_metrics jarg1_);
  public final static native void vector_tile_metrics_add(long jarg1, vector_tile_metrics jarg1_, long jarg2, tile_metric jarg2_);
  public final static native long vector_tile_metrics_get(long jarg1, vector_tile_metrics jarg1_, int jarg2);
  public final static native void vector_tile_metrics_set(long jarg1, vector_tile_metrics jarg1_, int jarg2, long jarg3, tile_metric jarg3_);
  public final static native void delete_vector_tile_metrics(long jarg1);
  public final static native int base_index_metrics_TYPE_get();
  public final static native int base_index_metrics_LATEST_VERSION_get();
  public final static native long new_base_index_metrics__SWIG_0(short jarg1);
  public final static native long new_base_index_metrics__SWIG_1(long jarg1, index_metric_header jarg1_, short jarg2);
  public final static native long new_base_index_metrics__SWIG_2(long jarg1, index_metric_header jarg1_);
  public final static native long new_base_index_metrics__SWIG_3();
  public final static native long new_base_index_metrics__SWIG_4(long jarg1, vector_index_metrics jarg1_, short jarg2, long jarg3, index_metric_header jarg3_);
  public final static native boolean base_index_metrics_data_source_exists__SWIG_0(long jarg1, base_index_metrics jarg1_);
  public final static native void base_index_metrics_data_source_exists__SWIG_1(long jarg1, base_index_metrics jarg1_, boolean jarg2);
  public final static native void base_index_metrics_rebuild_index__SWIG_0(long jarg1, base_index_metrics jarg1_, boolean jarg2);
  public final static native void base_index_metrics_rebuild_index__SWIG_1(long jarg1, base_index_metrics jarg1_);
  public final static native void base_index_metrics_resize(long jarg1, base_index_metrics jarg1_, long jarg2);
  public final static native void base_index_metrics_reserve(long jarg1, base_index_metrics jarg1_, long jarg2);
  public final static native void base_index_metrics_trim(long jarg1, base_index_metrics jarg1_, long jarg2);
  public final static native long base_index_metrics_find__SWIG_0(long jarg1, base_index_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_index_metrics_find__SWIG_1(long jarg1, base_index_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_index_metrics_find__SWIG_2(long jarg1, base_index_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_index_metrics_has_metric__SWIG_0(long jarg1, base_index_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_index_metrics_has_metric__SWIG_1(long jarg1, base_index_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_index_metrics_has_metric__SWIG_2(long jarg1, base_index_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_index_metrics_insert__SWIG_0(long jarg1, base_index_metrics jarg1_, long jarg2, index_metric jarg2_);
  public final static native void base_index_metrics_insert__SWIG_1(long jarg1, base_index_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, index_metric jarg3_);
  public final static native long base_index_metrics_get_metric__SWIG_0(long jarg1, base_index_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_index_metrics_get_metric__SWIG_1(long jarg1, base_index_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_index_metrics_get_metric__SWIG_2(long jarg1, base_index_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_index_metrics_at(long jarg1, base_index_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_index_metrics_set_version(long jarg1, base_index_metrics jarg1_, short jarg2);
  public final static native long base_index_metrics_keys(long jarg1, base_index_metrics jarg1_);
  public final static native long base_index_metrics_lanes(long jarg1, base_index_metrics jarg1_);
  public final static native long base_index_metrics_lane_count(long jarg1, base_index_metrics jarg1_);
  public final static native long base_index_metrics_max_lane(long jarg1, base_index_metrics jarg1_);
  public final static native long base_index_metrics_tile_numbers_for_lane(long jarg1, base_index_metrics jarg1_, long jarg2);
  public final static native long base_index_metrics_tile_numbers(long jarg1, base_index_metrics jarg1_);
  public final static native long base_index_metrics_metrics_for_lane__SWIG_0(long jarg1, base_index_metrics jarg1_, long jarg2);
  public final static native void base_index_metrics_metrics_for_lane__SWIG_1(long jarg1, base_index_metrics jarg1_, long jarg2, vector_index_metrics jarg2_, long jarg3);
  public final static native long base_index_metrics_cycles(long jarg1, base_index_metrics jarg1_);
  public final static native long base_index_metrics_metrics_for_cycle(long jarg1, base_index_metrics jarg1_, long jarg2);
  public final static native long base_index_metrics_size(long jarg1, base_index_metrics jarg1_);
  public final static native boolean base_index_metrics_empty(long jarg1, base_index_metrics jarg1_);
  public final static native short base_index_metrics_version(long jarg1, base_index_metrics jarg1_);
  public final static native void base_index_metrics_clear(long jarg1, base_index_metrics jarg1_);
  public final static native long base_index_metrics_metrics(long jarg1, base_index_metrics jarg1_);
  public final static native String base_index_metrics_prefix();
  public final static native String base_index_metrics_suffix();
  public final static native long base_index_metrics_get_metric_ref__SWIG_0(long jarg1, base_index_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_index_metrics_get_metric_ref__SWIG_1(long jarg1, base_index_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_index_metrics_get_metric_ref__SWIG_2(long jarg1, base_index_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_index_metrics(long jarg1);
  public final static native long new_vector_index_metrics__SWIG_0();
  public final static native long new_vector_index_metrics__SWIG_1(long jarg1);
  public final static native long vector_index_metrics_size(long jarg1, vector_index_metrics jarg1_);
  public final static native long vector_index_metrics_capacity(long jarg1, vector_index_metrics jarg1_);
  public final static native void vector_index_metrics_reserve(long jarg1, vector_index_metrics jarg1_, long jarg2);
  public final static native boolean vector_index_metrics_isEmpty(long jarg1, vector_index_metrics jarg1_);
  public final static native void vector_index_metrics_clear(long jarg1, vector_index_metrics jarg1_);
  public final static native void vector_index_metrics_add(long jarg1, vector_index_metrics jarg1_, long jarg2, index_metric jarg2_);
  public final static native long vector_index_metrics_get(long jarg1, vector_index_metrics jarg1_, int jarg2);
  public final static native void vector_index_metrics_set(long jarg1, vector_index_metrics jarg1_, int jarg2, long jarg3, index_metric jarg3_);
  public final static native void delete_vector_index_metrics(long jarg1);
  public final static native int base_q_collapsed_metrics_TYPE_get();
  public final static native int base_q_collapsed_metrics_LATEST_VERSION_get();
  public final static native long new_base_q_collapsed_metrics__SWIG_0(short jarg1);
  public final static native long new_base_q_collapsed_metrics__SWIG_1(long jarg1, q_collapsed_header jarg1_, short jarg2);
  public final static native long new_base_q_collapsed_metrics__SWIG_2(long jarg1, q_collapsed_header jarg1_);
  public final static native long new_base_q_collapsed_metrics__SWIG_3();
  public final static native long new_base_q_collapsed_metrics__SWIG_4(long jarg1, vector_q_collapsed_metrics jarg1_, short jarg2, long jarg3, q_collapsed_header jarg3_);
  public final static native boolean base_q_collapsed_metrics_data_source_exists__SWIG_0(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native void base_q_collapsed_metrics_data_source_exists__SWIG_1(long jarg1, base_q_collapsed_metrics jarg1_, boolean jarg2);
  public final static native void base_q_collapsed_metrics_rebuild_index__SWIG_0(long jarg1, base_q_collapsed_metrics jarg1_, boolean jarg2);
  public final static native void base_q_collapsed_metrics_rebuild_index__SWIG_1(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native void base_q_collapsed_metrics_resize(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2);
  public final static native void base_q_collapsed_metrics_reserve(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2);
  public final static native void base_q_collapsed_metrics_trim(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2);
  public final static native long base_q_collapsed_metrics_find__SWIG_0(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_q_collapsed_metrics_find__SWIG_1(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_q_collapsed_metrics_find__SWIG_2(long jarg1, base_q_collapsed_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_q_collapsed_metrics_has_metric__SWIG_0(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_q_collapsed_metrics_has_metric__SWIG_1(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_q_collapsed_metrics_has_metric__SWIG_2(long jarg1, base_q_collapsed_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_q_collapsed_metrics_insert__SWIG_0(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2, q_collapsed_metric jarg2_);
  public final static native void base_q_collapsed_metrics_insert__SWIG_1(long jarg1, base_q_collapsed_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, q_collapsed_metric jarg3_);
  public final static native long base_q_collapsed_metrics_get_metric__SWIG_0(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_q_collapsed_metrics_get_metric__SWIG_1(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_q_collapsed_metrics_get_metric__SWIG_2(long jarg1, base_q_collapsed_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_q_collapsed_metrics_at(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_q_collapsed_metrics_set_version(long jarg1, base_q_collapsed_metrics jarg1_, short jarg2);
  public final static native long base_q_collapsed_metrics_keys(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native long base_q_collapsed_metrics_lanes(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native long base_q_collapsed_metrics_lane_count(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native long base_q_collapsed_metrics_max_lane(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native long base_q_collapsed_metrics_tile_numbers_for_lane(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2);
  public final static native long base_q_collapsed_metrics_tile_numbers(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native long base_q_collapsed_metrics_metrics_for_lane__SWIG_0(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2);
  public final static native void base_q_collapsed_metrics_metrics_for_lane__SWIG_1(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2, vector_q_collapsed_metrics jarg2_, long jarg3);
  public final static native long base_q_collapsed_metrics_cycles(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native long base_q_collapsed_metrics_metrics_for_cycle(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2);
  public final static native long base_q_collapsed_metrics_size(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native boolean base_q_collapsed_metrics_empty(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native short base_q_collapsed_metrics_version(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native void base_q_collapsed_metrics_clear(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native long base_q_collapsed_metrics_metrics(long jarg1, base_q_collapsed_metrics jarg1_);
  public final static native String base_q_collapsed_metrics_prefix();
  public final static native String base_q_collapsed_metrics_suffix();
  public final static native long base_q_collapsed_metrics_get_metric_ref__SWIG_0(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_q_collapsed_metrics_get_metric_ref__SWIG_1(long jarg1, base_q_collapsed_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_q_collapsed_metrics_get_metric_ref__SWIG_2(long jarg1, base_q_collapsed_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_q_collapsed_metrics(long jarg1);
  public final static native long new_vector_q_collapsed_metrics__SWIG_0();
  public final static native long new_vector_q_collapsed_metrics__SWIG_1(long jarg1);
  public final static native long vector_q_collapsed_metrics_size(long jarg1, vector_q_collapsed_metrics jarg1_);
  public final static native long vector_q_collapsed_metrics_capacity(long jarg1, vector_q_collapsed_metrics jarg1_);
  public final static native void vector_q_collapsed_metrics_reserve(long jarg1, vector_q_collapsed_metrics jarg1_, long jarg2);
  public final static native boolean vector_q_collapsed_metrics_isEmpty(long jarg1, vector_q_collapsed_metrics jarg1_);
  public final static native void vector_q_collapsed_metrics_clear(long jarg1, vector_q_collapsed_metrics jarg1_);
  public final static native void vector_q_collapsed_metrics_add(long jarg1, vector_q_collapsed_metrics jarg1_, long jarg2, q_collapsed_metric jarg2_);
  public final static native long vector_q_collapsed_metrics_get(long jarg1, vector_q_collapsed_metrics jarg1_, int jarg2);
  public final static native void vector_q_collapsed_metrics_set(long jarg1, vector_q_collapsed_metrics jarg1_, int jarg2, long jarg3, q_collapsed_metric jarg3_);
  public final static native void delete_vector_q_collapsed_metrics(long jarg1);
  public final static native int base_q_by_lane_metrics_TYPE_get();
  public final static native int base_q_by_lane_metrics_LATEST_VERSION_get();
  public final static native long new_base_q_by_lane_metrics__SWIG_0(short jarg1);
  public final static native long new_base_q_by_lane_metrics__SWIG_1(long jarg1, q_score_header jarg1_, short jarg2);
  public final static native long new_base_q_by_lane_metrics__SWIG_2(long jarg1, q_score_header jarg1_);
  public final static native long new_base_q_by_lane_metrics__SWIG_3();
  public final static native long new_base_q_by_lane_metrics__SWIG_4(long jarg1, vector_q_by_lane_metrics jarg1_, short jarg2, long jarg3, q_score_header jarg3_);
  public final static native boolean base_q_by_lane_metrics_data_source_exists__SWIG_0(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native void base_q_by_lane_metrics_data_source_exists__SWIG_1(long jarg1, base_q_by_lane_metrics jarg1_, boolean jarg2);
  public final static native void base_q_by_lane_metrics_rebuild_index__SWIG_0(long jarg1, base_q_by_lane_metrics jarg1_, boolean jarg2);
  public final static native void base_q_by_lane_metrics_rebuild_index__SWIG_1(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native void base_q_by_lane_metrics_resize(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2);
  public final static native void base_q_by_lane_metrics_reserve(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2);
  public final static native void base_q_by_lane_metrics_trim(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2);
  public final static native long base_q_by_lane_metrics_find__SWIG_0(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_q_by_lane_metrics_find__SWIG_1(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_q_by_lane_metrics_find__SWIG_2(long jarg1, base_q_by_lane_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_q_by_lane_metrics_has_metric__SWIG_0(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_q_by_lane_metrics_has_metric__SWIG_1(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_q_by_lane_metrics_has_metric__SWIG_2(long jarg1, base_q_by_lane_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_q_by_lane_metrics_insert__SWIG_0(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2, q_by_lane_metric jarg2_);
  public final static native void base_q_by_lane_metrics_insert__SWIG_1(long jarg1, base_q_by_lane_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, q_by_lane_metric jarg3_);
  public final static native long base_q_by_lane_metrics_get_metric__SWIG_0(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_q_by_lane_metrics_get_metric__SWIG_1(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_q_by_lane_metrics_get_metric__SWIG_2(long jarg1, base_q_by_lane_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_q_by_lane_metrics_at(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_q_by_lane_metrics_set_version(long jarg1, base_q_by_lane_metrics jarg1_, short jarg2);
  public final static native long base_q_by_lane_metrics_keys(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native long base_q_by_lane_metrics_lanes(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native long base_q_by_lane_metrics_lane_count(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native long base_q_by_lane_metrics_max_lane(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native long base_q_by_lane_metrics_tile_numbers_for_lane(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2);
  public final static native long base_q_by_lane_metrics_tile_numbers(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native long base_q_by_lane_metrics_metrics_for_lane__SWIG_0(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2);
  public final static native void base_q_by_lane_metrics_metrics_for_lane__SWIG_1(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2, vector_q_by_lane_metrics jarg2_, long jarg3);
  public final static native long base_q_by_lane_metrics_cycles(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native long base_q_by_lane_metrics_metrics_for_cycle(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2);
  public final static native long base_q_by_lane_metrics_size(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native boolean base_q_by_lane_metrics_empty(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native short base_q_by_lane_metrics_version(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native void base_q_by_lane_metrics_clear(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native long base_q_by_lane_metrics_metrics(long jarg1, base_q_by_lane_metrics jarg1_);
  public final static native String base_q_by_lane_metrics_prefix();
  public final static native String base_q_by_lane_metrics_suffix();
  public final static native long base_q_by_lane_metrics_get_metric_ref__SWIG_0(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_q_by_lane_metrics_get_metric_ref__SWIG_1(long jarg1, base_q_by_lane_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_q_by_lane_metrics_get_metric_ref__SWIG_2(long jarg1, base_q_by_lane_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_q_by_lane_metrics(long jarg1);
  public final static native long new_vector_q_by_lane_metrics__SWIG_0();
  public final static native long new_vector_q_by_lane_metrics__SWIG_1(long jarg1);
  public final static native long vector_q_by_lane_metrics_size(long jarg1, vector_q_by_lane_metrics jarg1_);
  public final static native long vector_q_by_lane_metrics_capacity(long jarg1, vector_q_by_lane_metrics jarg1_);
  public final static native void vector_q_by_lane_metrics_reserve(long jarg1, vector_q_by_lane_metrics jarg1_, long jarg2);
  public final static native boolean vector_q_by_lane_metrics_isEmpty(long jarg1, vector_q_by_lane_metrics jarg1_);
  public final static native void vector_q_by_lane_metrics_clear(long jarg1, vector_q_by_lane_metrics jarg1_);
  public final static native void vector_q_by_lane_metrics_add(long jarg1, vector_q_by_lane_metrics jarg1_, long jarg2, q_by_lane_metric jarg2_);
  public final static native long vector_q_by_lane_metrics_get(long jarg1, vector_q_by_lane_metrics jarg1_, int jarg2);
  public final static native void vector_q_by_lane_metrics_set(long jarg1, vector_q_by_lane_metrics jarg1_, int jarg2, long jarg3, q_by_lane_metric jarg3_);
  public final static native void delete_vector_q_by_lane_metrics(long jarg1);
  public final static native long new_point2d_vector__SWIG_0();
  public final static native long new_point2d_vector__SWIG_1(long jarg1);
  public final static native long point2d_vector_size(long jarg1, point2d_vector jarg1_);
  public final static native long point2d_vector_capacity(long jarg1, point2d_vector jarg1_);
  public final static native void point2d_vector_reserve(long jarg1, point2d_vector jarg1_, long jarg2);
  public final static native boolean point2d_vector_isEmpty(long jarg1, point2d_vector jarg1_);
  public final static native void point2d_vector_clear(long jarg1, point2d_vector jarg1_);
  public final static native void point2d_vector_add(long jarg1, point2d_vector jarg1_, long jarg2, point2d jarg2_);
  public final static native long point2d_vector_get(long jarg1, point2d_vector jarg1_, int jarg2);
  public final static native void point2d_vector_set(long jarg1, point2d_vector jarg1_, int jarg2, long jarg3, point2d jarg3_);
  public final static native void delete_point2d_vector(long jarg1);
  public final static native long new_event_metric_map__SWIG_0();
  public final static native long new_event_metric_map__SWIG_1(long jarg1, event_metric_map jarg1_);
  public final static native long event_metric_map_size(long jarg1, event_metric_map jarg1_);
  public final static native boolean event_metric_map_empty(long jarg1, event_metric_map jarg1_);
  public final static native void event_metric_map_clear(long jarg1, event_metric_map jarg1_);
  public final static native long event_metric_map_get(long jarg1, event_metric_map jarg1_, java.math.BigInteger jarg2);
  public final static native void event_metric_map_set(long jarg1, event_metric_map jarg1_, java.math.BigInteger jarg2, long jarg3, event_metric jarg3_);
  public final static native void event_metric_map_del(long jarg1, event_metric_map jarg1_, java.math.BigInteger jarg2);
  public final static native boolean event_metric_map_has_key(long jarg1, event_metric_map jarg1_, java.math.BigInteger jarg2);
  public final static native void delete_event_metric_map(long jarg1);
  public final static native int alignment_metric_TYPE_get();
  public final static native int alignment_metric_LATEST_VERSION_get();
  public final static native long new_alignment_metric__SWIG_0();
  public final static native long new_alignment_metric__SWIG_1(long jarg1, base_cycle_metric_header jarg1_);
  public final static native long alignment_metric_confusion_matrix(long jarg1, alignment_metric jarg1_);
  public final static native long alignment_metric_row_count(long jarg1, alignment_metric jarg1_);
  public final static native long alignment_metric_column_count(long jarg1, alignment_metric jarg1_);
  public final static native long alignment_metric_total_count(long jarg1, alignment_metric jarg1_);
  public final static native String alignment_metric_prefix();
  public final static native void delete_alignment_metric(long jarg1);
  public final static native int basecalling_metric_header_CENTROIDS_get();
  public final static native int basecalling_metric_header_COVARIANCES_get();
  public final static native int basecalling_metric_header_WEIGHTS_get();
  public final static native int basecalling_metric_header_DETERMINANT_get();
  public final static native long new_basecalling_metric_header(short jarg1);
  public final static native short basecalling_metric_header_info_level(long jarg1, basecalling_metric_header jarg1_);
  public final static native boolean basecalling_metric_header_has_covariances(long jarg1, basecalling_metric_header jarg1_);
  public final static native boolean basecalling_metric_header_has_weights(long jarg1, basecalling_metric_header jarg1_);
  public final static native boolean basecalling_metric_header_has_determinant(long jarg1, basecalling_metric_header jarg1_);
  public final static native void basecalling_metric_header_clear(long jarg1, basecalling_metric_header jarg1_);
  public final static native long basecalling_metric_header_default_header();
  public final static native void delete_basecalling_metric_header(long jarg1);
  public final static native int basecalling_metric_TYPE_get();
  public final static native int basecalling_metric_DIM_get();
  public final static native int basecalling_metric_LATEST_VERSION_get();
  public final static native long new_basecalling_metric__SWIG_0();
  public final static native long new_basecalling_metric__SWIG_1(long jarg1, basecalling_metric_header jarg1_);
  public final static native long new_basecalling_metric__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4, float_vector jarg4_, long jarg5, float_vector jarg5_, long jarg6, float_vector jarg6_, float jarg7);
  public final static native long new_basecalling_metric__SWIG_3(long jarg1, long jarg2, long jarg3, long jarg4, float_vector jarg4_, long jarg5, float_vector jarg5_, long jarg6, float_vector jarg6_);
  public final static native long new_basecalling_metric__SWIG_4(long jarg1, long jarg2, long jarg3, long jarg4, float_vector jarg4_, long jarg5, float_vector jarg5_);
  public final static native long new_basecalling_metric__SWIG_5(long jarg1, long jarg2, long jarg3, long jarg4, float_vector jarg4_);
  public final static native void basecalling_metric_set__SWIG_0(long jarg1, basecalling_metric jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, point2d_vector jarg5_, long jarg6, float_vector jarg6_, long jarg7, float_vector jarg7_, float jarg8);
  public final static native void basecalling_metric_set__SWIG_1(long jarg1, basecalling_metric jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, point2d_vector jarg5_, long jarg6, float_vector jarg6_, long jarg7, float_vector jarg7_);
  public final static native void basecalling_metric_set__SWIG_2(long jarg1, basecalling_metric jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, point2d_vector jarg5_, long jarg6, float_vector jarg6_);
  public final static native void basecalling_metric_set__SWIG_3(long jarg1, basecalling_metric jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, point2d_vector jarg5_);
  public final static native long basecalling_metric_centroids(long jarg1, basecalling_metric jarg1_);
  public final static native long basecalling_metric_covariances(long jarg1, basecalling_metric jarg1_);
  public final static native long basecalling_metric_weights(long jarg1, basecalling_metric jarg1_);
  public final static native float basecalling_metric_mean_determinant(long jarg1, basecalling_metric jarg1_);
  public final static native float basecalling_metric_radius(long jarg1, basecalling_metric jarg1_, long jarg2);
  public final static native float basecalling_metric_area(long jarg1, basecalling_metric jarg1_);
  public final static native String basecalling_metric_prefix();
  public final static native void delete_basecalling_metric(long jarg1);
  public final static native long new_color_matrix_metric_header(int jarg1);
  public final static native int color_matrix_metric_header_number_of_entries(long jarg1, color_matrix_metric_header jarg1_);
  public final static native long color_matrix_metric_header_default_header();
  public final static native void color_matrix_metric_header_clear(long jarg1, color_matrix_metric_header jarg1_);
  public final static native void delete_color_matrix_metric_header(long jarg1);
  public final static native int color_matrix_metric_TYPE_get();
  public final static native int color_matrix_metric_LATEST_VERSION_get();
  public final static native long new_color_matrix_metric__SWIG_0();
  public final static native long new_color_matrix_metric__SWIG_1(long jarg1, color_matrix_metric_header jarg1_);
  public final static native long color_matrix_metric_color_matrix(long jarg1, color_matrix_metric jarg1_);
  public final static native String color_matrix_metric_prefix();
  public final static native void delete_color_matrix_metric(long jarg1);
  public final static native long new_distortion_metric_header(long jarg1, size_vector jarg1_, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native long distortion_metric_header_channel_count(long jarg1, distortion_metric_header jarg1_);
  public final static native long distortion_metric_header_curve_count(long jarg1, distortion_metric_header jarg1_);
  public final static native long distortion_metric_header_coefficient_count(long jarg1, distortion_metric_header jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native int distortion_metric_header_type(long jarg1, distortion_metric_header jarg1_);
  public final static native long distortion_metric_header_image_width(long jarg1, distortion_metric_header jarg1_);
  public final static native long distortion_metric_header_image_height(long jarg1, distortion_metric_header jarg1_);
  public final static native long distortion_metric_header_total_number_of_coefficients(long jarg1, distortion_metric_header jarg1_);
  public final static native long distortion_metric_header_index(long jarg1, distortion_metric_header jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long distortion_metric_header_default_header();
  public final static native void distortion_metric_header_clear(long jarg1, distortion_metric_header jarg1_);
  public final static native void delete_distortion_metric_header(long jarg1);
  public final static native int distortion_metric_TYPE_get();
  public final static native int distortion_metric_LATEST_VERSION_get();
  public final static native long new_distortion_metric__SWIG_0();
  public final static native long new_distortion_metric__SWIG_1(long jarg1, distortion_metric_header jarg1_);
  public final static native long distortion_metric_coefficients(long jarg1, distortion_metric jarg1_);
  public final static native float distortion_metric_coefficient_at(long jarg1, distortion_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void distortion_metric_populate_coefficients_for__SWIG_0(long jarg1, distortion_metric jarg1_, long jarg2, distortion_metric_header jarg2_, long jarg3, long jarg4, long jarg5, float_vector jarg5_);
  public final static native void distortion_metric_populate_coefficients_for__SWIG_1(long jarg1, distortion_metric jarg1_, long jarg2, distortion_metric_header jarg2_, long jarg3, long jarg4, float[] jarg5, long jarg6);
  public final static native float distortion_metric_absolute_distortion(long jarg1, distortion_metric jarg1_, long jarg2, distortion_metric_header jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native String distortion_metric_prefix();
  public final static native void delete_distortion_metric(long jarg1);
  public final static native int dynamic_phasing_metric_TYPE_get();
  public final static native int dynamic_phasing_metric_LATEST_VERSION_get();
  public final static native long new_dynamic_phasing_metric__SWIG_0();
  public final static native long new_dynamic_phasing_metric__SWIG_1(long jarg1, base_read_metric_header jarg1_);
  public final static native long new_dynamic_phasing_metric__SWIG_2(long jarg1, long jarg2, long jarg3, float jarg4, float jarg5, float jarg6, float jarg7);
  public final static native float dynamic_phasing_metric_phasing_slope(long jarg1, dynamic_phasing_metric jarg1_);
  public final static native float dynamic_phasing_metric_prephasing_slope(long jarg1, dynamic_phasing_metric jarg1_);
  public final static native float dynamic_phasing_metric_phasing_offset(long jarg1, dynamic_phasing_metric jarg1_);
  public final static native float dynamic_phasing_metric_prephasing_offset(long jarg1, dynamic_phasing_metric jarg1_);
  public final static native String dynamic_phasing_metric_prefix();
  public final static native void delete_dynamic_phasing_metric(long jarg1);
  public final static native int event_metric_TYPE_get();
  public final static native int event_metric_LATEST_VERSION_get();
  public final static native long new_event_metric__SWIG_0();
  public final static native long new_event_metric__SWIG_1(long jarg1, base_event_metric_header jarg1_);
  public final static native long new_event_metric__SWIG_2(long jarg1, long jarg2, long jarg3, java.math.BigInteger jarg4, int jarg5, double jarg6, long jarg7, java.math.BigInteger jarg8, java.math.BigInteger jarg9);
  public final static native long new_event_metric__SWIG_3(long jarg1, long jarg2, long jarg3, java.math.BigInteger jarg4, int jarg5, double jarg6, long jarg7, java.math.BigInteger jarg8);
  public final static native long new_event_metric__SWIG_4(long jarg1, long jarg2, long jarg3, java.math.BigInteger jarg4, int jarg5, double jarg6, long jarg7);
  public final static native long new_event_metric__SWIG_5(long jarg1, long jarg2, long jarg3, java.math.BigInteger jarg4, int jarg5, double jarg6);
  public final static native void event_metric_set__SWIG_0(long jarg1, event_metric jarg1_, long jarg2, long jarg3, long jarg4, java.math.BigInteger jarg5, int jarg6, long jarg7);
  public final static native void event_metric_set__SWIG_1(long jarg1, event_metric jarg1_, java.math.BigInteger jarg2, java.math.BigInteger jarg3, long jarg4, long jarg5, long jarg6, int jarg7, long jarg8, double jarg9, java.math.BigInteger jarg10);
  public final static native void event_metric_set_base(long jarg1, event_metric jarg1_, long jarg2, long jarg3);
  public final static native java.math.BigInteger event_metric_create_id__SWIG_0(java.math.BigInteger jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3, java.math.BigInteger jarg4);
  public final static native java.math.BigInteger event_metric_create_id__SWIG_1(java.math.BigInteger jarg1, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native java.math.BigInteger event_metric_event_from_id(java.math.BigInteger jarg1);
  public final static native java.math.BigInteger event_metric_date_time(long jarg1, event_metric jarg1_);
  public final static native java.math.BigInteger event_metric_point_ticks(long jarg1, event_metric jarg1_);
  public final static native long event_metric_date_time_csharp(long jarg1, event_metric jarg1_);
  public final static native long event_metric_event_value(long jarg1, event_metric jarg1_);
  public final static native double event_metric_elapsed_ms(long jarg1, event_metric jarg1_);
  public final static native java.math.BigInteger event_metric_elapsed_ticks(long jarg1, event_metric jarg1_);
  public final static native String event_metric_prefix();
  public final static native void delete_event_metric(long jarg1);
  public final static native int extended_tile_metric_TYPE_get();
  public final static native int extended_tile_metric_LATEST_VERSION_get();
  public final static native long new_extended_tile_metric__SWIG_0();
  public final static native long new_extended_tile_metric__SWIG_1(long jarg1, base_metric_header jarg1_);
  public final static native long new_extended_tile_metric__SWIG_2(long jarg1, long jarg2, float jarg3, long jarg4, point2d jarg4_);
  public final static native long new_extended_tile_metric__SWIG_3(long jarg1, long jarg2, float jarg3);
  public final static native void extended_tile_metric_set__SWIG_0(long jarg1, extended_tile_metric jarg1_, long jarg2, long jarg3, float jarg4, long jarg5, point2d jarg5_);
  public final static native void extended_tile_metric_set__SWIG_1(long jarg1, extended_tile_metric jarg1_, long jarg2, long jarg3, float jarg4);
  public final static native float extended_tile_metric_cluster_count_occupied(long jarg1, extended_tile_metric jarg1_);
  public final static native float extended_tile_metric_cluster_count_occupied_k(long jarg1, extended_tile_metric jarg1_);
  public final static native float extended_tile_metric_percent_occupied(long jarg1, extended_tile_metric jarg1_, float jarg2);
  public final static native float extended_tile_metric_percent_occupied_lookup(long jarg1, extended_tile_metric jarg1_, long jarg2, base_tile_metrics jarg2_);
  public final static native long extended_tile_metric_upper_left(long jarg1, extended_tile_metric jarg1_);
  public final static native String extended_tile_metric_prefix();
  public final static native void delete_extended_tile_metric(long jarg1);
  public final static native long new_fwhm_grid_metric_header(int jarg1, int jarg2, int jarg3);
  public final static native int fwhm_grid_metric_header_num_bins_x(long jarg1, fwhm_grid_metric_header jarg1_);
  public final static native int fwhm_grid_metric_header_num_bins_y(long jarg1, fwhm_grid_metric_header jarg1_);
  public final static native int fwhm_grid_metric_header_channel_count(long jarg1, fwhm_grid_metric_header jarg1_);
  public final static native long fwhm_grid_metric_header_default_header();
  public final static native void fwhm_grid_metric_header_clear(long jarg1, fwhm_grid_metric_header jarg1_);
  public final static native void delete_fwhm_grid_metric_header(long jarg1);
  public final static native int fwhm_grid_metric_TYPE_get();
  public final static native int fwhm_grid_metric_LATEST_VERSION_get();
  public final static native long new_fwhm_grid_metric__SWIG_0();
  public final static native long new_fwhm_grid_metric__SWIG_1(long jarg1, fwhm_grid_metric_header jarg1_);
  public final static native long new_fwhm_grid_metric__SWIG_3(long jarg1, long jarg2, long jarg3);
  public final static native float fwhm_grid_metric_focus_score(long jarg1, fwhm_grid_metric jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long fwhm_grid_metric_channel_count(long jarg1, fwhm_grid_metric jarg1_);
  public final static native long fwhm_grid_metric_num_bins_row(long jarg1, fwhm_grid_metric jarg1_);
  public final static native long fwhm_grid_metric_num_bins_col(long jarg1, fwhm_grid_metric jarg1_);
  public final static native String fwhm_grid_metric_prefix();
  public final static native void delete_fwhm_grid_metric(long jarg1);
  public final static native long new_pf_grid_metric_header(int jarg1, int jarg2, float jarg3);
  public final static native int pf_grid_metric_header_num_bins_x(long jarg1, pf_grid_metric_header jarg1_);
  public final static native int pf_grid_metric_header_num_bins_y(long jarg1, pf_grid_metric_header jarg1_);
  public final static native float pf_grid_metric_header_subtile_area_in_mm2(long jarg1, pf_grid_metric_header jarg1_);
  public final static native long pf_grid_metric_header_default_header();
  public final static native void pf_grid_metric_header_clear(long jarg1, pf_grid_metric_header jarg1_);
  public final static native void delete_pf_grid_metric_header(long jarg1);
  public final static native int pf_grid_metric_TYPE_get();
  public final static native int pf_grid_metric_LATEST_VERSION_get();
  public final static native long new_pf_grid_metric__SWIG_0();
  public final static native long new_pf_grid_metric__SWIG_1(long jarg1, pf_grid_metric_header jarg1_);
  public final static native long new_pf_grid_metric__SWIG_3(long jarg1, long jarg2);
  public final static native long pf_grid_metric_raw_cluster_count(long jarg1, pf_grid_metric jarg1_, long jarg2, long jarg3);
  public final static native long pf_grid_metric_pf_cluster_count(long jarg1, pf_grid_metric jarg1_, long jarg2, long jarg3);
  public final static native float pf_grid_metric_raw_cluster_density_k(long jarg1, pf_grid_metric jarg1_, long jarg2, long jarg3, float jarg4);
  public final static native float pf_grid_metric_pf_cluster_density_k(long jarg1, pf_grid_metric jarg1_, long jarg2, long jarg3, float jarg4);
  public final static native float pf_grid_metric_percent_pf(long jarg1, pf_grid_metric jarg1_, long jarg2, long jarg3);
  public final static native String pf_grid_metric_prefix();
  public final static native void delete_pf_grid_metric(long jarg1);
  public final static native int phasing_metric_TYPE_get();
  public final static native int phasing_metric_LATEST_VERSION_get();
  public final static native long new_phasing_metric__SWIG_0();
  public final static native long new_phasing_metric__SWIG_1(long jarg1, base_cycle_metric_header jarg1_);
  public final static native long new_phasing_metric__SWIG_2(long jarg1, long jarg2, long jarg3, float jarg4, float jarg5);
  public final static native float phasing_metric_phasing_weight(long jarg1, phasing_metric jarg1_);
  public final static native float phasing_metric_prephasing_weight(long jarg1, phasing_metric jarg1_);
  public final static native String phasing_metric_prefix();
  public final static native void delete_phasing_metric(long jarg1);
  public final static native long new_q_grid_metric_header(int jarg1, int jarg2);
  public final static native int q_grid_metric_header_num_bins_x(long jarg1, q_grid_metric_header jarg1_);
  public final static native int q_grid_metric_header_num_bins_y(long jarg1, q_grid_metric_header jarg1_);
  public final static native long q_grid_metric_header_default_header();
  public final static native void q_grid_metric_header_clear(long jarg1, q_grid_metric_header jarg1_);
  public final static native void delete_q_grid_metric_header(long jarg1);
  public final static native int q_grid_metric_TYPE_get();
  public final static native int q_grid_metric_LATEST_VERSION_get();
  public final static native long new_q_grid_metric__SWIG_0();
  public final static native long new_q_grid_metric__SWIG_1(long jarg1, q_grid_metric_header jarg1_);
  public final static native long new_q_grid_metric__SWIG_3(long jarg1, long jarg2);
  public final static native long q_grid_metric_raw_cluster_count(long jarg1, q_grid_metric jarg1_, long jarg2, long jarg3);
  public final static native long q_grid_metric_q30_cluster_count(long jarg1, q_grid_metric jarg1_, long jarg2, long jarg3);
  public final static native float q_grid_metric_percent_q30(long jarg1, q_grid_metric jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native String q_grid_metric_prefix();
  public final static native void delete_q_grid_metric(long jarg1);
  public final static native long new_registration_metric_header__SWIG_1(int jarg1, long jarg2, point2d_vector jarg2_, int jarg3);
  public final static native long new_registration_metric_header__SWIG_2(int jarg1, int jarg2, int jarg3);
  public final static native int registration_metric_header_channel_count(long jarg1, registration_metric_header jarg1_);
  public final static native int registration_metric_header_region_count(long jarg1, registration_metric_header jarg1_);
  public final static native long registration_metric_header_fiducial_locations(long jarg1, registration_metric_header jarg1_);
  public final static native int registration_metric_header_fiducial_layout(long jarg1, registration_metric_header jarg1_);
  public final static native long registration_metric_header_default_header();
  public final static native void registration_metric_header_clear(long jarg1, registration_metric_header jarg1_);
  public final static native void delete_registration_metric_header(long jarg1);
  public final static native int registration_metric_TYPE_get();
  public final static native int registration_metric_LATEST_VERSION_get();
  public final static native int registration_metric_AFFINE_LENGTH_get();
  public final static native int registration_metric_SUBREGION_PARAM_LENGTH_get();
  public final static native long new_registration_metric__SWIG_0(long jarg1, long jarg2);
  public final static native long new_registration_metric__SWIG_1(long jarg1);
  public final static native long new_registration_metric__SWIG_2();
  public final static native long new_registration_metric__SWIG_3(long jarg1, registration_metric_header jarg1_);
  public final static native float registration_metric_affine_transform__SWIG_0(long jarg1, registration_metric jarg1_, long jarg2, long jarg3);
  public final static native long registration_metric_affine_transform__SWIG_1(long jarg1, registration_metric jarg1_);
  public final static native long registration_metric_predicted_error(long jarg1, registration_metric jarg1_);
  public final static native float registration_metric_sub_tile_offsets__SWIG_0(long jarg1, registration_metric jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long registration_metric_sub_tile_offsets__SWIG_1(long jarg1, registration_metric jarg1_);
  public final static native long registration_metric_channel_count(long jarg1, registration_metric jarg1_);
  public final static native long registration_metric_sub_region_count(long jarg1, registration_metric jarg1_);
  public final static native void registration_metric_set_predicted_error(long jarg1, registration_metric jarg1_, long jarg2, float jarg3);
  public final static native long registration_metric_max_residual_radial_errors(long jarg1, registration_metric jarg1_);
  public final static native float registration_metric_max_residual_radial_error__SWIG_0(long jarg1, registration_metric jarg1_);
  public final static native float registration_metric_max_residual_radial_error__SWIG_1(long jarg1, registration_metric jarg1_, long jarg2);
  public final static native float registration_metric_max_residual_x_error(long jarg1, registration_metric jarg1_, long jarg2);
  public final static native float registration_metric_max_residual_y_error(long jarg1, registration_metric jarg1_, long jarg2);
  public final static native float registration_metric_shear(long jarg1, registration_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native float registration_metric_theta_z(long jarg1, registration_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native float registration_metric_theta(long jarg1, registration_metric jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void registration_metric_set_rotation(long jarg1, registration_metric jarg1_, long jarg2, float jarg3, float jarg4, float jarg5) throws index_out_of_bounds_exception;
  public final static native boolean registration_metric_is_any_channel_registration_failure(long jarg1, registration_metric jarg1_);
  public final static native String registration_metric_prefix();
  public final static native void delete_registration_metric(long jarg1);
  public final static native int run_diagnostics_metric_TYPE_get();
  public final static native int run_diagnostics_metric_LATEST_VERSION_get();
  public final static native long new_run_diagnostics_metric__SWIG_0();
  public final static native long new_run_diagnostics_metric__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native long new_run_diagnostics_metric__SWIG_2(long jarg1, base_cycle_metric_header jarg1_);
  public final static native void run_diagnostics_metric_blank_image(long jarg1, run_diagnostics_metric jarg1_, boolean jarg2);
  public final static native void run_diagnostics_metric_dead_tile(long jarg1, run_diagnostics_metric jarg1_, boolean jarg2);
  public final static native void run_diagnostics_metric_failed_tile_cycle(long jarg1, run_diagnostics_metric jarg1_, boolean jarg2);
  public final static native void run_diagnostics_metric_q_outlier(long jarg1, run_diagnostics_metric jarg1_, boolean jarg2);
  public final static native long run_diagnostics_metric_get_issues_for_entry(long jarg1, run_diagnostics_metric jarg1_);
  public final static native long run_diagnostics_metric_get_issue(long jarg1, run_diagnostics_metric jarg1_, long jarg2);
  public final static native String run_diagnostics_metric_prefix();
  public final static native void delete_run_diagnostics_metric(long jarg1);
  public final static native long new_static_run_metric_header(long jarg1, long jarg2);
  public final static native long static_run_metric_header_curve_length(long jarg1, static_run_metric_header jarg1_);
  public final static native long static_run_metric_header_curve_check(long jarg1, static_run_metric_header jarg1_);
  public final static native long static_run_metric_header_default_header();
  public final static native void static_run_metric_header_clear(long jarg1, static_run_metric_header jarg1_);
  public final static native void delete_static_run_metric_header(long jarg1);
  public final static native int static_run_metric_TYPE_get();
  public final static native int static_run_metric_LATEST_VERSION_get();
  public final static native long new_static_run_metric__SWIG_0();
  public final static native long new_static_run_metric__SWIG_1(long jarg1, static_run_metric_header jarg1_);
  public final static native long new_static_run_metric__SWIG_2(short jarg1, short jarg2, int jarg3, long jarg4, float_vector jarg4_, long jarg5, float_vector jarg5_);
  public final static native long new_static_run_metric__SWIG_3(long jarg1, long jarg2);
  public final static native float static_run_metric_x_values(long jarg1, static_run_metric jarg1_, long jarg2);
  public final static native float static_run_metric_y_values(long jarg1, static_run_metric jarg1_, long jarg2);
  public final static native String static_run_metric_prefix();
  public final static native void delete_static_run_metric(long jarg1);
  public final static native int base_alignment_metrics_TYPE_get();
  public final static native int base_alignment_metrics_LATEST_VERSION_get();
  public final static native long new_base_alignment_metrics__SWIG_0(short jarg1);
  public final static native long new_base_alignment_metrics__SWIG_1(long jarg1, base_cycle_metric_header jarg1_, short jarg2);
  public final static native long new_base_alignment_metrics__SWIG_2(long jarg1, base_cycle_metric_header jarg1_);
  public final static native long new_base_alignment_metrics__SWIG_3();
  public final static native long new_base_alignment_metrics__SWIG_4(long jarg1, vector_alignment_metrics jarg1_, short jarg2, long jarg3, base_cycle_metric_header jarg3_);
  public final static native boolean base_alignment_metrics_data_source_exists__SWIG_0(long jarg1, base_alignment_metrics jarg1_);
  public final static native void base_alignment_metrics_data_source_exists__SWIG_1(long jarg1, base_alignment_metrics jarg1_, boolean jarg2);
  public final static native void base_alignment_metrics_rebuild_index__SWIG_0(long jarg1, base_alignment_metrics jarg1_, boolean jarg2);
  public final static native void base_alignment_metrics_rebuild_index__SWIG_1(long jarg1, base_alignment_metrics jarg1_);
  public final static native void base_alignment_metrics_resize(long jarg1, base_alignment_metrics jarg1_, long jarg2);
  public final static native void base_alignment_metrics_reserve(long jarg1, base_alignment_metrics jarg1_, long jarg2);
  public final static native void base_alignment_metrics_trim(long jarg1, base_alignment_metrics jarg1_, long jarg2);
  public final static native long base_alignment_metrics_find__SWIG_0(long jarg1, base_alignment_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_alignment_metrics_find__SWIG_1(long jarg1, base_alignment_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_alignment_metrics_find__SWIG_2(long jarg1, base_alignment_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_alignment_metrics_has_metric__SWIG_0(long jarg1, base_alignment_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_alignment_metrics_has_metric__SWIG_1(long jarg1, base_alignment_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_alignment_metrics_has_metric__SWIG_2(long jarg1, base_alignment_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_alignment_metrics_insert__SWIG_0(long jarg1, base_alignment_metrics jarg1_, long jarg2, alignment_metric jarg2_);
  public final static native void base_alignment_metrics_insert__SWIG_1(long jarg1, base_alignment_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, alignment_metric jarg3_);
  public final static native long base_alignment_metrics_get_metric__SWIG_0(long jarg1, base_alignment_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_alignment_metrics_get_metric__SWIG_1(long jarg1, base_alignment_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_alignment_metrics_get_metric__SWIG_2(long jarg1, base_alignment_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_alignment_metrics_at(long jarg1, base_alignment_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_alignment_metrics_set_version(long jarg1, base_alignment_metrics jarg1_, short jarg2);
  public final static native long base_alignment_metrics_keys(long jarg1, base_alignment_metrics jarg1_);
  public final static native long base_alignment_metrics_lanes(long jarg1, base_alignment_metrics jarg1_);
  public final static native long base_alignment_metrics_lane_count(long jarg1, base_alignment_metrics jarg1_);
  public final static native long base_alignment_metrics_max_lane(long jarg1, base_alignment_metrics jarg1_);
  public final static native long base_alignment_metrics_tile_numbers_for_lane(long jarg1, base_alignment_metrics jarg1_, long jarg2);
  public final static native long base_alignment_metrics_tile_numbers(long jarg1, base_alignment_metrics jarg1_);
  public final static native long base_alignment_metrics_metrics_for_lane__SWIG_0(long jarg1, base_alignment_metrics jarg1_, long jarg2);
  public final static native void base_alignment_metrics_metrics_for_lane__SWIG_1(long jarg1, base_alignment_metrics jarg1_, long jarg2, vector_alignment_metrics jarg2_, long jarg3);
  public final static native long base_alignment_metrics_cycles(long jarg1, base_alignment_metrics jarg1_);
  public final static native long base_alignment_metrics_metrics_for_cycle(long jarg1, base_alignment_metrics jarg1_, long jarg2);
  public final static native long base_alignment_metrics_size(long jarg1, base_alignment_metrics jarg1_);
  public final static native boolean base_alignment_metrics_empty(long jarg1, base_alignment_metrics jarg1_);
  public final static native short base_alignment_metrics_version(long jarg1, base_alignment_metrics jarg1_);
  public final static native void base_alignment_metrics_clear(long jarg1, base_alignment_metrics jarg1_);
  public final static native long base_alignment_metrics_metrics(long jarg1, base_alignment_metrics jarg1_);
  public final static native String base_alignment_metrics_prefix();
  public final static native String base_alignment_metrics_suffix();
  public final static native long base_alignment_metrics_get_metric_ref__SWIG_0(long jarg1, base_alignment_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_alignment_metrics_get_metric_ref__SWIG_1(long jarg1, base_alignment_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_alignment_metrics_get_metric_ref__SWIG_2(long jarg1, base_alignment_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_alignment_metrics(long jarg1);
  public final static native long new_vector_alignment_metrics__SWIG_0();
  public final static native long new_vector_alignment_metrics__SWIG_1(long jarg1);
  public final static native long vector_alignment_metrics_size(long jarg1, vector_alignment_metrics jarg1_);
  public final static native long vector_alignment_metrics_capacity(long jarg1, vector_alignment_metrics jarg1_);
  public final static native void vector_alignment_metrics_reserve(long jarg1, vector_alignment_metrics jarg1_, long jarg2);
  public final static native boolean vector_alignment_metrics_isEmpty(long jarg1, vector_alignment_metrics jarg1_);
  public final static native void vector_alignment_metrics_clear(long jarg1, vector_alignment_metrics jarg1_);
  public final static native void vector_alignment_metrics_add(long jarg1, vector_alignment_metrics jarg1_, long jarg2, alignment_metric jarg2_);
  public final static native long vector_alignment_metrics_get(long jarg1, vector_alignment_metrics jarg1_, int jarg2);
  public final static native void vector_alignment_metrics_set(long jarg1, vector_alignment_metrics jarg1_, int jarg2, long jarg3, alignment_metric jarg3_);
  public final static native void delete_vector_alignment_metrics(long jarg1);
  public final static native int base_basecalling_metrics_TYPE_get();
  public final static native int base_basecalling_metrics_LATEST_VERSION_get();
  public final static native long new_base_basecalling_metrics__SWIG_0(short jarg1);
  public final static native long new_base_basecalling_metrics__SWIG_1(long jarg1, basecalling_metric_header jarg1_, short jarg2);
  public final static native long new_base_basecalling_metrics__SWIG_2(long jarg1, basecalling_metric_header jarg1_);
  public final static native long new_base_basecalling_metrics__SWIG_3();
  public final static native long new_base_basecalling_metrics__SWIG_4(long jarg1, vector_basecalling_metrics jarg1_, short jarg2, long jarg3, basecalling_metric_header jarg3_);
  public final static native boolean base_basecalling_metrics_data_source_exists__SWIG_0(long jarg1, base_basecalling_metrics jarg1_);
  public final static native void base_basecalling_metrics_data_source_exists__SWIG_1(long jarg1, base_basecalling_metrics jarg1_, boolean jarg2);
  public final static native void base_basecalling_metrics_rebuild_index__SWIG_0(long jarg1, base_basecalling_metrics jarg1_, boolean jarg2);
  public final static native void base_basecalling_metrics_rebuild_index__SWIG_1(long jarg1, base_basecalling_metrics jarg1_);
  public final static native void base_basecalling_metrics_resize(long jarg1, base_basecalling_metrics jarg1_, long jarg2);
  public final static native void base_basecalling_metrics_reserve(long jarg1, base_basecalling_metrics jarg1_, long jarg2);
  public final static native void base_basecalling_metrics_trim(long jarg1, base_basecalling_metrics jarg1_, long jarg2);
  public final static native long base_basecalling_metrics_find__SWIG_0(long jarg1, base_basecalling_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_basecalling_metrics_find__SWIG_1(long jarg1, base_basecalling_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_basecalling_metrics_find__SWIG_2(long jarg1, base_basecalling_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_basecalling_metrics_has_metric__SWIG_0(long jarg1, base_basecalling_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_basecalling_metrics_has_metric__SWIG_1(long jarg1, base_basecalling_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_basecalling_metrics_has_metric__SWIG_2(long jarg1, base_basecalling_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_basecalling_metrics_insert__SWIG_0(long jarg1, base_basecalling_metrics jarg1_, long jarg2, basecalling_metric jarg2_);
  public final static native void base_basecalling_metrics_insert__SWIG_1(long jarg1, base_basecalling_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, basecalling_metric jarg3_);
  public final static native long base_basecalling_metrics_get_metric__SWIG_0(long jarg1, base_basecalling_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_basecalling_metrics_get_metric__SWIG_1(long jarg1, base_basecalling_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_basecalling_metrics_get_metric__SWIG_2(long jarg1, base_basecalling_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_basecalling_metrics_at(long jarg1, base_basecalling_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_basecalling_metrics_set_version(long jarg1, base_basecalling_metrics jarg1_, short jarg2);
  public final static native long base_basecalling_metrics_keys(long jarg1, base_basecalling_metrics jarg1_);
  public final static native long base_basecalling_metrics_lanes(long jarg1, base_basecalling_metrics jarg1_);
  public final static native long base_basecalling_metrics_lane_count(long jarg1, base_basecalling_metrics jarg1_);
  public final static native long base_basecalling_metrics_max_lane(long jarg1, base_basecalling_metrics jarg1_);
  public final static native long base_basecalling_metrics_tile_numbers_for_lane(long jarg1, base_basecalling_metrics jarg1_, long jarg2);
  public final static native long base_basecalling_metrics_tile_numbers(long jarg1, base_basecalling_metrics jarg1_);
  public final static native long base_basecalling_metrics_metrics_for_lane__SWIG_0(long jarg1, base_basecalling_metrics jarg1_, long jarg2);
  public final static native void base_basecalling_metrics_metrics_for_lane__SWIG_1(long jarg1, base_basecalling_metrics jarg1_, long jarg2, vector_basecalling_metrics jarg2_, long jarg3);
  public final static native long base_basecalling_metrics_cycles(long jarg1, base_basecalling_metrics jarg1_);
  public final static native long base_basecalling_metrics_metrics_for_cycle(long jarg1, base_basecalling_metrics jarg1_, long jarg2);
  public final static native long base_basecalling_metrics_size(long jarg1, base_basecalling_metrics jarg1_);
  public final static native boolean base_basecalling_metrics_empty(long jarg1, base_basecalling_metrics jarg1_);
  public final static native short base_basecalling_metrics_version(long jarg1, base_basecalling_metrics jarg1_);
  public final static native void base_basecalling_metrics_clear(long jarg1, base_basecalling_metrics jarg1_);
  public final static native long base_basecalling_metrics_metrics(long jarg1, base_basecalling_metrics jarg1_);
  public final static native String base_basecalling_metrics_prefix();
  public final static native String base_basecalling_metrics_suffix();
  public final static native long base_basecalling_metrics_get_metric_ref__SWIG_0(long jarg1, base_basecalling_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_basecalling_metrics_get_metric_ref__SWIG_1(long jarg1, base_basecalling_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_basecalling_metrics_get_metric_ref__SWIG_2(long jarg1, base_basecalling_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_basecalling_metrics(long jarg1);
  public final static native long new_vector_basecalling_metrics__SWIG_0();
  public final static native long new_vector_basecalling_metrics__SWIG_1(long jarg1);
  public final static native long vector_basecalling_metrics_size(long jarg1, vector_basecalling_metrics jarg1_);
  public final static native long vector_basecalling_metrics_capacity(long jarg1, vector_basecalling_metrics jarg1_);
  public final static native void vector_basecalling_metrics_reserve(long jarg1, vector_basecalling_metrics jarg1_, long jarg2);
  public final static native boolean vector_basecalling_metrics_isEmpty(long jarg1, vector_basecalling_metrics jarg1_);
  public final static native void vector_basecalling_metrics_clear(long jarg1, vector_basecalling_metrics jarg1_);
  public final static native void vector_basecalling_metrics_add(long jarg1, vector_basecalling_metrics jarg1_, long jarg2, basecalling_metric jarg2_);
  public final static native long vector_basecalling_metrics_get(long jarg1, vector_basecalling_metrics jarg1_, int jarg2);
  public final static native void vector_basecalling_metrics_set(long jarg1, vector_basecalling_metrics jarg1_, int jarg2, long jarg3, basecalling_metric jarg3_);
  public final static native void delete_vector_basecalling_metrics(long jarg1);
  public final static native int base_color_matrix_metrics_TYPE_get();
  public final static native int base_color_matrix_metrics_LATEST_VERSION_get();
  public final static native long new_base_color_matrix_metrics__SWIG_0(short jarg1);
  public final static native long new_base_color_matrix_metrics__SWIG_1(long jarg1, color_matrix_metric_header jarg1_, short jarg2);
  public final static native long new_base_color_matrix_metrics__SWIG_2(long jarg1, color_matrix_metric_header jarg1_);
  public final static native long new_base_color_matrix_metrics__SWIG_3();
  public final static native long new_base_color_matrix_metrics__SWIG_4(long jarg1, vector_color_matrix_metrics jarg1_, short jarg2, long jarg3, color_matrix_metric_header jarg3_);
  public final static native boolean base_color_matrix_metrics_data_source_exists__SWIG_0(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native void base_color_matrix_metrics_data_source_exists__SWIG_1(long jarg1, base_color_matrix_metrics jarg1_, boolean jarg2);
  public final static native void base_color_matrix_metrics_rebuild_index__SWIG_0(long jarg1, base_color_matrix_metrics jarg1_, boolean jarg2);
  public final static native void base_color_matrix_metrics_rebuild_index__SWIG_1(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native void base_color_matrix_metrics_resize(long jarg1, base_color_matrix_metrics jarg1_, long jarg2);
  public final static native void base_color_matrix_metrics_reserve(long jarg1, base_color_matrix_metrics jarg1_, long jarg2);
  public final static native void base_color_matrix_metrics_trim(long jarg1, base_color_matrix_metrics jarg1_, long jarg2);
  public final static native long base_color_matrix_metrics_find__SWIG_0(long jarg1, base_color_matrix_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_color_matrix_metrics_find__SWIG_1(long jarg1, base_color_matrix_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_color_matrix_metrics_find__SWIG_2(long jarg1, base_color_matrix_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_color_matrix_metrics_has_metric__SWIG_0(long jarg1, base_color_matrix_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_color_matrix_metrics_has_metric__SWIG_1(long jarg1, base_color_matrix_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_color_matrix_metrics_has_metric__SWIG_2(long jarg1, base_color_matrix_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_color_matrix_metrics_insert__SWIG_0(long jarg1, base_color_matrix_metrics jarg1_, long jarg2, color_matrix_metric jarg2_);
  public final static native void base_color_matrix_metrics_insert__SWIG_1(long jarg1, base_color_matrix_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, color_matrix_metric jarg3_);
  public final static native long base_color_matrix_metrics_get_metric__SWIG_0(long jarg1, base_color_matrix_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_color_matrix_metrics_get_metric__SWIG_1(long jarg1, base_color_matrix_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_color_matrix_metrics_get_metric__SWIG_2(long jarg1, base_color_matrix_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_color_matrix_metrics_at(long jarg1, base_color_matrix_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_color_matrix_metrics_set_version(long jarg1, base_color_matrix_metrics jarg1_, short jarg2);
  public final static native long base_color_matrix_metrics_keys(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native long base_color_matrix_metrics_lanes(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native long base_color_matrix_metrics_lane_count(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native long base_color_matrix_metrics_max_lane(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native long base_color_matrix_metrics_tile_numbers_for_lane(long jarg1, base_color_matrix_metrics jarg1_, long jarg2);
  public final static native long base_color_matrix_metrics_tile_numbers(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native long base_color_matrix_metrics_metrics_for_lane__SWIG_0(long jarg1, base_color_matrix_metrics jarg1_, long jarg2);
  public final static native void base_color_matrix_metrics_metrics_for_lane__SWIG_1(long jarg1, base_color_matrix_metrics jarg1_, long jarg2, vector_color_matrix_metrics jarg2_, long jarg3);
  public final static native long base_color_matrix_metrics_cycles(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native long base_color_matrix_metrics_metrics_for_cycle(long jarg1, base_color_matrix_metrics jarg1_, long jarg2);
  public final static native long base_color_matrix_metrics_size(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native boolean base_color_matrix_metrics_empty(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native short base_color_matrix_metrics_version(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native void base_color_matrix_metrics_clear(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native long base_color_matrix_metrics_metrics(long jarg1, base_color_matrix_metrics jarg1_);
  public final static native String base_color_matrix_metrics_prefix();
  public final static native String base_color_matrix_metrics_suffix();
  public final static native long base_color_matrix_metrics_get_metric_ref__SWIG_0(long jarg1, base_color_matrix_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_color_matrix_metrics_get_metric_ref__SWIG_1(long jarg1, base_color_matrix_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_color_matrix_metrics_get_metric_ref__SWIG_2(long jarg1, base_color_matrix_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_color_matrix_metrics(long jarg1);
  public final static native long new_vector_color_matrix_metrics__SWIG_0();
  public final static native long new_vector_color_matrix_metrics__SWIG_1(long jarg1);
  public final static native long vector_color_matrix_metrics_size(long jarg1, vector_color_matrix_metrics jarg1_);
  public final static native long vector_color_matrix_metrics_capacity(long jarg1, vector_color_matrix_metrics jarg1_);
  public final static native void vector_color_matrix_metrics_reserve(long jarg1, vector_color_matrix_metrics jarg1_, long jarg2);
  public final static native boolean vector_color_matrix_metrics_isEmpty(long jarg1, vector_color_matrix_metrics jarg1_);
  public final static native void vector_color_matrix_metrics_clear(long jarg1, vector_color_matrix_metrics jarg1_);
  public final static native void vector_color_matrix_metrics_add(long jarg1, vector_color_matrix_metrics jarg1_, long jarg2, color_matrix_metric jarg2_);
  public final static native long vector_color_matrix_metrics_get(long jarg1, vector_color_matrix_metrics jarg1_, int jarg2);
  public final static native void vector_color_matrix_metrics_set(long jarg1, vector_color_matrix_metrics jarg1_, int jarg2, long jarg3, color_matrix_metric jarg3_);
  public final static native void delete_vector_color_matrix_metrics(long jarg1);
  public final static native int base_distortion_metrics_TYPE_get();
  public final static native int base_distortion_metrics_LATEST_VERSION_get();
  public final static native long new_base_distortion_metrics__SWIG_0(short jarg1);
  public final static native long new_base_distortion_metrics__SWIG_1(long jarg1, distortion_metric_header jarg1_, short jarg2);
  public final static native long new_base_distortion_metrics__SWIG_2(long jarg1, distortion_metric_header jarg1_);
  public final static native long new_base_distortion_metrics__SWIG_3();
  public final static native long new_base_distortion_metrics__SWIG_4(long jarg1, vector_distortion_metrics jarg1_, short jarg2, long jarg3, distortion_metric_header jarg3_);
  public final static native boolean base_distortion_metrics_data_source_exists__SWIG_0(long jarg1, base_distortion_metrics jarg1_);
  public final static native void base_distortion_metrics_data_source_exists__SWIG_1(long jarg1, base_distortion_metrics jarg1_, boolean jarg2);
  public final static native void base_distortion_metrics_rebuild_index__SWIG_0(long jarg1, base_distortion_metrics jarg1_, boolean jarg2);
  public final static native void base_distortion_metrics_rebuild_index__SWIG_1(long jarg1, base_distortion_metrics jarg1_);
  public final static native void base_distortion_metrics_resize(long jarg1, base_distortion_metrics jarg1_, long jarg2);
  public final static native void base_distortion_metrics_reserve(long jarg1, base_distortion_metrics jarg1_, long jarg2);
  public final static native void base_distortion_metrics_trim(long jarg1, base_distortion_metrics jarg1_, long jarg2);
  public final static native long base_distortion_metrics_find__SWIG_0(long jarg1, base_distortion_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_distortion_metrics_find__SWIG_1(long jarg1, base_distortion_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_distortion_metrics_find__SWIG_2(long jarg1, base_distortion_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_distortion_metrics_has_metric__SWIG_0(long jarg1, base_distortion_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_distortion_metrics_has_metric__SWIG_1(long jarg1, base_distortion_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_distortion_metrics_has_metric__SWIG_2(long jarg1, base_distortion_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_distortion_metrics_insert__SWIG_0(long jarg1, base_distortion_metrics jarg1_, long jarg2, distortion_metric jarg2_);
  public final static native void base_distortion_metrics_insert__SWIG_1(long jarg1, base_distortion_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, distortion_metric jarg3_);
  public final static native long base_distortion_metrics_get_metric__SWIG_0(long jarg1, base_distortion_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_distortion_metrics_get_metric__SWIG_1(long jarg1, base_distortion_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_distortion_metrics_get_metric__SWIG_2(long jarg1, base_distortion_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_distortion_metrics_at(long jarg1, base_distortion_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_distortion_metrics_set_version(long jarg1, base_distortion_metrics jarg1_, short jarg2);
  public final static native long base_distortion_metrics_keys(long jarg1, base_distortion_metrics jarg1_);
  public final static native long base_distortion_metrics_lanes(long jarg1, base_distortion_metrics jarg1_);
  public final static native long base_distortion_metrics_lane_count(long jarg1, base_distortion_metrics jarg1_);
  public final static native long base_distortion_metrics_max_lane(long jarg1, base_distortion_metrics jarg1_);
  public final static native long base_distortion_metrics_tile_numbers_for_lane(long jarg1, base_distortion_metrics jarg1_, long jarg2);
  public final static native long base_distortion_metrics_tile_numbers(long jarg1, base_distortion_metrics jarg1_);
  public final static native long base_distortion_metrics_metrics_for_lane__SWIG_0(long jarg1, base_distortion_metrics jarg1_, long jarg2);
  public final static native void base_distortion_metrics_metrics_for_lane__SWIG_1(long jarg1, base_distortion_metrics jarg1_, long jarg2, vector_distortion_metrics jarg2_, long jarg3);
  public final static native long base_distortion_metrics_cycles(long jarg1, base_distortion_metrics jarg1_);
  public final static native long base_distortion_metrics_metrics_for_cycle(long jarg1, base_distortion_metrics jarg1_, long jarg2);
  public final static native long base_distortion_metrics_size(long jarg1, base_distortion_metrics jarg1_);
  public final static native boolean base_distortion_metrics_empty(long jarg1, base_distortion_metrics jarg1_);
  public final static native short base_distortion_metrics_version(long jarg1, base_distortion_metrics jarg1_);
  public final static native void base_distortion_metrics_clear(long jarg1, base_distortion_metrics jarg1_);
  public final static native long base_distortion_metrics_metrics(long jarg1, base_distortion_metrics jarg1_);
  public final static native String base_distortion_metrics_prefix();
  public final static native String base_distortion_metrics_suffix();
  public final static native long base_distortion_metrics_get_metric_ref__SWIG_0(long jarg1, base_distortion_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_distortion_metrics_get_metric_ref__SWIG_1(long jarg1, base_distortion_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_distortion_metrics_get_metric_ref__SWIG_2(long jarg1, base_distortion_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_distortion_metrics(long jarg1);
  public final static native long new_vector_distortion_metrics__SWIG_0();
  public final static native long new_vector_distortion_metrics__SWIG_1(long jarg1);
  public final static native long vector_distortion_metrics_size(long jarg1, vector_distortion_metrics jarg1_);
  public final static native long vector_distortion_metrics_capacity(long jarg1, vector_distortion_metrics jarg1_);
  public final static native void vector_distortion_metrics_reserve(long jarg1, vector_distortion_metrics jarg1_, long jarg2);
  public final static native boolean vector_distortion_metrics_isEmpty(long jarg1, vector_distortion_metrics jarg1_);
  public final static native void vector_distortion_metrics_clear(long jarg1, vector_distortion_metrics jarg1_);
  public final static native void vector_distortion_metrics_add(long jarg1, vector_distortion_metrics jarg1_, long jarg2, distortion_metric jarg2_);
  public final static native long vector_distortion_metrics_get(long jarg1, vector_distortion_metrics jarg1_, int jarg2);
  public final static native void vector_distortion_metrics_set(long jarg1, vector_distortion_metrics jarg1_, int jarg2, long jarg3, distortion_metric jarg3_);
  public final static native void delete_vector_distortion_metrics(long jarg1);
  public final static native int base_dynamic_phasing_metrics_TYPE_get();
  public final static native int base_dynamic_phasing_metrics_LATEST_VERSION_get();
  public final static native long new_base_dynamic_phasing_metrics__SWIG_0(short jarg1);
  public final static native long new_base_dynamic_phasing_metrics__SWIG_1(long jarg1, base_read_metric_header jarg1_, short jarg2);
  public final static native long new_base_dynamic_phasing_metrics__SWIG_2(long jarg1, base_read_metric_header jarg1_);
  public final static native long new_base_dynamic_phasing_metrics__SWIG_3();
  public final static native long new_base_dynamic_phasing_metrics__SWIG_4(long jarg1, vector_dynamic_phasing_metrics jarg1_, short jarg2, long jarg3, base_read_metric_header jarg3_);
  public final static native boolean base_dynamic_phasing_metrics_data_source_exists__SWIG_0(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native void base_dynamic_phasing_metrics_data_source_exists__SWIG_1(long jarg1, base_dynamic_phasing_metrics jarg1_, boolean jarg2);
  public final static native void base_dynamic_phasing_metrics_rebuild_index__SWIG_0(long jarg1, base_dynamic_phasing_metrics jarg1_, boolean jarg2);
  public final static native void base_dynamic_phasing_metrics_rebuild_index__SWIG_1(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native void base_dynamic_phasing_metrics_resize(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2);
  public final static native void base_dynamic_phasing_metrics_reserve(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2);
  public final static native void base_dynamic_phasing_metrics_trim(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2);
  public final static native long base_dynamic_phasing_metrics_find__SWIG_0(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_dynamic_phasing_metrics_find__SWIG_1(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_dynamic_phasing_metrics_find__SWIG_2(long jarg1, base_dynamic_phasing_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_dynamic_phasing_metrics_has_metric__SWIG_0(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_dynamic_phasing_metrics_has_metric__SWIG_1(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_dynamic_phasing_metrics_has_metric__SWIG_2(long jarg1, base_dynamic_phasing_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_dynamic_phasing_metrics_insert__SWIG_0(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2, dynamic_phasing_metric jarg2_);
  public final static native void base_dynamic_phasing_metrics_insert__SWIG_1(long jarg1, base_dynamic_phasing_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, dynamic_phasing_metric jarg3_);
  public final static native long base_dynamic_phasing_metrics_get_metric__SWIG_0(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_dynamic_phasing_metrics_get_metric__SWIG_1(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_dynamic_phasing_metrics_get_metric__SWIG_2(long jarg1, base_dynamic_phasing_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_dynamic_phasing_metrics_at(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_dynamic_phasing_metrics_set_version(long jarg1, base_dynamic_phasing_metrics jarg1_, short jarg2);
  public final static native long base_dynamic_phasing_metrics_keys(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native long base_dynamic_phasing_metrics_lanes(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native long base_dynamic_phasing_metrics_lane_count(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native long base_dynamic_phasing_metrics_max_lane(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native long base_dynamic_phasing_metrics_tile_numbers_for_lane(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2);
  public final static native long base_dynamic_phasing_metrics_tile_numbers(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native long base_dynamic_phasing_metrics_metrics_for_lane__SWIG_0(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2);
  public final static native void base_dynamic_phasing_metrics_metrics_for_lane__SWIG_1(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2, vector_dynamic_phasing_metrics jarg2_, long jarg3);
  public final static native long base_dynamic_phasing_metrics_cycles(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native long base_dynamic_phasing_metrics_metrics_for_cycle(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2);
  public final static native long base_dynamic_phasing_metrics_size(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native boolean base_dynamic_phasing_metrics_empty(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native short base_dynamic_phasing_metrics_version(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native void base_dynamic_phasing_metrics_clear(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native long base_dynamic_phasing_metrics_metrics(long jarg1, base_dynamic_phasing_metrics jarg1_);
  public final static native String base_dynamic_phasing_metrics_prefix();
  public final static native String base_dynamic_phasing_metrics_suffix();
  public final static native long base_dynamic_phasing_metrics_get_metric_ref__SWIG_0(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_dynamic_phasing_metrics_get_metric_ref__SWIG_1(long jarg1, base_dynamic_phasing_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_dynamic_phasing_metrics_get_metric_ref__SWIG_2(long jarg1, base_dynamic_phasing_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_dynamic_phasing_metrics(long jarg1);
  public final static native long new_vector_dynamic_phasing_metrics__SWIG_0();
  public final static native long new_vector_dynamic_phasing_metrics__SWIG_1(long jarg1);
  public final static native long vector_dynamic_phasing_metrics_size(long jarg1, vector_dynamic_phasing_metrics jarg1_);
  public final static native long vector_dynamic_phasing_metrics_capacity(long jarg1, vector_dynamic_phasing_metrics jarg1_);
  public final static native void vector_dynamic_phasing_metrics_reserve(long jarg1, vector_dynamic_phasing_metrics jarg1_, long jarg2);
  public final static native boolean vector_dynamic_phasing_metrics_isEmpty(long jarg1, vector_dynamic_phasing_metrics jarg1_);
  public final static native void vector_dynamic_phasing_metrics_clear(long jarg1, vector_dynamic_phasing_metrics jarg1_);
  public final static native void vector_dynamic_phasing_metrics_add(long jarg1, vector_dynamic_phasing_metrics jarg1_, long jarg2, dynamic_phasing_metric jarg2_);
  public final static native long vector_dynamic_phasing_metrics_get(long jarg1, vector_dynamic_phasing_metrics jarg1_, int jarg2);
  public final static native void vector_dynamic_phasing_metrics_set(long jarg1, vector_dynamic_phasing_metrics jarg1_, int jarg2, long jarg3, dynamic_phasing_metric jarg3_);
  public final static native void delete_vector_dynamic_phasing_metrics(long jarg1);
  public final static native int base_event_metrics_TYPE_get();
  public final static native int base_event_metrics_LATEST_VERSION_get();
  public final static native long new_base_event_metrics__SWIG_0(short jarg1);
  public final static native long new_base_event_metrics__SWIG_1(long jarg1, base_event_metric_header jarg1_, short jarg2);
  public final static native long new_base_event_metrics__SWIG_2(long jarg1, base_event_metric_header jarg1_);
  public final static native long new_base_event_metrics__SWIG_3();
  public final static native long new_base_event_metrics__SWIG_4(long jarg1, vector_event_metrics jarg1_, short jarg2, long jarg3, base_event_metric_header jarg3_);
  public final static native boolean base_event_metrics_data_source_exists__SWIG_0(long jarg1, base_event_metrics jarg1_);
  public final static native void base_event_metrics_data_source_exists__SWIG_1(long jarg1, base_event_metrics jarg1_, boolean jarg2);
  public final static native void base_event_metrics_rebuild_index__SWIG_0(long jarg1, base_event_metrics jarg1_, boolean jarg2);
  public final static native void base_event_metrics_rebuild_index__SWIG_1(long jarg1, base_event_metrics jarg1_);
  public final static native void base_event_metrics_resize(long jarg1, base_event_metrics jarg1_, long jarg2);
  public final static native void base_event_metrics_reserve(long jarg1, base_event_metrics jarg1_, long jarg2);
  public final static native void base_event_metrics_trim(long jarg1, base_event_metrics jarg1_, long jarg2);
  public final static native long base_event_metrics_find__SWIG_0(long jarg1, base_event_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_event_metrics_find__SWIG_1(long jarg1, base_event_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_event_metrics_find__SWIG_2(long jarg1, base_event_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_event_metrics_has_metric__SWIG_0(long jarg1, base_event_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_event_metrics_has_metric__SWIG_1(long jarg1, base_event_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_event_metrics_has_metric__SWIG_2(long jarg1, base_event_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_event_metrics_insert__SWIG_0(long jarg1, base_event_metrics jarg1_, long jarg2, event_metric jarg2_);
  public final static native void base_event_metrics_insert__SWIG_1(long jarg1, base_event_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, event_metric jarg3_);
  public final static native long base_event_metrics_get_metric__SWIG_0(long jarg1, base_event_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_event_metrics_get_metric__SWIG_1(long jarg1, base_event_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_event_metrics_get_metric__SWIG_2(long jarg1, base_event_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_event_metrics_at(long jarg1, base_event_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_event_metrics_set_version(long jarg1, base_event_metrics jarg1_, short jarg2);
  public final static native long base_event_metrics_keys(long jarg1, base_event_metrics jarg1_);
  public final static native long base_event_metrics_lanes(long jarg1, base_event_metrics jarg1_);
  public final static native long base_event_metrics_lane_count(long jarg1, base_event_metrics jarg1_);
  public final static native long base_event_metrics_max_lane(long jarg1, base_event_metrics jarg1_);
  public final static native long base_event_metrics_tile_numbers_for_lane(long jarg1, base_event_metrics jarg1_, long jarg2);
  public final static native long base_event_metrics_tile_numbers(long jarg1, base_event_metrics jarg1_);
  public final static native long base_event_metrics_metrics_for_lane__SWIG_0(long jarg1, base_event_metrics jarg1_, long jarg2);
  public final static native void base_event_metrics_metrics_for_lane__SWIG_1(long jarg1, base_event_metrics jarg1_, long jarg2, vector_event_metrics jarg2_, long jarg3);
  public final static native long base_event_metrics_cycles(long jarg1, base_event_metrics jarg1_);
  public final static native long base_event_metrics_metrics_for_cycle(long jarg1, base_event_metrics jarg1_, long jarg2);
  public final static native long base_event_metrics_size(long jarg1, base_event_metrics jarg1_);
  public final static native boolean base_event_metrics_empty(long jarg1, base_event_metrics jarg1_);
  public final static native short base_event_metrics_version(long jarg1, base_event_metrics jarg1_);
  public final static native void base_event_metrics_clear(long jarg1, base_event_metrics jarg1_);
  public final static native long base_event_metrics_metrics(long jarg1, base_event_metrics jarg1_);
  public final static native String base_event_metrics_prefix();
  public final static native String base_event_metrics_suffix();
  public final static native long base_event_metrics_get_metric_ref__SWIG_0(long jarg1, base_event_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_event_metrics_get_metric_ref__SWIG_1(long jarg1, base_event_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_event_metrics_get_metric_ref__SWIG_2(long jarg1, base_event_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_event_metrics(long jarg1);
  public final static native long new_vector_event_metrics__SWIG_0();
  public final static native long new_vector_event_metrics__SWIG_1(long jarg1);
  public final static native long vector_event_metrics_size(long jarg1, vector_event_metrics jarg1_);
  public final static native long vector_event_metrics_capacity(long jarg1, vector_event_metrics jarg1_);
  public final static native void vector_event_metrics_reserve(long jarg1, vector_event_metrics jarg1_, long jarg2);
  public final static native boolean vector_event_metrics_isEmpty(long jarg1, vector_event_metrics jarg1_);
  public final static native void vector_event_metrics_clear(long jarg1, vector_event_metrics jarg1_);
  public final static native void vector_event_metrics_add(long jarg1, vector_event_metrics jarg1_, long jarg2, event_metric jarg2_);
  public final static native long vector_event_metrics_get(long jarg1, vector_event_metrics jarg1_, int jarg2);
  public final static native void vector_event_metrics_set(long jarg1, vector_event_metrics jarg1_, int jarg2, long jarg3, event_metric jarg3_);
  public final static native void delete_vector_event_metrics(long jarg1);
  public final static native int base_extended_tile_metrics_TYPE_get();
  public final static native int base_extended_tile_metrics_LATEST_VERSION_get();
  public final static native long new_base_extended_tile_metrics__SWIG_0(short jarg1);
  public final static native long new_base_extended_tile_metrics__SWIG_1(long jarg1, base_metric_header jarg1_, short jarg2);
  public final static native long new_base_extended_tile_metrics__SWIG_2(long jarg1, base_metric_header jarg1_);
  public final static native long new_base_extended_tile_metrics__SWIG_3();
  public final static native long new_base_extended_tile_metrics__SWIG_4(long jarg1, vector_extended_tile_metrics jarg1_, short jarg2, long jarg3, base_metric_header jarg3_);
  public final static native boolean base_extended_tile_metrics_data_source_exists__SWIG_0(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native void base_extended_tile_metrics_data_source_exists__SWIG_1(long jarg1, base_extended_tile_metrics jarg1_, boolean jarg2);
  public final static native void base_extended_tile_metrics_rebuild_index__SWIG_0(long jarg1, base_extended_tile_metrics jarg1_, boolean jarg2);
  public final static native void base_extended_tile_metrics_rebuild_index__SWIG_1(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native void base_extended_tile_metrics_resize(long jarg1, base_extended_tile_metrics jarg1_, long jarg2);
  public final static native void base_extended_tile_metrics_reserve(long jarg1, base_extended_tile_metrics jarg1_, long jarg2);
  public final static native void base_extended_tile_metrics_trim(long jarg1, base_extended_tile_metrics jarg1_, long jarg2);
  public final static native long base_extended_tile_metrics_find__SWIG_0(long jarg1, base_extended_tile_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_extended_tile_metrics_find__SWIG_1(long jarg1, base_extended_tile_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_extended_tile_metrics_find__SWIG_2(long jarg1, base_extended_tile_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_extended_tile_metrics_has_metric__SWIG_0(long jarg1, base_extended_tile_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_extended_tile_metrics_has_metric__SWIG_1(long jarg1, base_extended_tile_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_extended_tile_metrics_has_metric__SWIG_2(long jarg1, base_extended_tile_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_extended_tile_metrics_insert__SWIG_0(long jarg1, base_extended_tile_metrics jarg1_, long jarg2, extended_tile_metric jarg2_);
  public final static native void base_extended_tile_metrics_insert__SWIG_1(long jarg1, base_extended_tile_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, extended_tile_metric jarg3_);
  public final static native long base_extended_tile_metrics_get_metric__SWIG_0(long jarg1, base_extended_tile_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_extended_tile_metrics_get_metric__SWIG_1(long jarg1, base_extended_tile_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_extended_tile_metrics_get_metric__SWIG_2(long jarg1, base_extended_tile_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_extended_tile_metrics_at(long jarg1, base_extended_tile_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_extended_tile_metrics_set_version(long jarg1, base_extended_tile_metrics jarg1_, short jarg2);
  public final static native long base_extended_tile_metrics_keys(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native long base_extended_tile_metrics_lanes(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native long base_extended_tile_metrics_lane_count(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native long base_extended_tile_metrics_max_lane(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native long base_extended_tile_metrics_tile_numbers_for_lane(long jarg1, base_extended_tile_metrics jarg1_, long jarg2);
  public final static native long base_extended_tile_metrics_tile_numbers(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native long base_extended_tile_metrics_metrics_for_lane__SWIG_0(long jarg1, base_extended_tile_metrics jarg1_, long jarg2);
  public final static native void base_extended_tile_metrics_metrics_for_lane__SWIG_1(long jarg1, base_extended_tile_metrics jarg1_, long jarg2, vector_extended_tile_metrics jarg2_, long jarg3);
  public final static native long base_extended_tile_metrics_cycles(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native long base_extended_tile_metrics_metrics_for_cycle(long jarg1, base_extended_tile_metrics jarg1_, long jarg2);
  public final static native long base_extended_tile_metrics_size(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native boolean base_extended_tile_metrics_empty(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native short base_extended_tile_metrics_version(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native void base_extended_tile_metrics_clear(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native long base_extended_tile_metrics_metrics(long jarg1, base_extended_tile_metrics jarg1_);
  public final static native String base_extended_tile_metrics_prefix();
  public final static native String base_extended_tile_metrics_suffix();
  public final static native long base_extended_tile_metrics_get_metric_ref__SWIG_0(long jarg1, base_extended_tile_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_extended_tile_metrics_get_metric_ref__SWIG_1(long jarg1, base_extended_tile_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_extended_tile_metrics_get_metric_ref__SWIG_2(long jarg1, base_extended_tile_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_extended_tile_metrics(long jarg1);
  public final static native long new_vector_extended_tile_metrics__SWIG_0();
  public final static native long new_vector_extended_tile_metrics__SWIG_1(long jarg1);
  public final static native long vector_extended_tile_metrics_size(long jarg1, vector_extended_tile_metrics jarg1_);
  public final static native long vector_extended_tile_metrics_capacity(long jarg1, vector_extended_tile_metrics jarg1_);
  public final static native void vector_extended_tile_metrics_reserve(long jarg1, vector_extended_tile_metrics jarg1_, long jarg2);
  public final static native boolean vector_extended_tile_metrics_isEmpty(long jarg1, vector_extended_tile_metrics jarg1_);
  public final static native void vector_extended_tile_metrics_clear(long jarg1, vector_extended_tile_metrics jarg1_);
  public final static native void vector_extended_tile_metrics_add(long jarg1, vector_extended_tile_metrics jarg1_, long jarg2, extended_tile_metric jarg2_);
  public final static native long vector_extended_tile_metrics_get(long jarg1, vector_extended_tile_metrics jarg1_, int jarg2);
  public final static native void vector_extended_tile_metrics_set(long jarg1, vector_extended_tile_metrics jarg1_, int jarg2, long jarg3, extended_tile_metric jarg3_);
  public final static native void delete_vector_extended_tile_metrics(long jarg1);
  public final static native int base_fwhm_grid_metrics_TYPE_get();
  public final static native int base_fwhm_grid_metrics_LATEST_VERSION_get();
  public final static native long new_base_fwhm_grid_metrics__SWIG_0(short jarg1);
  public final static native long new_base_fwhm_grid_metrics__SWIG_1(long jarg1, fwhm_grid_metric_header jarg1_, short jarg2);
  public final static native long new_base_fwhm_grid_metrics__SWIG_2(long jarg1, fwhm_grid_metric_header jarg1_);
  public final static native long new_base_fwhm_grid_metrics__SWIG_3();
  public final static native long new_base_fwhm_grid_metrics__SWIG_4(long jarg1, vector_fwhm_grid_metrics jarg1_, short jarg2, long jarg3, fwhm_grid_metric_header jarg3_);
  public final static native boolean base_fwhm_grid_metrics_data_source_exists__SWIG_0(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native void base_fwhm_grid_metrics_data_source_exists__SWIG_1(long jarg1, base_fwhm_grid_metrics jarg1_, boolean jarg2);
  public final static native void base_fwhm_grid_metrics_rebuild_index__SWIG_0(long jarg1, base_fwhm_grid_metrics jarg1_, boolean jarg2);
  public final static native void base_fwhm_grid_metrics_rebuild_index__SWIG_1(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native void base_fwhm_grid_metrics_resize(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2);
  public final static native void base_fwhm_grid_metrics_reserve(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2);
  public final static native void base_fwhm_grid_metrics_trim(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2);
  public final static native long base_fwhm_grid_metrics_find__SWIG_0(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_fwhm_grid_metrics_find__SWIG_1(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_fwhm_grid_metrics_find__SWIG_2(long jarg1, base_fwhm_grid_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_fwhm_grid_metrics_has_metric__SWIG_0(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_fwhm_grid_metrics_has_metric__SWIG_1(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_fwhm_grid_metrics_has_metric__SWIG_2(long jarg1, base_fwhm_grid_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_fwhm_grid_metrics_insert__SWIG_0(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2, fwhm_grid_metric jarg2_);
  public final static native void base_fwhm_grid_metrics_insert__SWIG_1(long jarg1, base_fwhm_grid_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, fwhm_grid_metric jarg3_);
  public final static native long base_fwhm_grid_metrics_get_metric__SWIG_0(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_fwhm_grid_metrics_get_metric__SWIG_1(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_fwhm_grid_metrics_get_metric__SWIG_2(long jarg1, base_fwhm_grid_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_fwhm_grid_metrics_at(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_fwhm_grid_metrics_set_version(long jarg1, base_fwhm_grid_metrics jarg1_, short jarg2);
  public final static native long base_fwhm_grid_metrics_keys(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native long base_fwhm_grid_metrics_lanes(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native long base_fwhm_grid_metrics_lane_count(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native long base_fwhm_grid_metrics_max_lane(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native long base_fwhm_grid_metrics_tile_numbers_for_lane(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2);
  public final static native long base_fwhm_grid_metrics_tile_numbers(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native long base_fwhm_grid_metrics_metrics_for_lane__SWIG_0(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2);
  public final static native void base_fwhm_grid_metrics_metrics_for_lane__SWIG_1(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2, vector_fwhm_grid_metrics jarg2_, long jarg3);
  public final static native long base_fwhm_grid_metrics_cycles(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native long base_fwhm_grid_metrics_metrics_for_cycle(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2);
  public final static native long base_fwhm_grid_metrics_size(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native boolean base_fwhm_grid_metrics_empty(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native short base_fwhm_grid_metrics_version(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native void base_fwhm_grid_metrics_clear(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native long base_fwhm_grid_metrics_metrics(long jarg1, base_fwhm_grid_metrics jarg1_);
  public final static native String base_fwhm_grid_metrics_prefix();
  public final static native String base_fwhm_grid_metrics_suffix();
  public final static native long base_fwhm_grid_metrics_get_metric_ref__SWIG_0(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_fwhm_grid_metrics_get_metric_ref__SWIG_1(long jarg1, base_fwhm_grid_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_fwhm_grid_metrics_get_metric_ref__SWIG_2(long jarg1, base_fwhm_grid_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_fwhm_grid_metrics(long jarg1);
  public final static native long new_vector_fwhm_grid_metrics__SWIG_0();
  public final static native long new_vector_fwhm_grid_metrics__SWIG_1(long jarg1);
  public final static native long vector_fwhm_grid_metrics_size(long jarg1, vector_fwhm_grid_metrics jarg1_);
  public final static native long vector_fwhm_grid_metrics_capacity(long jarg1, vector_fwhm_grid_metrics jarg1_);
  public final static native void vector_fwhm_grid_metrics_reserve(long jarg1, vector_fwhm_grid_metrics jarg1_, long jarg2);
  public final static native boolean vector_fwhm_grid_metrics_isEmpty(long jarg1, vector_fwhm_grid_metrics jarg1_);
  public final static native void vector_fwhm_grid_metrics_clear(long jarg1, vector_fwhm_grid_metrics jarg1_);
  public final static native void vector_fwhm_grid_metrics_add(long jarg1, vector_fwhm_grid_metrics jarg1_, long jarg2, fwhm_grid_metric jarg2_);
  public final static native long vector_fwhm_grid_metrics_get(long jarg1, vector_fwhm_grid_metrics jarg1_, int jarg2);
  public final static native void vector_fwhm_grid_metrics_set(long jarg1, vector_fwhm_grid_metrics jarg1_, int jarg2, long jarg3, fwhm_grid_metric jarg3_);
  public final static native void delete_vector_fwhm_grid_metrics(long jarg1);
  public final static native int base_pf_grid_metrics_TYPE_get();
  public final static native int base_pf_grid_metrics_LATEST_VERSION_get();
  public final static native long new_base_pf_grid_metrics__SWIG_0(short jarg1);
  public final static native long new_base_pf_grid_metrics__SWIG_1(long jarg1, pf_grid_metric_header jarg1_, short jarg2);
  public final static native long new_base_pf_grid_metrics__SWIG_2(long jarg1, pf_grid_metric_header jarg1_);
  public final static native long new_base_pf_grid_metrics__SWIG_3();
  public final static native long new_base_pf_grid_metrics__SWIG_4(long jarg1, vector_pf_grid_metrics jarg1_, short jarg2, long jarg3, pf_grid_metric_header jarg3_);
  public final static native boolean base_pf_grid_metrics_data_source_exists__SWIG_0(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native void base_pf_grid_metrics_data_source_exists__SWIG_1(long jarg1, base_pf_grid_metrics jarg1_, boolean jarg2);
  public final static native void base_pf_grid_metrics_rebuild_index__SWIG_0(long jarg1, base_pf_grid_metrics jarg1_, boolean jarg2);
  public final static native void base_pf_grid_metrics_rebuild_index__SWIG_1(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native void base_pf_grid_metrics_resize(long jarg1, base_pf_grid_metrics jarg1_, long jarg2);
  public final static native void base_pf_grid_metrics_reserve(long jarg1, base_pf_grid_metrics jarg1_, long jarg2);
  public final static native void base_pf_grid_metrics_trim(long jarg1, base_pf_grid_metrics jarg1_, long jarg2);
  public final static native long base_pf_grid_metrics_find__SWIG_0(long jarg1, base_pf_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_pf_grid_metrics_find__SWIG_1(long jarg1, base_pf_grid_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_pf_grid_metrics_find__SWIG_2(long jarg1, base_pf_grid_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_pf_grid_metrics_has_metric__SWIG_0(long jarg1, base_pf_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_pf_grid_metrics_has_metric__SWIG_1(long jarg1, base_pf_grid_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_pf_grid_metrics_has_metric__SWIG_2(long jarg1, base_pf_grid_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_pf_grid_metrics_insert__SWIG_0(long jarg1, base_pf_grid_metrics jarg1_, long jarg2, pf_grid_metric jarg2_);
  public final static native void base_pf_grid_metrics_insert__SWIG_1(long jarg1, base_pf_grid_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, pf_grid_metric jarg3_);
  public final static native long base_pf_grid_metrics_get_metric__SWIG_0(long jarg1, base_pf_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_pf_grid_metrics_get_metric__SWIG_1(long jarg1, base_pf_grid_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_pf_grid_metrics_get_metric__SWIG_2(long jarg1, base_pf_grid_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_pf_grid_metrics_at(long jarg1, base_pf_grid_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_pf_grid_metrics_set_version(long jarg1, base_pf_grid_metrics jarg1_, short jarg2);
  public final static native long base_pf_grid_metrics_keys(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native long base_pf_grid_metrics_lanes(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native long base_pf_grid_metrics_lane_count(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native long base_pf_grid_metrics_max_lane(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native long base_pf_grid_metrics_tile_numbers_for_lane(long jarg1, base_pf_grid_metrics jarg1_, long jarg2);
  public final static native long base_pf_grid_metrics_tile_numbers(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native long base_pf_grid_metrics_metrics_for_lane__SWIG_0(long jarg1, base_pf_grid_metrics jarg1_, long jarg2);
  public final static native void base_pf_grid_metrics_metrics_for_lane__SWIG_1(long jarg1, base_pf_grid_metrics jarg1_, long jarg2, vector_pf_grid_metrics jarg2_, long jarg3);
  public final static native long base_pf_grid_metrics_cycles(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native long base_pf_grid_metrics_metrics_for_cycle(long jarg1, base_pf_grid_metrics jarg1_, long jarg2);
  public final static native long base_pf_grid_metrics_size(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native boolean base_pf_grid_metrics_empty(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native short base_pf_grid_metrics_version(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native void base_pf_grid_metrics_clear(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native long base_pf_grid_metrics_metrics(long jarg1, base_pf_grid_metrics jarg1_);
  public final static native String base_pf_grid_metrics_prefix();
  public final static native String base_pf_grid_metrics_suffix();
  public final static native long base_pf_grid_metrics_get_metric_ref__SWIG_0(long jarg1, base_pf_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_pf_grid_metrics_get_metric_ref__SWIG_1(long jarg1, base_pf_grid_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_pf_grid_metrics_get_metric_ref__SWIG_2(long jarg1, base_pf_grid_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_pf_grid_metrics(long jarg1);
  public final static native long new_vector_pf_grid_metrics__SWIG_0();
  public final static native long new_vector_pf_grid_metrics__SWIG_1(long jarg1);
  public final static native long vector_pf_grid_metrics_size(long jarg1, vector_pf_grid_metrics jarg1_);
  public final static native long vector_pf_grid_metrics_capacity(long jarg1, vector_pf_grid_metrics jarg1_);
  public final static native void vector_pf_grid_metrics_reserve(long jarg1, vector_pf_grid_metrics jarg1_, long jarg2);
  public final static native boolean vector_pf_grid_metrics_isEmpty(long jarg1, vector_pf_grid_metrics jarg1_);
  public final static native void vector_pf_grid_metrics_clear(long jarg1, vector_pf_grid_metrics jarg1_);
  public final static native void vector_pf_grid_metrics_add(long jarg1, vector_pf_grid_metrics jarg1_, long jarg2, pf_grid_metric jarg2_);
  public final static native long vector_pf_grid_metrics_get(long jarg1, vector_pf_grid_metrics jarg1_, int jarg2);
  public final static native void vector_pf_grid_metrics_set(long jarg1, vector_pf_grid_metrics jarg1_, int jarg2, long jarg3, pf_grid_metric jarg3_);
  public final static native void delete_vector_pf_grid_metrics(long jarg1);
  public final static native int base_phasing_metrics_TYPE_get();
  public final static native int base_phasing_metrics_LATEST_VERSION_get();
  public final static native long new_base_phasing_metrics__SWIG_0(short jarg1);
  public final static native long new_base_phasing_metrics__SWIG_1(long jarg1, base_cycle_metric_header jarg1_, short jarg2);
  public final static native long new_base_phasing_metrics__SWIG_2(long jarg1, base_cycle_metric_header jarg1_);
  public final static native long new_base_phasing_metrics__SWIG_3();
  public final static native long new_base_phasing_metrics__SWIG_4(long jarg1, vector_phasing_metrics jarg1_, short jarg2, long jarg3, base_cycle_metric_header jarg3_);
  public final static native boolean base_phasing_metrics_data_source_exists__SWIG_0(long jarg1, base_phasing_metrics jarg1_);
  public final static native void base_phasing_metrics_data_source_exists__SWIG_1(long jarg1, base_phasing_metrics jarg1_, boolean jarg2);
  public final static native void base_phasing_metrics_rebuild_index__SWIG_0(long jarg1, base_phasing_metrics jarg1_, boolean jarg2);
  public final static native void base_phasing_metrics_rebuild_index__SWIG_1(long jarg1, base_phasing_metrics jarg1_);
  public final static native void base_phasing_metrics_resize(long jarg1, base_phasing_metrics jarg1_, long jarg2);
  public final static native void base_phasing_metrics_reserve(long jarg1, base_phasing_metrics jarg1_, long jarg2);
  public final static native void base_phasing_metrics_trim(long jarg1, base_phasing_metrics jarg1_, long jarg2);
  public final static native long base_phasing_metrics_find__SWIG_0(long jarg1, base_phasing_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_phasing_metrics_find__SWIG_1(long jarg1, base_phasing_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_phasing_metrics_find__SWIG_2(long jarg1, base_phasing_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_phasing_metrics_has_metric__SWIG_0(long jarg1, base_phasing_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_phasing_metrics_has_metric__SWIG_1(long jarg1, base_phasing_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_phasing_metrics_has_metric__SWIG_2(long jarg1, base_phasing_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_phasing_metrics_insert__SWIG_0(long jarg1, base_phasing_metrics jarg1_, long jarg2, phasing_metric jarg2_);
  public final static native void base_phasing_metrics_insert__SWIG_1(long jarg1, base_phasing_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, phasing_metric jarg3_);
  public final static native long base_phasing_metrics_get_metric__SWIG_0(long jarg1, base_phasing_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_phasing_metrics_get_metric__SWIG_1(long jarg1, base_phasing_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_phasing_metrics_get_metric__SWIG_2(long jarg1, base_phasing_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_phasing_metrics_at(long jarg1, base_phasing_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_phasing_metrics_set_version(long jarg1, base_phasing_metrics jarg1_, short jarg2);
  public final static native long base_phasing_metrics_keys(long jarg1, base_phasing_metrics jarg1_);
  public final static native long base_phasing_metrics_lanes(long jarg1, base_phasing_metrics jarg1_);
  public final static native long base_phasing_metrics_lane_count(long jarg1, base_phasing_metrics jarg1_);
  public final static native long base_phasing_metrics_max_lane(long jarg1, base_phasing_metrics jarg1_);
  public final static native long base_phasing_metrics_tile_numbers_for_lane(long jarg1, base_phasing_metrics jarg1_, long jarg2);
  public final static native long base_phasing_metrics_tile_numbers(long jarg1, base_phasing_metrics jarg1_);
  public final static native long base_phasing_metrics_metrics_for_lane__SWIG_0(long jarg1, base_phasing_metrics jarg1_, long jarg2);
  public final static native void base_phasing_metrics_metrics_for_lane__SWIG_1(long jarg1, base_phasing_metrics jarg1_, long jarg2, vector_phasing_metrics jarg2_, long jarg3);
  public final static native long base_phasing_metrics_cycles(long jarg1, base_phasing_metrics jarg1_);
  public final static native long base_phasing_metrics_metrics_for_cycle(long jarg1, base_phasing_metrics jarg1_, long jarg2);
  public final static native long base_phasing_metrics_size(long jarg1, base_phasing_metrics jarg1_);
  public final static native boolean base_phasing_metrics_empty(long jarg1, base_phasing_metrics jarg1_);
  public final static native short base_phasing_metrics_version(long jarg1, base_phasing_metrics jarg1_);
  public final static native void base_phasing_metrics_clear(long jarg1, base_phasing_metrics jarg1_);
  public final static native long base_phasing_metrics_metrics(long jarg1, base_phasing_metrics jarg1_);
  public final static native String base_phasing_metrics_prefix();
  public final static native String base_phasing_metrics_suffix();
  public final static native long base_phasing_metrics_get_metric_ref__SWIG_0(long jarg1, base_phasing_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_phasing_metrics_get_metric_ref__SWIG_1(long jarg1, base_phasing_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_phasing_metrics_get_metric_ref__SWIG_2(long jarg1, base_phasing_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_phasing_metrics(long jarg1);
  public final static native long new_vector_phasing_metrics__SWIG_0();
  public final static native long new_vector_phasing_metrics__SWIG_1(long jarg1);
  public final static native long vector_phasing_metrics_size(long jarg1, vector_phasing_metrics jarg1_);
  public final static native long vector_phasing_metrics_capacity(long jarg1, vector_phasing_metrics jarg1_);
  public final static native void vector_phasing_metrics_reserve(long jarg1, vector_phasing_metrics jarg1_, long jarg2);
  public final static native boolean vector_phasing_metrics_isEmpty(long jarg1, vector_phasing_metrics jarg1_);
  public final static native void vector_phasing_metrics_clear(long jarg1, vector_phasing_metrics jarg1_);
  public final static native void vector_phasing_metrics_add(long jarg1, vector_phasing_metrics jarg1_, long jarg2, phasing_metric jarg2_);
  public final static native long vector_phasing_metrics_get(long jarg1, vector_phasing_metrics jarg1_, int jarg2);
  public final static native void vector_phasing_metrics_set(long jarg1, vector_phasing_metrics jarg1_, int jarg2, long jarg3, phasing_metric jarg3_);
  public final static native void delete_vector_phasing_metrics(long jarg1);
  public final static native int base_q_grid_metrics_TYPE_get();
  public final static native int base_q_grid_metrics_LATEST_VERSION_get();
  public final static native long new_base_q_grid_metrics__SWIG_0(short jarg1);
  public final static native long new_base_q_grid_metrics__SWIG_1(long jarg1, q_grid_metric_header jarg1_, short jarg2);
  public final static native long new_base_q_grid_metrics__SWIG_2(long jarg1, q_grid_metric_header jarg1_);
  public final static native long new_base_q_grid_metrics__SWIG_3();
  public final static native long new_base_q_grid_metrics__SWIG_4(long jarg1, vector_q_grid_metrics jarg1_, short jarg2, long jarg3, q_grid_metric_header jarg3_);
  public final static native boolean base_q_grid_metrics_data_source_exists__SWIG_0(long jarg1, base_q_grid_metrics jarg1_);
  public final static native void base_q_grid_metrics_data_source_exists__SWIG_1(long jarg1, base_q_grid_metrics jarg1_, boolean jarg2);
  public final static native void base_q_grid_metrics_rebuild_index__SWIG_0(long jarg1, base_q_grid_metrics jarg1_, boolean jarg2);
  public final static native void base_q_grid_metrics_rebuild_index__SWIG_1(long jarg1, base_q_grid_metrics jarg1_);
  public final static native void base_q_grid_metrics_resize(long jarg1, base_q_grid_metrics jarg1_, long jarg2);
  public final static native void base_q_grid_metrics_reserve(long jarg1, base_q_grid_metrics jarg1_, long jarg2);
  public final static native void base_q_grid_metrics_trim(long jarg1, base_q_grid_metrics jarg1_, long jarg2);
  public final static native long base_q_grid_metrics_find__SWIG_0(long jarg1, base_q_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_q_grid_metrics_find__SWIG_1(long jarg1, base_q_grid_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_q_grid_metrics_find__SWIG_2(long jarg1, base_q_grid_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_q_grid_metrics_has_metric__SWIG_0(long jarg1, base_q_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_q_grid_metrics_has_metric__SWIG_1(long jarg1, base_q_grid_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_q_grid_metrics_has_metric__SWIG_2(long jarg1, base_q_grid_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_q_grid_metrics_insert__SWIG_0(long jarg1, base_q_grid_metrics jarg1_, long jarg2, q_grid_metric jarg2_);
  public final static native void base_q_grid_metrics_insert__SWIG_1(long jarg1, base_q_grid_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, q_grid_metric jarg3_);
  public final static native long base_q_grid_metrics_get_metric__SWIG_0(long jarg1, base_q_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_q_grid_metrics_get_metric__SWIG_1(long jarg1, base_q_grid_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_q_grid_metrics_get_metric__SWIG_2(long jarg1, base_q_grid_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_q_grid_metrics_at(long jarg1, base_q_grid_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_q_grid_metrics_set_version(long jarg1, base_q_grid_metrics jarg1_, short jarg2);
  public final static native long base_q_grid_metrics_keys(long jarg1, base_q_grid_metrics jarg1_);
  public final static native long base_q_grid_metrics_lanes(long jarg1, base_q_grid_metrics jarg1_);
  public final static native long base_q_grid_metrics_lane_count(long jarg1, base_q_grid_metrics jarg1_);
  public final static native long base_q_grid_metrics_max_lane(long jarg1, base_q_grid_metrics jarg1_);
  public final static native long base_q_grid_metrics_tile_numbers_for_lane(long jarg1, base_q_grid_metrics jarg1_, long jarg2);
  public final static native long base_q_grid_metrics_tile_numbers(long jarg1, base_q_grid_metrics jarg1_);
  public final static native long base_q_grid_metrics_metrics_for_lane__SWIG_0(long jarg1, base_q_grid_metrics jarg1_, long jarg2);
  public final static native void base_q_grid_metrics_metrics_for_lane__SWIG_1(long jarg1, base_q_grid_metrics jarg1_, long jarg2, vector_q_grid_metrics jarg2_, long jarg3);
  public final static native long base_q_grid_metrics_cycles(long jarg1, base_q_grid_metrics jarg1_);
  public final static native long base_q_grid_metrics_metrics_for_cycle(long jarg1, base_q_grid_metrics jarg1_, long jarg2);
  public final static native long base_q_grid_metrics_size(long jarg1, base_q_grid_metrics jarg1_);
  public final static native boolean base_q_grid_metrics_empty(long jarg1, base_q_grid_metrics jarg1_);
  public final static native short base_q_grid_metrics_version(long jarg1, base_q_grid_metrics jarg1_);
  public final static native void base_q_grid_metrics_clear(long jarg1, base_q_grid_metrics jarg1_);
  public final static native long base_q_grid_metrics_metrics(long jarg1, base_q_grid_metrics jarg1_);
  public final static native String base_q_grid_metrics_prefix();
  public final static native String base_q_grid_metrics_suffix();
  public final static native long base_q_grid_metrics_get_metric_ref__SWIG_0(long jarg1, base_q_grid_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_q_grid_metrics_get_metric_ref__SWIG_1(long jarg1, base_q_grid_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_q_grid_metrics_get_metric_ref__SWIG_2(long jarg1, base_q_grid_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_q_grid_metrics(long jarg1);
  public final static native long new_vector_q_grid_metrics__SWIG_0();
  public final static native long new_vector_q_grid_metrics__SWIG_1(long jarg1);
  public final static native long vector_q_grid_metrics_size(long jarg1, vector_q_grid_metrics jarg1_);
  public final static native long vector_q_grid_metrics_capacity(long jarg1, vector_q_grid_metrics jarg1_);
  public final static native void vector_q_grid_metrics_reserve(long jarg1, vector_q_grid_metrics jarg1_, long jarg2);
  public final static native boolean vector_q_grid_metrics_isEmpty(long jarg1, vector_q_grid_metrics jarg1_);
  public final static native void vector_q_grid_metrics_clear(long jarg1, vector_q_grid_metrics jarg1_);
  public final static native void vector_q_grid_metrics_add(long jarg1, vector_q_grid_metrics jarg1_, long jarg2, q_grid_metric jarg2_);
  public final static native long vector_q_grid_metrics_get(long jarg1, vector_q_grid_metrics jarg1_, int jarg2);
  public final static native void vector_q_grid_metrics_set(long jarg1, vector_q_grid_metrics jarg1_, int jarg2, long jarg3, q_grid_metric jarg3_);
  public final static native void delete_vector_q_grid_metrics(long jarg1);
  public final static native int base_registration_metrics_TYPE_get();
  public final static native int base_registration_metrics_LATEST_VERSION_get();
  public final static native long new_base_registration_metrics__SWIG_0(short jarg1);
  public final static native long new_base_registration_metrics__SWIG_1(long jarg1, registration_metric_header jarg1_, short jarg2);
  public final static native long new_base_registration_metrics__SWIG_2(long jarg1, registration_metric_header jarg1_);
  public final static native long new_base_registration_metrics__SWIG_3();
  public final static native long new_base_registration_metrics__SWIG_4(long jarg1, vector_registration_metrics jarg1_, short jarg2, long jarg3, registration_metric_header jarg3_);
  public final static native boolean base_registration_metrics_data_source_exists__SWIG_0(long jarg1, base_registration_metrics jarg1_);
  public final static native void base_registration_metrics_data_source_exists__SWIG_1(long jarg1, base_registration_metrics jarg1_, boolean jarg2);
  public final static native void base_registration_metrics_rebuild_index__SWIG_0(long jarg1, base_registration_metrics jarg1_, boolean jarg2);
  public final static native void base_registration_metrics_rebuild_index__SWIG_1(long jarg1, base_registration_metrics jarg1_);
  public final static native void base_registration_metrics_resize(long jarg1, base_registration_metrics jarg1_, long jarg2);
  public final static native void base_registration_metrics_reserve(long jarg1, base_registration_metrics jarg1_, long jarg2);
  public final static native void base_registration_metrics_trim(long jarg1, base_registration_metrics jarg1_, long jarg2);
  public final static native long base_registration_metrics_find__SWIG_0(long jarg1, base_registration_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_registration_metrics_find__SWIG_1(long jarg1, base_registration_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_registration_metrics_find__SWIG_2(long jarg1, base_registration_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_registration_metrics_has_metric__SWIG_0(long jarg1, base_registration_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_registration_metrics_has_metric__SWIG_1(long jarg1, base_registration_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_registration_metrics_has_metric__SWIG_2(long jarg1, base_registration_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_registration_metrics_insert__SWIG_0(long jarg1, base_registration_metrics jarg1_, long jarg2, registration_metric jarg2_);
  public final static native void base_registration_metrics_insert__SWIG_1(long jarg1, base_registration_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, registration_metric jarg3_);
  public final static native long base_registration_metrics_get_metric__SWIG_0(long jarg1, base_registration_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_registration_metrics_get_metric__SWIG_1(long jarg1, base_registration_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_registration_metrics_get_metric__SWIG_2(long jarg1, base_registration_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_registration_metrics_at(long jarg1, base_registration_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_registration_metrics_set_version(long jarg1, base_registration_metrics jarg1_, short jarg2);
  public final static native long base_registration_metrics_keys(long jarg1, base_registration_metrics jarg1_);
  public final static native long base_registration_metrics_lanes(long jarg1, base_registration_metrics jarg1_);
  public final static native long base_registration_metrics_lane_count(long jarg1, base_registration_metrics jarg1_);
  public final static native long base_registration_metrics_max_lane(long jarg1, base_registration_metrics jarg1_);
  public final static native long base_registration_metrics_tile_numbers_for_lane(long jarg1, base_registration_metrics jarg1_, long jarg2);
  public final static native long base_registration_metrics_tile_numbers(long jarg1, base_registration_metrics jarg1_);
  public final static native long base_registration_metrics_metrics_for_lane__SWIG_0(long jarg1, base_registration_metrics jarg1_, long jarg2);
  public final static native void base_registration_metrics_metrics_for_lane__SWIG_1(long jarg1, base_registration_metrics jarg1_, long jarg2, vector_registration_metrics jarg2_, long jarg3);
  public final static native long base_registration_metrics_cycles(long jarg1, base_registration_metrics jarg1_);
  public final static native long base_registration_metrics_metrics_for_cycle(long jarg1, base_registration_metrics jarg1_, long jarg2);
  public final static native long base_registration_metrics_size(long jarg1, base_registration_metrics jarg1_);
  public final static native boolean base_registration_metrics_empty(long jarg1, base_registration_metrics jarg1_);
  public final static native short base_registration_metrics_version(long jarg1, base_registration_metrics jarg1_);
  public final static native void base_registration_metrics_clear(long jarg1, base_registration_metrics jarg1_);
  public final static native long base_registration_metrics_metrics(long jarg1, base_registration_metrics jarg1_);
  public final static native String base_registration_metrics_prefix();
  public final static native String base_registration_metrics_suffix();
  public final static native long base_registration_metrics_get_metric_ref__SWIG_0(long jarg1, base_registration_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_registration_metrics_get_metric_ref__SWIG_1(long jarg1, base_registration_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_registration_metrics_get_metric_ref__SWIG_2(long jarg1, base_registration_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_registration_metrics(long jarg1);
  public final static native long new_vector_registration_metrics__SWIG_0();
  public final static native long new_vector_registration_metrics__SWIG_1(long jarg1);
  public final static native long vector_registration_metrics_size(long jarg1, vector_registration_metrics jarg1_);
  public final static native long vector_registration_metrics_capacity(long jarg1, vector_registration_metrics jarg1_);
  public final static native void vector_registration_metrics_reserve(long jarg1, vector_registration_metrics jarg1_, long jarg2);
  public final static native boolean vector_registration_metrics_isEmpty(long jarg1, vector_registration_metrics jarg1_);
  public final static native void vector_registration_metrics_clear(long jarg1, vector_registration_metrics jarg1_);
  public final static native void vector_registration_metrics_add(long jarg1, vector_registration_metrics jarg1_, long jarg2, registration_metric jarg2_);
  public final static native long vector_registration_metrics_get(long jarg1, vector_registration_metrics jarg1_, int jarg2);
  public final static native void vector_registration_metrics_set(long jarg1, vector_registration_metrics jarg1_, int jarg2, long jarg3, registration_metric jarg3_);
  public final static native void delete_vector_registration_metrics(long jarg1);
  public final static native int base_run_diagnostics_metrics_TYPE_get();
  public final static native int base_run_diagnostics_metrics_LATEST_VERSION_get();
  public final static native long new_base_run_diagnostics_metrics__SWIG_0(short jarg1);
  public final static native long new_base_run_diagnostics_metrics__SWIG_1(long jarg1, base_cycle_metric_header jarg1_, short jarg2);
  public final static native long new_base_run_diagnostics_metrics__SWIG_2(long jarg1, base_cycle_metric_header jarg1_);
  public final static native long new_base_run_diagnostics_metrics__SWIG_3();
  public final static native long new_base_run_diagnostics_metrics__SWIG_4(long jarg1, vector_run_diagnostics_metrics jarg1_, short jarg2, long jarg3, base_cycle_metric_header jarg3_);
  public final static native boolean base_run_diagnostics_metrics_data_source_exists__SWIG_0(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native void base_run_diagnostics_metrics_data_source_exists__SWIG_1(long jarg1, base_run_diagnostics_metrics jarg1_, boolean jarg2);
  public final static native void base_run_diagnostics_metrics_rebuild_index__SWIG_0(long jarg1, base_run_diagnostics_metrics jarg1_, boolean jarg2);
  public final static native void base_run_diagnostics_metrics_rebuild_index__SWIG_1(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native void base_run_diagnostics_metrics_resize(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2);
  public final static native void base_run_diagnostics_metrics_reserve(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2);
  public final static native void base_run_diagnostics_metrics_trim(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2);
  public final static native long base_run_diagnostics_metrics_find__SWIG_0(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_run_diagnostics_metrics_find__SWIG_1(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_run_diagnostics_metrics_find__SWIG_2(long jarg1, base_run_diagnostics_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_run_diagnostics_metrics_has_metric__SWIG_0(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_run_diagnostics_metrics_has_metric__SWIG_1(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_run_diagnostics_metrics_has_metric__SWIG_2(long jarg1, base_run_diagnostics_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_run_diagnostics_metrics_insert__SWIG_0(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2, run_diagnostics_metric jarg2_);
  public final static native void base_run_diagnostics_metrics_insert__SWIG_1(long jarg1, base_run_diagnostics_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, run_diagnostics_metric jarg3_);
  public final static native long base_run_diagnostics_metrics_get_metric__SWIG_0(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_run_diagnostics_metrics_get_metric__SWIG_1(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_run_diagnostics_metrics_get_metric__SWIG_2(long jarg1, base_run_diagnostics_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_run_diagnostics_metrics_at(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_run_diagnostics_metrics_set_version(long jarg1, base_run_diagnostics_metrics jarg1_, short jarg2);
  public final static native long base_run_diagnostics_metrics_keys(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native long base_run_diagnostics_metrics_lanes(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native long base_run_diagnostics_metrics_lane_count(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native long base_run_diagnostics_metrics_max_lane(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native long base_run_diagnostics_metrics_tile_numbers_for_lane(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2);
  public final static native long base_run_diagnostics_metrics_tile_numbers(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native long base_run_diagnostics_metrics_metrics_for_lane__SWIG_0(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2);
  public final static native void base_run_diagnostics_metrics_metrics_for_lane__SWIG_1(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2, vector_run_diagnostics_metrics jarg2_, long jarg3);
  public final static native long base_run_diagnostics_metrics_cycles(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native long base_run_diagnostics_metrics_metrics_for_cycle(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2);
  public final static native long base_run_diagnostics_metrics_size(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native boolean base_run_diagnostics_metrics_empty(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native short base_run_diagnostics_metrics_version(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native void base_run_diagnostics_metrics_clear(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native long base_run_diagnostics_metrics_metrics(long jarg1, base_run_diagnostics_metrics jarg1_);
  public final static native String base_run_diagnostics_metrics_prefix();
  public final static native String base_run_diagnostics_metrics_suffix();
  public final static native long base_run_diagnostics_metrics_get_metric_ref__SWIG_0(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_run_diagnostics_metrics_get_metric_ref__SWIG_1(long jarg1, base_run_diagnostics_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_run_diagnostics_metrics_get_metric_ref__SWIG_2(long jarg1, base_run_diagnostics_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_run_diagnostics_metrics(long jarg1);
  public final static native long new_vector_run_diagnostics_metrics__SWIG_0();
  public final static native long new_vector_run_diagnostics_metrics__SWIG_1(long jarg1);
  public final static native long vector_run_diagnostics_metrics_size(long jarg1, vector_run_diagnostics_metrics jarg1_);
  public final static native long vector_run_diagnostics_metrics_capacity(long jarg1, vector_run_diagnostics_metrics jarg1_);
  public final static native void vector_run_diagnostics_metrics_reserve(long jarg1, vector_run_diagnostics_metrics jarg1_, long jarg2);
  public final static native boolean vector_run_diagnostics_metrics_isEmpty(long jarg1, vector_run_diagnostics_metrics jarg1_);
  public final static native void vector_run_diagnostics_metrics_clear(long jarg1, vector_run_diagnostics_metrics jarg1_);
  public final static native void vector_run_diagnostics_metrics_add(long jarg1, vector_run_diagnostics_metrics jarg1_, long jarg2, run_diagnostics_metric jarg2_);
  public final static native long vector_run_diagnostics_metrics_get(long jarg1, vector_run_diagnostics_metrics jarg1_, int jarg2);
  public final static native void vector_run_diagnostics_metrics_set(long jarg1, vector_run_diagnostics_metrics jarg1_, int jarg2, long jarg3, run_diagnostics_metric jarg3_);
  public final static native void delete_vector_run_diagnostics_metrics(long jarg1);
  public final static native int base_static_run_metrics_TYPE_get();
  public final static native int base_static_run_metrics_LATEST_VERSION_get();
  public final static native long new_base_static_run_metrics__SWIG_0(short jarg1);
  public final static native long new_base_static_run_metrics__SWIG_1(long jarg1, static_run_metric_header jarg1_, short jarg2);
  public final static native long new_base_static_run_metrics__SWIG_2(long jarg1, static_run_metric_header jarg1_);
  public final static native long new_base_static_run_metrics__SWIG_3();
  public final static native long new_base_static_run_metrics__SWIG_4(long jarg1, vector_static_run_metrics jarg1_, short jarg2, long jarg3, static_run_metric_header jarg3_);
  public final static native boolean base_static_run_metrics_data_source_exists__SWIG_0(long jarg1, base_static_run_metrics jarg1_);
  public final static native void base_static_run_metrics_data_source_exists__SWIG_1(long jarg1, base_static_run_metrics jarg1_, boolean jarg2);
  public final static native void base_static_run_metrics_rebuild_index__SWIG_0(long jarg1, base_static_run_metrics jarg1_, boolean jarg2);
  public final static native void base_static_run_metrics_rebuild_index__SWIG_1(long jarg1, base_static_run_metrics jarg1_);
  public final static native void base_static_run_metrics_resize(long jarg1, base_static_run_metrics jarg1_, long jarg2);
  public final static native void base_static_run_metrics_reserve(long jarg1, base_static_run_metrics jarg1_, long jarg2);
  public final static native void base_static_run_metrics_trim(long jarg1, base_static_run_metrics jarg1_, long jarg2);
  public final static native long base_static_run_metrics_find__SWIG_0(long jarg1, base_static_run_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long base_static_run_metrics_find__SWIG_1(long jarg1, base_static_run_metrics jarg1_, long jarg2, long jarg3);
  public final static native long base_static_run_metrics_find__SWIG_2(long jarg1, base_static_run_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native boolean base_static_run_metrics_has_metric__SWIG_0(long jarg1, base_static_run_metrics jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean base_static_run_metrics_has_metric__SWIG_1(long jarg1, base_static_run_metrics jarg1_, long jarg2, long jarg3);
  public final static native boolean base_static_run_metrics_has_metric__SWIG_2(long jarg1, base_static_run_metrics jarg1_, java.math.BigInteger jarg2);
  public final static native void base_static_run_metrics_insert__SWIG_0(long jarg1, base_static_run_metrics jarg1_, long jarg2, static_run_metric jarg2_);
  public final static native void base_static_run_metrics_insert__SWIG_1(long jarg1, base_static_run_metrics jarg1_, java.math.BigInteger jarg2, long jarg3, static_run_metric jarg3_);
  public final static native long base_static_run_metrics_get_metric__SWIG_0(long jarg1, base_static_run_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_static_run_metrics_get_metric__SWIG_1(long jarg1, base_static_run_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_static_run_metrics_get_metric__SWIG_2(long jarg1, base_static_run_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native long base_static_run_metrics_at(long jarg1, base_static_run_metrics jarg1_, long jarg2) throws index_out_of_bounds_exception;
  public final static native void base_static_run_metrics_set_version(long jarg1, base_static_run_metrics jarg1_, short jarg2);
  public final static native long base_static_run_metrics_keys(long jarg1, base_static_run_metrics jarg1_);
  public final static native long base_static_run_metrics_lanes(long jarg1, base_static_run_metrics jarg1_);
  public final static native long base_static_run_metrics_lane_count(long jarg1, base_static_run_metrics jarg1_);
  public final static native long base_static_run_metrics_max_lane(long jarg1, base_static_run_metrics jarg1_);
  public final static native long base_static_run_metrics_tile_numbers_for_lane(long jarg1, base_static_run_metrics jarg1_, long jarg2);
  public final static native long base_static_run_metrics_tile_numbers(long jarg1, base_static_run_metrics jarg1_);
  public final static native long base_static_run_metrics_metrics_for_lane__SWIG_0(long jarg1, base_static_run_metrics jarg1_, long jarg2);
  public final static native void base_static_run_metrics_metrics_for_lane__SWIG_1(long jarg1, base_static_run_metrics jarg1_, long jarg2, vector_static_run_metrics jarg2_, long jarg3);
  public final static native long base_static_run_metrics_cycles(long jarg1, base_static_run_metrics jarg1_);
  public final static native long base_static_run_metrics_metrics_for_cycle(long jarg1, base_static_run_metrics jarg1_, long jarg2);
  public final static native long base_static_run_metrics_size(long jarg1, base_static_run_metrics jarg1_);
  public final static native boolean base_static_run_metrics_empty(long jarg1, base_static_run_metrics jarg1_);
  public final static native short base_static_run_metrics_version(long jarg1, base_static_run_metrics jarg1_);
  public final static native void base_static_run_metrics_clear(long jarg1, base_static_run_metrics jarg1_);
  public final static native long base_static_run_metrics_metrics(long jarg1, base_static_run_metrics jarg1_);
  public final static native String base_static_run_metrics_prefix();
  public final static native String base_static_run_metrics_suffix();
  public final static native long base_static_run_metrics_get_metric_ref__SWIG_0(long jarg1, base_static_run_metrics jarg1_, long jarg2, long jarg3, long jarg4) throws index_out_of_bounds_exception;
  public final static native long base_static_run_metrics_get_metric_ref__SWIG_1(long jarg1, base_static_run_metrics jarg1_, long jarg2, long jarg3) throws index_out_of_bounds_exception;
  public final static native long base_static_run_metrics_get_metric_ref__SWIG_2(long jarg1, base_static_run_metrics jarg1_, java.math.BigInteger jarg2) throws index_out_of_bounds_exception;
  public final static native void delete_base_static_run_metrics(long jarg1);
  public final static native long new_vector_static_run_metrics__SWIG_0();
  public final static native long new_vector_static_run_metrics__SWIG_1(long jarg1);
  public final static native long vector_static_run_metrics_size(long jarg1, vector_static_run_metrics jarg1_);
  public final static native long vector_static_run_metrics_capacity(long jarg1, vector_static_run_metrics jarg1_);
  public final static native void vector_static_run_metrics_reserve(long jarg1, vector_static_run_metrics jarg1_, long jarg2);
  public final static native boolean vector_static_run_metrics_isEmpty(long jarg1, vector_static_run_metrics jarg1_);
  public final static native void vector_static_run_metrics_clear(long jarg1, vector_static_run_metrics jarg1_);
  public final static native void vector_static_run_metrics_add(long jarg1, vector_static_run_metrics jarg1_, long jarg2, static_run_metric jarg2_);
  public final static native long vector_static_run_metrics_get(long jarg1, vector_static_run_metrics jarg1_, int jarg2);
  public final static native void vector_static_run_metrics_set(long jarg1, vector_static_run_metrics jarg1_, int jarg2, long jarg3, static_run_metric jarg3_);
  public final static native void delete_vector_static_run_metrics(long jarg1);
  public final static native long index_out_of_bounds_exception_SWIGUpcast(long jarg1);
  public final static native long base_metric_header_SWIGUpcast(long jarg1);
  public final static native long base_metric_SWIGUpcast(long jarg1);
  public final static native long base_cycle_metric_header_SWIGUpcast(long jarg1);
  public final static native long base_cycle_metric_SWIGUpcast(long jarg1);
  public final static native long base_read_metric_header_SWIGUpcast(long jarg1);
  public final static native long base_read_metric_SWIGUpcast(long jarg1);
  public final static native long base_static_run_metric_header_SWIGUpcast(long jarg1);
  public final static native long base_static_run_metric_SWIGUpcast(long jarg1);
  public final static native long base_event_metric_header_SWIGUpcast(long jarg1);
  public final static native long base_event_metric_SWIGUpcast(long jarg1);
  public final static native long corrected_intensity_metric_SWIGUpcast(long jarg1);
  public final static native long error_metric_SWIGUpcast(long jarg1);
  public final static native long extraction_metric_header_SWIGUpcast(long jarg1);
  public final static native long extraction_metric_SWIGUpcast(long jarg1);
  public final static native long image_metric_header_SWIGUpcast(long jarg1);
  public final static native long image_metric_SWIGUpcast(long jarg1);
  public final static native long q_score_header_SWIGUpcast(long jarg1);
  public final static native long q_metric_SWIGUpcast(long jarg1);
  public final static native long tile_metric_header_SWIGUpcast(long jarg1);
  public final static native long tile_metric_SWIGUpcast(long jarg1);
  public final static native long index_metric_header_SWIGUpcast(long jarg1);
  public final static native long index_metric_SWIGUpcast(long jarg1);
  public final static native long q_collapsed_header_SWIGUpcast(long jarg1);
  public final static native long q_collapsed_metric_SWIGUpcast(long jarg1);
  public final static native long q_by_lane_metric_SWIGUpcast(long jarg1);
  public final static native long base_corrected_intensity_metrics_SWIGUpcast(long jarg1);
  public final static native long base_error_metrics_SWIGUpcast(long jarg1);
  public final static native long base_extraction_metrics_SWIGUpcast(long jarg1);
  public final static native long base_image_metrics_SWIGUpcast(long jarg1);
  public final static native long base_q_metrics_SWIGUpcast(long jarg1);
  public final static native long base_tile_metrics_SWIGUpcast(long jarg1);
  public final static native long base_index_metrics_SWIGUpcast(long jarg1);
  public final static native long base_q_collapsed_metrics_SWIGUpcast(long jarg1);
  public final static native long base_q_by_lane_metrics_SWIGUpcast(long jarg1);
  public final static native long alignment_metric_SWIGUpcast(long jarg1);
  public final static native long basecalling_metric_header_SWIGUpcast(long jarg1);
  public final static native long basecalling_metric_SWIGUpcast(long jarg1);
  public final static native long color_matrix_metric_header_SWIGUpcast(long jarg1);
  public final static native long color_matrix_metric_SWIGUpcast(long jarg1);
  public final static native long distortion_metric_header_SWIGUpcast(long jarg1);
  public final static native long distortion_metric_SWIGUpcast(long jarg1);
  public final static native long dynamic_phasing_metric_SWIGUpcast(long jarg1);
  public final static native long event_metric_SWIGUpcast(long jarg1);
  public final static native long extended_tile_metric_SWIGUpcast(long jarg1);
  public final static native long fwhm_grid_metric_header_SWIGUpcast(long jarg1);
  public final static native long fwhm_grid_metric_SWIGUpcast(long jarg1);
  public final static native long pf_grid_metric_header_SWIGUpcast(long jarg1);
  public final static native long pf_grid_metric_SWIGUpcast(long jarg1);
  public final static native long phasing_metric_SWIGUpcast(long jarg1);
  public final static native long q_grid_metric_header_SWIGUpcast(long jarg1);
  public final static native long q_grid_metric_SWIGUpcast(long jarg1);
  public final static native long registration_metric_header_SWIGUpcast(long jarg1);
  public final static native long registration_metric_SWIGUpcast(long jarg1);
  public final static native long run_diagnostics_metric_SWIGUpcast(long jarg1);
  public final static native long static_run_metric_header_SWIGUpcast(long jarg1);
  public final static native long static_run_metric_SWIGUpcast(long jarg1);
  public final static native long base_alignment_metrics_SWIGUpcast(long jarg1);
  public final static native long base_basecalling_metrics_SWIGUpcast(long jarg1);
  public final static native long base_color_matrix_metrics_SWIGUpcast(long jarg1);
  public final static native long base_distortion_metrics_SWIGUpcast(long jarg1);
  public final static native long base_dynamic_phasing_metrics_SWIGUpcast(long jarg1);
  public final static native long base_event_metrics_SWIGUpcast(long jarg1);
  public final static native long base_extended_tile_metrics_SWIGUpcast(long jarg1);
  public final static native long base_fwhm_grid_metrics_SWIGUpcast(long jarg1);
  public final static native long base_pf_grid_metrics_SWIGUpcast(long jarg1);
  public final static native long base_phasing_metrics_SWIGUpcast(long jarg1);
  public final static native long base_q_grid_metrics_SWIGUpcast(long jarg1);
  public final static native long base_registration_metrics_SWIGUpcast(long jarg1);
  public final static native long base_run_diagnostics_metrics_SWIGUpcast(long jarg1);
  public final static native long base_static_run_metrics_SWIGUpcast(long jarg1);
}
