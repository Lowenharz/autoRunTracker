/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public final class plot_types {
  public final static plot_types FlowcellPlot = new plot_types("FlowcellPlot");
  public final static plot_types ByCyclePlot = new plot_types("ByCyclePlot");
  public final static plot_types ByLanePlot = new plot_types("ByLanePlot");
  public final static plot_types QHistogramPlot = new plot_types("QHistogramPlot");
  public final static plot_types QHeatmapPlot = new plot_types("QHeatmapPlot");
  public final static plot_types SampleQCPlot = new plot_types("SampleQCPlot");
  public final static plot_types DistortionByTilePlot = new plot_types("DistortionByTilePlot");
  public final static plot_types SubTileAggregateXPlot = new plot_types("SubTileAggregateXPlot");
  public final static plot_types SubTileAggregateYPlot = new plot_types("SubTileAggregateYPlot");
  public final static plot_types SubTileFlowCellPlot = new plot_types("SubTileFlowCellPlot");
  public final static plot_types EventByCyclePlot = new plot_types("EventByCyclePlot");
  public final static plot_types EventByTypePlot = new plot_types("EventByTypePlot");
  public final static plot_types UnknownPlotType = new plot_types("UnknownPlotType", interop_runJNI.UnknownPlotType_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static plot_types swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + plot_types.class + " with value " + swigValue);
  }

  private plot_types(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private plot_types(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private plot_types(String swigName, plot_types swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static plot_types[] swigValues = { FlowcellPlot, ByCyclePlot, ByLanePlot, QHistogramPlot, QHeatmapPlot, SampleQCPlot, DistortionByTilePlot, SubTileAggregateXPlot, SubTileAggregateYPlot, SubTileFlowCellPlot, EventByCyclePlot, EventByTypePlot, UnknownPlotType };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

