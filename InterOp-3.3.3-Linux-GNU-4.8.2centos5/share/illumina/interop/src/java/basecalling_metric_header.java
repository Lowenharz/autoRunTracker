/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class basecalling_metric_header extends base_cycle_metric_header {
  private transient long swigCPtr;

  protected basecalling_metric_header(long cPtr, boolean cMemoryOwn) {
    super(interop_metricsJNI.basecalling_metric_header_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(basecalling_metric_header obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_metricsJNI.delete_basecalling_metric_header(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public basecalling_metric_header(short info_level) {
    this(interop_metricsJNI.new_basecalling_metric_header(info_level), true);
  }

  public short info_level() {
    return interop_metricsJNI.basecalling_metric_header_info_level(swigCPtr, this);
  }

  public boolean has_covariances() {
    return interop_metricsJNI.basecalling_metric_header_has_covariances(swigCPtr, this);
  }

  public boolean has_weights() {
    return interop_metricsJNI.basecalling_metric_header_has_weights(swigCPtr, this);
  }

  public boolean has_determinant() {
    return interop_metricsJNI.basecalling_metric_header_has_determinant(swigCPtr, this);
  }

  public void clear() {
    interop_metricsJNI.basecalling_metric_header_clear(swigCPtr, this);
  }

  public static basecalling_metric_header default_header() {
    return new basecalling_metric_header(interop_metricsJNI.basecalling_metric_header_default_header(), true);
  }

  public final static class info_type {
    public final static basecalling_metric_header.info_type CENTROIDS = new basecalling_metric_header.info_type("CENTROIDS", interop_metricsJNI.basecalling_metric_header_CENTROIDS_get());
    public final static basecalling_metric_header.info_type COVARIANCES = new basecalling_metric_header.info_type("COVARIANCES", interop_metricsJNI.basecalling_metric_header_COVARIANCES_get());
    public final static basecalling_metric_header.info_type WEIGHTS = new basecalling_metric_header.info_type("WEIGHTS", interop_metricsJNI.basecalling_metric_header_WEIGHTS_get());
    public final static basecalling_metric_header.info_type DETERMINANT = new basecalling_metric_header.info_type("DETERMINANT", interop_metricsJNI.basecalling_metric_header_DETERMINANT_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static info_type swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + info_type.class + " with value " + swigValue);
    }

    private info_type(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private info_type(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private info_type(String swigName, info_type swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static info_type[] swigValues = { CENTROIDS, COVARIANCES, WEIGHTS, DETERMINANT };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
