/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class q_metric extends base_cycle_metric {
  private transient long swigCPtr;

  protected q_metric(long cPtr, boolean cMemoryOwn) {
    super(interop_metricsJNI.q_metric_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(q_metric obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_metricsJNI.delete_q_metric(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public q_metric() {
    this(interop_metricsJNI.new_q_metric__SWIG_0(), true);
  }

  public q_metric(q_score_header header) {
    this(interop_metricsJNI.new_q_metric__SWIG_1(q_score_header.getCPtr(header), header), true);
  }

  public q_metric(long lane, long tile, long cycle, uint_vector qscore_hist) {
    this(interop_metricsJNI.new_q_metric__SWIG_2(lane, tile, cycle, uint_vector.getCPtr(qscore_hist), qscore_hist), true);
  }

  public q_metric(long lane, long tile, long cycle, int[] qscore_hist, long count) {
    this(interop_metricsJNI.new_q_metric__SWIG_3(lane, tile, cycle, qscore_hist, count), true);
  }

  public void set(long lane, long tile, long cycle, uint_vector qscore_hist) {
    interop_metricsJNI.q_metric_set(swigCPtr, this, lane, tile, cycle, uint_vector.getCPtr(qscore_hist), qscore_hist);
  }

  public long qscore_hist(long n) throws index_out_of_bounds_exception {
    return interop_metricsJNI.q_metric_qscore_hist__SWIG_0(swigCPtr, this, n);
  }

  public uint_vector qscore_hist() {
    return new uint_vector(interop_metricsJNI.q_metric_qscore_hist__SWIG_1(swigCPtr, this), false);
  }

  public long size() {
    return interop_metricsJNI.q_metric_size(swigCPtr, this);
  }

  public long sum_qscore() {
    return interop_metricsJNI.q_metric_sum_qscore(swigCPtr, this);
  }

  public java.math.BigInteger sum_qscore_cumulative() {
    return interop_metricsJNI.q_metric_sum_qscore_cumulative(swigCPtr, this);
  }

  public long total_over_qscore(long qscore, q_score_bin_vector bins) {
    return interop_metricsJNI.q_metric_total_over_qscore__SWIG_0(swigCPtr, this, qscore, q_score_bin_vector.getCPtr(bins), bins);
  }

  public long total_over_qscore(long qscore_index) {
    return interop_metricsJNI.q_metric_total_over_qscore__SWIG_1(swigCPtr, this, qscore_index);
  }

  public java.math.BigInteger total_over_qscore_cumulative(long qscore_index) {
    return interop_metricsJNI.q_metric_total_over_qscore_cumulative__SWIG_0(swigCPtr, this, qscore_index);
  }

  public float percent_over_qscore(long qscore_index) {
    return interop_metricsJNI.q_metric_percent_over_qscore__SWIG_0(swigCPtr, this, qscore_index);
  }

  public float percent_over_qscore_cumulative(long qscore_index) {
    return interop_metricsJNI.q_metric_percent_over_qscore_cumulative__SWIG_0(swigCPtr, this, qscore_index);
  }

  public java.math.BigInteger total_over_qscore_cumulative(long qscore, q_score_bin_vector bins) {
    return interop_metricsJNI.q_metric_total_over_qscore_cumulative__SWIG_1(swigCPtr, this, qscore, q_score_bin_vector.getCPtr(bins), bins);
  }

  public float percent_over_qscore(long qscore_index, q_score_bin_vector bins) {
    return interop_metricsJNI.q_metric_percent_over_qscore__SWIG_1(swigCPtr, this, qscore_index, q_score_bin_vector.getCPtr(bins), bins);
  }

  public float percent_over_qscore_cumulative(long qscore, q_score_bin_vector bins) {
    return interop_metricsJNI.q_metric_percent_over_qscore_cumulative__SWIG_1(swigCPtr, this, qscore, q_score_bin_vector.getCPtr(bins), bins);
  }

  public long median(q_score_bin_vector bins) {
    return interop_metricsJNI.q_metric_median__SWIG_0(swigCPtr, this, q_score_bin_vector.getCPtr(bins), bins);
  }

  public long median() {
    return interop_metricsJNI.q_metric_median__SWIG_1(swigCPtr, this);
  }

  public boolean is_cumulative_empty() {
    return interop_metricsJNI.q_metric_is_cumulative_empty(swigCPtr, this);
  }

  public void accumulate(q_metric metric) {
    interop_metricsJNI.q_metric_accumulate(swigCPtr, this, q_metric.getCPtr(metric), metric);
  }

  public void compress(q_score_header header) {
    interop_metricsJNI.q_metric_compress(swigCPtr, this, q_score_header.getCPtr(header), header);
  }

  public long qscoreHist(long n) {
    return interop_metricsJNI.q_metric_qscoreHist__SWIG_0(swigCPtr, this, n);
  }

  public uint_vector qscoreHist() {
    return new uint_vector(interop_metricsJNI.q_metric_qscoreHist__SWIG_1(swigCPtr, this), false);
  }

  public static String prefix() {
    return interop_metricsJNI.q_metric_prefix();
  }

  public final static int TYPE = interop_metricsJNI.q_metric_TYPE_get();
  public final static int LATEST_VERSION = interop_metricsJNI.q_metric_LATEST_VERSION_get();

  public final static int MAX_Q_BINS = interop_metricsJNI.q_metric_MAX_Q_BINS_get();

}
