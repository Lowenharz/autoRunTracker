/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public final class metric_group {
  public final static metric_group CorrectedInt = new metric_group("CorrectedInt");
  public final static metric_group Error = new metric_group("Error");
  public final static metric_group Extraction = new metric_group("Extraction");
  public final static metric_group Image = new metric_group("Image");
  public final static metric_group Index = new metric_group("Index");
  public final static metric_group Q = new metric_group("Q");
  public final static metric_group Tile = new metric_group("Tile");
  public final static metric_group QByLane = new metric_group("QByLane");
  public final static metric_group QCollapsed = new metric_group("QCollapsed");
  public final static metric_group EmpiricalPhasing = new metric_group("EmpiricalPhasing");
  public final static metric_group DynamicPhasing = new metric_group("DynamicPhasing");
  public final static metric_group ExtendedTile = new metric_group("ExtendedTile");
  public final static metric_group Event = new metric_group("Event");
  public final static metric_group Registration = new metric_group("Registration");
  public final static metric_group BaseCalling = new metric_group("BaseCalling");
  public final static metric_group Alignment = new metric_group("Alignment");
  public final static metric_group PFGrid = new metric_group("PFGrid");
  public final static metric_group QGrid = new metric_group("QGrid");
  public final static metric_group FWHMGrid = new metric_group("FWHMGrid");
  public final static metric_group StaticRun = new metric_group("StaticRun");
  public final static metric_group ColorMatrix = new metric_group("ColorMatrix");
  public final static metric_group OpticalModel = new metric_group("OpticalModel");
  public final static metric_group RunDiagnostics = new metric_group("RunDiagnostics");
  public final static metric_group MetricCount = new metric_group("MetricCount");
  public final static metric_group UnknownMetricGroup = new metric_group("UnknownMetricGroup", interop_runJNI.UnknownMetricGroup_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static metric_group swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + metric_group.class + " with value " + swigValue);
  }

  private metric_group(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private metric_group(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private metric_group(String swigName, metric_group swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static metric_group[] swigValues = { CorrectedInt, Error, Extraction, Image, Index, Q, Tile, QByLane, QCollapsed, EmpiricalPhasing, DynamicPhasing, ExtendedTile, Event, Registration, BaseCalling, Alignment, PFGrid, QGrid, FWHMGrid, StaticRun, ColorMatrix, OpticalModel, RunDiagnostics, MetricCount, UnknownMetricGroup };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

