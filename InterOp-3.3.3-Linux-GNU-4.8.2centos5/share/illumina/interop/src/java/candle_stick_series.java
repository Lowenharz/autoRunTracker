/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class candle_stick_series extends candle_stick_collection {
  private transient long swigCPtr;

  protected candle_stick_series(long cPtr, boolean cMemoryOwn) {
    super(interop_plotJNI.candle_stick_series_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(candle_stick_series obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_plotJNI.delete_candle_stick_series(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public candle_stick_series(String title, String color, candle_stick_series.series_types series_type) {
    this(interop_plotJNI.new_candle_stick_series__SWIG_0(title, color, series_type.swigValue()), true);
  }

  public candle_stick_series(String title, String color) {
    this(interop_plotJNI.new_candle_stick_series__SWIG_1(title, color), true);
  }

  public candle_stick_series(String title) {
    this(interop_plotJNI.new_candle_stick_series__SWIG_2(title), true);
  }

  public candle_stick_series() {
    this(interop_plotJNI.new_candle_stick_series__SWIG_3(), true);
  }

  public String title() {
    return interop_plotJNI.candle_stick_series_title(swigCPtr, this);
  }

  public String color() {
    return interop_plotJNI.candle_stick_series_color__SWIG_0(swigCPtr, this);
  }

  public candle_stick_series.series_types series_type() {
    return candle_stick_series.series_types.swigToEnum(interop_plotJNI.candle_stick_series_series_type(swigCPtr, this));
  }

  public string_vector options() {
    return new string_vector(interop_plotJNI.candle_stick_series_options(swigCPtr, this), false);
  }

  public void add_option(String option) {
    interop_plotJNI.candle_stick_series_add_option(swigCPtr, this, option);
  }

  public void color(String color_name) {
    interop_plotJNI.candle_stick_series_color__SWIG_1(swigCPtr, this, color_name);
  }

  public final static class series_types {
    public final static candle_stick_series.series_types Candlestick = new candle_stick_series.series_types("Candlestick");
    public final static candle_stick_series.series_types Line = new candle_stick_series.series_types("Line");
    public final static candle_stick_series.series_types Bar = new candle_stick_series.series_types("Bar");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static series_types swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + series_types.class + " with value " + swigValue);
    }

    private series_types(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private series_types(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private series_types(String swigName, series_types swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static series_types[] swigValues = { Candlestick, Line, Bar };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
