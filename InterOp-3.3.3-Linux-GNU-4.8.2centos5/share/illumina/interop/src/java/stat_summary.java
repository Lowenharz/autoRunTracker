/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class stat_summary {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected stat_summary(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(stat_summary obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_summaryJNI.delete_stat_summary(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public stat_summary(long channel_count) {
    this(interop_summaryJNI.new_stat_summary(channel_count), true);
  }

  public float percent_gt_q30() {
    return interop_summaryJNI.stat_summary_percent_gt_q30__SWIG_0(swigCPtr, this);
  }

  public float yield_g() {
    return interop_summaryJNI.stat_summary_yield_g__SWIG_0(swigCPtr, this);
  }

  public float projected_yield_g() {
    return interop_summaryJNI.stat_summary_projected_yield_g__SWIG_0(swigCPtr, this);
  }

  public float reads() {
    return interop_summaryJNI.stat_summary_reads__SWIG_0(swigCPtr, this);
  }

  public float reads_pf() {
    return interop_summaryJNI.stat_summary_reads_pf__SWIG_0(swigCPtr, this);
  }

  public metric_stat density() {
    return new metric_stat(interop_summaryJNI.stat_summary_density__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat density_pf() {
    return new metric_stat(interop_summaryJNI.stat_summary_density_pf__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat cluster_count() {
    return new metric_stat(interop_summaryJNI.stat_summary_cluster_count__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat cluster_count_pf() {
    return new metric_stat(interop_summaryJNI.stat_summary_cluster_count_pf__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat percent_pf() {
    return new metric_stat(interop_summaryJNI.stat_summary_percent_pf__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat phasing() {
    return new metric_stat(interop_summaryJNI.stat_summary_phasing__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat prephasing() {
    return new metric_stat(interop_summaryJNI.stat_summary_prephasing__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat percent_aligned() {
    return new metric_stat(interop_summaryJNI.stat_summary_percent_aligned__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat error_rate() {
    return new metric_stat(interop_summaryJNI.stat_summary_error_rate__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat error_rate_35() {
    return new metric_stat(interop_summaryJNI.stat_summary_error_rate_35__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat error_rate_50() {
    return new metric_stat(interop_summaryJNI.stat_summary_error_rate_50__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat error_rate_75() {
    return new metric_stat(interop_summaryJNI.stat_summary_error_rate_75__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat error_rate_100() {
    return new metric_stat(interop_summaryJNI.stat_summary_error_rate_100__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat first_cycle_intensity() {
    return new metric_stat(interop_summaryJNI.stat_summary_first_cycle_intensity__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat phasing_slope() {
    return new metric_stat(interop_summaryJNI.stat_summary_phasing_slope__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat phasing_offset() {
    return new metric_stat(interop_summaryJNI.stat_summary_phasing_offset__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat prephasing_slope() {
    return new metric_stat(interop_summaryJNI.stat_summary_prephasing_slope__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat prephasing_offset() {
    return new metric_stat(interop_summaryJNI.stat_summary_prephasing_offset__SWIG_0(swigCPtr, this), false);
  }

  public void percent_gt_q30(float val) {
    interop_summaryJNI.stat_summary_percent_gt_q30__SWIG_1(swigCPtr, this, val);
  }

  public void yield_g(float val) {
    interop_summaryJNI.stat_summary_yield_g__SWIG_1(swigCPtr, this, val);
  }

  public void projected_yield_g(float val) {
    interop_summaryJNI.stat_summary_projected_yield_g__SWIG_1(swigCPtr, this, val);
  }

  public void reads(float val) {
    interop_summaryJNI.stat_summary_reads__SWIG_1(swigCPtr, this, val);
  }

  public void reads_pf(float val) {
    interop_summaryJNI.stat_summary_reads_pf__SWIG_1(swigCPtr, this, val);
  }

  public void density(metric_stat stat) {
    interop_summaryJNI.stat_summary_density__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void density_pf(metric_stat stat) {
    interop_summaryJNI.stat_summary_density_pf__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void cluster_count(metric_stat stat) {
    interop_summaryJNI.stat_summary_cluster_count__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void cluster_count_pf(metric_stat stat) {
    interop_summaryJNI.stat_summary_cluster_count_pf__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void percent_pf(metric_stat stat) {
    interop_summaryJNI.stat_summary_percent_pf__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void phasing(metric_stat stat) {
    interop_summaryJNI.stat_summary_phasing__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void prephasing(metric_stat stat) {
    interop_summaryJNI.stat_summary_prephasing__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void percent_aligned(metric_stat stat) {
    interop_summaryJNI.stat_summary_percent_aligned__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void error_rate(metric_stat stat) {
    interop_summaryJNI.stat_summary_error_rate__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void error_rate_35(metric_stat stat) {
    interop_summaryJNI.stat_summary_error_rate_35__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void error_rate_50(metric_stat stat) {
    interop_summaryJNI.stat_summary_error_rate_50__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void error_rate_75(metric_stat stat) {
    interop_summaryJNI.stat_summary_error_rate_75__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void error_rate_100(metric_stat stat) {
    interop_summaryJNI.stat_summary_error_rate_100__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void first_cycle_intensity(metric_stat stat) {
    interop_summaryJNI.stat_summary_first_cycle_intensity__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public float percent_gt_q30_last_10_cycles() {
    return interop_summaryJNI.stat_summary_percent_gt_q30_last_10_cycles__SWIG_0(swigCPtr, this);
  }

  public float percent_occupied() {
    return interop_summaryJNI.stat_summary_percent_occupied__SWIG_0(swigCPtr, this);
  }

  public metric_stat theta_z() {
    return new metric_stat(interop_summaryJNI.stat_summary_theta_z__SWIG_0(swigCPtr, this), false);
  }

  public metric_stat theta() {
    return new metric_stat(interop_summaryJNI.stat_summary_theta__SWIG_0(swigCPtr, this), false);
  }

  public void phasing_slope(metric_stat stat) {
    interop_summaryJNI.stat_summary_phasing_slope__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void phasing_offset(metric_stat stat) {
    interop_summaryJNI.stat_summary_phasing_offset__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void prephasing_slope(metric_stat stat) {
    interop_summaryJNI.stat_summary_prephasing_slope__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void prephasing_offset(metric_stat stat) {
    interop_summaryJNI.stat_summary_prephasing_offset__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public float_vector fwhm() {
    return new float_vector(interop_summaryJNI.stat_summary_fwhm__SWIG_0(swigCPtr, this), false);
  }

  public float_vector percent_base() {
    return new float_vector(interop_summaryJNI.stat_summary_percent_base__SWIG_0(swigCPtr, this), false);
  }

  public void percent_gt_q30_last_10_cycles(float val) {
    interop_summaryJNI.stat_summary_percent_gt_q30_last_10_cycles__SWIG_1(swigCPtr, this, val);
  }

  public void fwhm(long channel, float val) {
    interop_summaryJNI.stat_summary_fwhm__SWIG_1(swigCPtr, this, channel, val);
  }

  public void percent_base(long index, float val) {
    interop_summaryJNI.stat_summary_percent_base__SWIG_1(swigCPtr, this, index, val);
  }

  public void percent_occupied(float val) {
    interop_summaryJNI.stat_summary_percent_occupied__SWIG_1(swigCPtr, this, val);
  }

  public void theta_z(metric_stat stat) {
    interop_summaryJNI.stat_summary_theta_z__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void theta(metric_stat stat) {
    interop_summaryJNI.stat_summary_theta__SWIG_1(swigCPtr, this, metric_stat.getCPtr(stat), stat);
  }

  public void resize_stat(long channel_count) {
    interop_summaryJNI.stat_summary_resize_stat(swigCPtr, this, channel_count);
  }

}
