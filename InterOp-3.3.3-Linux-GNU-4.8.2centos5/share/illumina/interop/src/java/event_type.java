/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public final class event_type {
  public final static event_type RtaStarted = new event_type("RtaStarted");
  public final static event_type CycleStarted = new event_type("CycleStarted");
  public final static event_type TemplateGenerationStarted = new event_type("TemplateGenerationStarted");
  public final static event_type TemplateGenerationCompleted = new event_type("TemplateGenerationCompleted");
  public final static event_type PostTemplateMaxClustersInit = new event_type("PostTemplateMaxClustersInit");
  public final static event_type SystemMemoryAvailableGigabyte = new event_type("SystemMemoryAvailableGigabyte");
  public final static event_type RegistrationAndExtraction = new event_type("RegistrationAndExtraction");
  public final static event_type NeighborCorrection = new event_type("NeighborCorrection");
  public final static event_type ColorMatrixCorrection = new event_type("ColorMatrixCorrection");
  public final static event_type TemplateGeneration = new event_type("TemplateGeneration");
  public final static event_type BasecallingAndQualityScoring = new event_type("BasecallingAndQualityScoring");
  public final static event_type SequenceAlignment = new event_type("SequenceAlignment");
  public final static event_type BclWriting = new event_type("BclWriting");
  public final static event_type ReadStarted = new event_type("ReadStarted");
  public final static event_type ReadCompleted = new event_type("ReadCompleted");
  public final static event_type FilterAlignStarted = new event_type("FilterAlignStarted");
  public final static event_type FilterAlignCompleted = new event_type("FilterAlignCompleted");
  public final static event_type CycleCompleted = new event_type("CycleCompleted");
  public final static event_type RtaCompleted = new event_type("RtaCompleted");
  public final static event_type IntensityFileReading = new event_type("IntensityFileReading");
  public final static event_type IntensityFileWriting = new event_type("IntensityFileWriting");
  public final static event_type TemplateGenerationImageStored = new event_type("TemplateGenerationImageStored");
  public final static event_type RegistrationDuration = new event_type("RegistrationDuration");
  public final static event_type ExtractionDuration = new event_type("ExtractionDuration");
  public final static event_type SpatialNormalizationDuration = new event_type("SpatialNormalizationDuration");
  public final static event_type PhasingCorrectionDuration = new event_type("PhasingCorrectionDuration");
  public final static event_type RtaReadyToProcess = new event_type("RtaReadyToProcess");
  public final static event_type CalibrateDistortionDuration = new event_type("CalibrateDistortionDuration");
  public final static event_type FocusEstimationDuration = new event_type("FocusEstimationDuration");
  public final static event_type AddBCLDuration = new event_type("AddBCLDuration");
  public final static event_type AddFilterFileDuration = new event_type("AddFilterFileDuration");
  public final static event_type WriteThumbNailDuration = new event_type("WriteThumbNailDuration");
  public final static event_type WriteFullImageDuration = new event_type("WriteFullImageDuration");
  public final static event_type SharpeningDuration = new event_type("SharpeningDuration");
  public final static event_type BasecallReportingDuration = new event_type("BasecallReportingDuration");
  public final static event_type EventTypeCount = new event_type("EventTypeCount");
  public final static event_type BasecallingAndQualityScoringDuration = new event_type("BasecallingAndQualityScoringDuration", interop_runJNI.BasecallingAndQualityScoringDuration_get());
  public final static event_type SequenceAlignmentDuration = new event_type("SequenceAlignmentDuration", interop_runJNI.SequenceAlignmentDuration_get());
  public final static event_type UnknownEvent = new event_type("UnknownEvent", interop_runJNI.UnknownEvent_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static event_type swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + event_type.class + " with value " + swigValue);
  }

  private event_type(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private event_type(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private event_type(String swigName, event_type swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static event_type[] swigValues = { RtaStarted, CycleStarted, TemplateGenerationStarted, TemplateGenerationCompleted, PostTemplateMaxClustersInit, SystemMemoryAvailableGigabyte, RegistrationAndExtraction, NeighborCorrection, ColorMatrixCorrection, TemplateGeneration, BasecallingAndQualityScoring, SequenceAlignment, BclWriting, ReadStarted, ReadCompleted, FilterAlignStarted, FilterAlignCompleted, CycleCompleted, RtaCompleted, IntensityFileReading, IntensityFileWriting, TemplateGenerationImageStored, RegistrationDuration, ExtractionDuration, SpatialNormalizationDuration, PhasingCorrectionDuration, RtaReadyToProcess, CalibrateDistortionDuration, FocusEstimationDuration, AddBCLDuration, AddFilterFileDuration, WriteThumbNailDuration, WriteFullImageDuration, SharpeningDuration, BasecallReportingDuration, EventTypeCount, BasecallingAndQualityScoringDuration, SequenceAlignmentDuration, UnknownEvent };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

