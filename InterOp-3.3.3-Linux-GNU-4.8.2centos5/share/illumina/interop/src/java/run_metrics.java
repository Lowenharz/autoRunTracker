/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class run_metrics {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected run_metrics(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(run_metrics obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_run_metricsJNI.delete_run_metrics(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public run_metrics() {
    this(interop_run_metricsJNI.new_run_metrics__SWIG_0(), true);
  }

  public run_metrics(info run_info, parameters run_param) {
    this(interop_run_metricsJNI.new_run_metrics__SWIG_1(info.getCPtr(run_info), run_info, parameters.getCPtr(run_param), run_param), true);
  }

  public run_metrics(info run_info) {
    this(interop_run_metricsJNI.new_run_metrics__SWIG_2(info.getCPtr(run_info), run_info), true);
  }

  public void read(String run_folder, long thread_count) throws xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception, file_not_found_exception, bad_format_exception, incomplete_file_exception, invalid_channel_exception, index_out_of_bounds_exception, invalid_tile_naming_method, invalid_tile_list_exception, invalid_run_info_exception, invalid_run_info_cycle_exception {
    interop_run_metricsJNI.run_metrics_read__SWIG_0(swigCPtr, this, run_folder, thread_count);
  }

  public void read(String run_folder) throws xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception, file_not_found_exception, bad_format_exception, incomplete_file_exception, invalid_channel_exception, index_out_of_bounds_exception, invalid_tile_naming_method, invalid_tile_list_exception, invalid_run_info_exception, invalid_run_info_cycle_exception {
    interop_run_metricsJNI.run_metrics_read__SWIG_1(swigCPtr, this, run_folder);
  }

  public void read(String run_folder, uchar_vector valid_to_load, long thread_count, boolean skip_loaded) throws xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception, file_not_found_exception, bad_format_exception, incomplete_file_exception, invalid_channel_exception, index_out_of_bounds_exception, invalid_tile_naming_method, invalid_tile_list_exception, invalid_run_info_exception, invalid_run_info_cycle_exception, invalid_parameter {
    interop_run_metricsJNI.run_metrics_read__SWIG_2(swigCPtr, this, run_folder, uchar_vector.getCPtr(valid_to_load), valid_to_load, thread_count, skip_loaded);
  }

  public void read(String run_folder, uchar_vector valid_to_load, long thread_count) throws xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception, file_not_found_exception, bad_format_exception, incomplete_file_exception, invalid_channel_exception, index_out_of_bounds_exception, invalid_tile_naming_method, invalid_tile_list_exception, invalid_run_info_exception, invalid_run_info_cycle_exception, invalid_parameter {
    interop_run_metricsJNI.run_metrics_read__SWIG_3(swigCPtr, this, run_folder, uchar_vector.getCPtr(valid_to_load), valid_to_load, thread_count);
  }

  public void read(String run_folder, uchar_vector valid_to_load) throws xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception, file_not_found_exception, bad_format_exception, incomplete_file_exception, invalid_channel_exception, index_out_of_bounds_exception, invalid_tile_naming_method, invalid_tile_list_exception, invalid_run_info_exception, invalid_run_info_cycle_exception, invalid_parameter {
    interop_run_metricsJNI.run_metrics_read__SWIG_4(swigCPtr, this, run_folder, uchar_vector.getCPtr(valid_to_load), valid_to_load);
  }

  public long read_xml(String run_folder) throws file_not_found_exception, xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception {
    return interop_run_metricsJNI.run_metrics_read_xml(swigCPtr, this, run_folder);
  }

  public void read_run_info(String run_folder) throws xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception {
    interop_run_metricsJNI.run_metrics_read_run_info(swigCPtr, this, run_folder);
  }

  public long read_run_parameters(String run_folder, boolean force_load) throws file_not_found_exception, xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception {
    return interop_run_metricsJNI.run_metrics_read_run_parameters__SWIG_0(swigCPtr, this, run_folder, force_load);
  }

  public long read_run_parameters(String run_folder) throws file_not_found_exception, xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception {
    return interop_run_metricsJNI.run_metrics_read_run_parameters__SWIG_1(swigCPtr, this, run_folder);
  }

  public void finalize_after_load(long count) throws invalid_channel_exception, invalid_tile_naming_method, index_out_of_bounds_exception, invalid_tile_list_exception, invalid_run_info_exception, invalid_run_info_cycle_exception {
    interop_run_metricsJNI.run_metrics_finalize_after_load__SWIG_0(swigCPtr, this, count);
  }

  public void finalize_after_load() throws invalid_channel_exception, invalid_tile_naming_method, index_out_of_bounds_exception, invalid_tile_list_exception, invalid_run_info_exception, invalid_run_info_cycle_exception {
    interop_run_metricsJNI.run_metrics_finalize_after_load__SWIG_1(swigCPtr, this);
  }

  public boolean empty() {
    return interop_run_metricsJNI.run_metrics_empty(swigCPtr, this);
  }

  public void legacy_channel_update(instrument_type type) {
    interop_run_metricsJNI.run_metrics_legacy_channel_update(swigCPtr, this, type.swigValue());
  }

  public void set_naming_method(tile_naming_method naming_method) {
    interop_run_metricsJNI.run_metrics_set_naming_method(swigCPtr, this, naming_method.swigValue());
  }

  public long count_legacy_bins(long legacy_bin_count) {
    return interop_run_metricsJNI.run_metrics_count_legacy_bins__SWIG_0(swigCPtr, this, legacy_bin_count);
  }

  public long count_legacy_bins() {
    return interop_run_metricsJNI.run_metrics_count_legacy_bins__SWIG_1(swigCPtr, this);
  }

  public boolean is_run_parameters_required(long legacy_bin_count) {
    return interop_run_metricsJNI.run_metrics_is_run_parameters_required__SWIG_0(swigCPtr, this, legacy_bin_count);
  }

  public boolean is_run_parameters_required() {
    return interop_run_metricsJNI.run_metrics_is_run_parameters_required__SWIG_1(swigCPtr, this);
  }

  public info run_info() {
    return new info(interop_run_metricsJNI.run_metrics_run_info__SWIG_0(swigCPtr, this), false);
  }

  public void run_info(info info) {
    interop_run_metricsJNI.run_metrics_run_info__SWIG_1(swigCPtr, this, info.getCPtr(info), info);
  }

  public parameters run_parameters() {
    return new parameters(interop_run_metricsJNI.run_metrics_run_parameters__SWIG_0(swigCPtr, this), false);
  }

  public void run_parameters(parameters param) {
    interop_run_metricsJNI.run_metrics_run_parameters__SWIG_1(swigCPtr, this, parameters.getCPtr(param), param);
  }

  public void list_filenames(metric_group group, string_vector files, String run_folder, boolean use_out) throws invalid_run_info_exception {
    interop_run_metricsJNI.run_metrics_list_filenames__SWIG_0(swigCPtr, this, group.swigValue(), string_vector.getCPtr(files), files, run_folder, use_out);
  }

  public void list_filenames(metric_group group, string_vector files, String run_folder) throws invalid_run_info_exception {
    interop_run_metricsJNI.run_metrics_list_filenames__SWIG_1(swigCPtr, this, group.swigValue(), string_vector.getCPtr(files), files, run_folder);
  }

  public void list_filenames(string_vector files, String run_folder, boolean bycycle, boolean use_out) throws invalid_run_info_exception {
    interop_run_metricsJNI.run_metrics_list_filenames__SWIG_2(swigCPtr, this, string_vector.getCPtr(files), files, run_folder, bycycle, use_out);
  }

  public void list_filenames(string_vector files, String run_folder, boolean bycycle) throws invalid_run_info_exception {
    interop_run_metricsJNI.run_metrics_list_filenames__SWIG_3(swigCPtr, this, string_vector.getCPtr(files), files, run_folder, bycycle);
  }

  public void list_filenames(string_vector files, String run_folder) throws invalid_run_info_exception {
    interop_run_metricsJNI.run_metrics_list_filenames__SWIG_4(swigCPtr, this, string_vector.getCPtr(files), files, run_folder);
  }

  public void check_for_data_sources(String run_folder, long last_cycle) {
    interop_run_metricsJNI.run_metrics_check_for_data_sources(swigCPtr, this, run_folder, last_cycle);
  }

  public void read_metrics(String run_folder, long last_cycle, long thread_count) throws file_not_found_exception, bad_format_exception, incomplete_file_exception {
    interop_run_metricsJNI.run_metrics_read_metrics__SWIG_0(swigCPtr, this, run_folder, last_cycle, thread_count);
  }

  public void read_metrics(String run_folder, long last_cycle, uchar_vector valid_to_load, long thread_count, boolean skip_loaded) throws file_not_found_exception, bad_format_exception, incomplete_file_exception, invalid_parameter {
    interop_run_metricsJNI.run_metrics_read_metrics__SWIG_1(swigCPtr, this, run_folder, last_cycle, uchar_vector.getCPtr(valid_to_load), valid_to_load, thread_count, skip_loaded);
  }

  public void read_metrics(String run_folder, long last_cycle, uchar_vector valid_to_load, long thread_count) throws file_not_found_exception, bad_format_exception, incomplete_file_exception, invalid_parameter {
    interop_run_metricsJNI.run_metrics_read_metrics__SWIG_2(swigCPtr, this, run_folder, last_cycle, uchar_vector.getCPtr(valid_to_load), valid_to_load, thread_count);
  }

  public void write_metrics(String run_folder, boolean use_out) throws file_not_found_exception, bad_format_exception {
    interop_run_metricsJNI.run_metrics_write_metrics__SWIG_0(swigCPtr, this, run_folder, use_out);
  }

  public void write_metrics(String run_folder) throws file_not_found_exception, bad_format_exception {
    interop_run_metricsJNI.run_metrics_write_metrics__SWIG_1(swigCPtr, this, run_folder);
  }

  public void read_metrics_from_buffer(metric_group group, byte[] buffer) throws file_not_found_exception, bad_format_exception, incomplete_file_exception, index_out_of_bounds_exception {
    interop_run_metricsJNI.run_metrics_read_metrics_from_buffer(swigCPtr, this, group.swigValue(), buffer);
  }

  public void write_metrics_to_buffer(metric_group group, byte[] buffer) throws invalid_argument, bad_format_exception, incomplete_file_exception {
    interop_run_metricsJNI.run_metrics_write_metrics_to_buffer(swigCPtr, this, group.swigValue(), buffer);
  }

  public long calculate_buffer_size(metric_group group) throws invalid_argument, bad_format_exception {
    return interop_run_metricsJNI.run_metrics_calculate_buffer_size(swigCPtr, this, group.swigValue());
  }

  public void validate() throws invalid_run_info_exception, invalid_run_info_cycle_exception {
    interop_run_metricsJNI.run_metrics_validate(swigCPtr, this);
  }

  public boolean is_group_empty(String group_name) {
    return interop_run_metricsJNI.run_metrics_is_group_empty__SWIG_0(swigCPtr, this, group_name);
  }

  public boolean is_group_empty(metric_group group_id) {
    return interop_run_metricsJNI.run_metrics_is_group_empty__SWIG_1(swigCPtr, this, group_id.swigValue());
  }

  public void populate_id_map(tile_metric_map map) {
    interop_run_metricsJNI.run_metrics_populate_id_map__SWIG_0(swigCPtr, this, tile_metric_map.getCPtr(map), map);
  }

  public void populate_id_map(cycle_metric_map map) {
    interop_run_metricsJNI.run_metrics_populate_id_map__SWIG_1(swigCPtr, this, cycle_metric_map.getCPtr(map), map);
  }

  public void populate_id_map(event_metric_map map) {
    interop_run_metricsJNI.run_metrics_populate_id_map__SWIG_2(swigCPtr, this, event_metric_map.getCPtr(map), map);
  }

  public void sort() {
    interop_run_metricsJNI.run_metrics_sort(swigCPtr, this);
  }

  public void clear() {
    interop_run_metricsJNI.run_metrics_clear(swigCPtr, this);
  }

  public void set_corrected_intensity_metric_set(base_corrected_intensity_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_corrected_intensity_metric_set(swigCPtr, this, base_corrected_intensity_metrics.getCPtr(metrics), metrics);
  }

  public base_corrected_intensity_metrics corrected_intensity_metric_set() {
    return new base_corrected_intensity_metrics(interop_run_metricsJNI.run_metrics_corrected_intensity_metric_set(swigCPtr, this), false);
  }

  public void set_error_metric_set(base_error_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_error_metric_set(swigCPtr, this, base_error_metrics.getCPtr(metrics), metrics);
  }

  public base_error_metrics error_metric_set() {
    return new base_error_metrics(interop_run_metricsJNI.run_metrics_error_metric_set(swigCPtr, this), false);
  }

  public void set_extraction_metric_set(base_extraction_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_extraction_metric_set(swigCPtr, this, base_extraction_metrics.getCPtr(metrics), metrics);
  }

  public base_extraction_metrics extraction_metric_set() {
    return new base_extraction_metrics(interop_run_metricsJNI.run_metrics_extraction_metric_set(swigCPtr, this), false);
  }

  public void set_image_metric_set(base_image_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_image_metric_set(swigCPtr, this, base_image_metrics.getCPtr(metrics), metrics);
  }

  public base_image_metrics image_metric_set() {
    return new base_image_metrics(interop_run_metricsJNI.run_metrics_image_metric_set(swigCPtr, this), false);
  }

  public void set_q_metric_set(base_q_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_q_metric_set(swigCPtr, this, base_q_metrics.getCPtr(metrics), metrics);
  }

  public base_q_metrics q_metric_set() {
    return new base_q_metrics(interop_run_metricsJNI.run_metrics_q_metric_set(swigCPtr, this), false);
  }

  public void set_tile_metric_set(base_tile_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_tile_metric_set(swigCPtr, this, base_tile_metrics.getCPtr(metrics), metrics);
  }

  public base_tile_metrics tile_metric_set() {
    return new base_tile_metrics(interop_run_metricsJNI.run_metrics_tile_metric_set(swigCPtr, this), false);
  }

  public void set_index_metric_set(base_index_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_index_metric_set(swigCPtr, this, base_index_metrics.getCPtr(metrics), metrics);
  }

  public base_index_metrics index_metric_set() {
    return new base_index_metrics(interop_run_metricsJNI.run_metrics_index_metric_set(swigCPtr, this), false);
  }

  public void set_q_collapsed_metric_set(base_q_collapsed_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_q_collapsed_metric_set(swigCPtr, this, base_q_collapsed_metrics.getCPtr(metrics), metrics);
  }

  public base_q_collapsed_metrics q_collapsed_metric_set() {
    return new base_q_collapsed_metrics(interop_run_metricsJNI.run_metrics_q_collapsed_metric_set(swigCPtr, this), false);
  }

  public void set_q_by_lane_metric_set(base_q_by_lane_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_q_by_lane_metric_set(swigCPtr, this, base_q_by_lane_metrics.getCPtr(metrics), metrics);
  }

  public base_q_by_lane_metrics q_by_lane_metric_set() {
    return new base_q_by_lane_metrics(interop_run_metricsJNI.run_metrics_q_by_lane_metric_set(swigCPtr, this), false);
  }

  public void set_alignment_metric_set(base_alignment_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_alignment_metric_set(swigCPtr, this, base_alignment_metrics.getCPtr(metrics), metrics);
  }

  public base_alignment_metrics alignment_metric_set() {
    return new base_alignment_metrics(interop_run_metricsJNI.run_metrics_alignment_metric_set(swigCPtr, this), false);
  }

  public void set_basecalling_metric_set(base_basecalling_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_basecalling_metric_set(swigCPtr, this, base_basecalling_metrics.getCPtr(metrics), metrics);
  }

  public base_basecalling_metrics basecalling_metric_set() {
    return new base_basecalling_metrics(interop_run_metricsJNI.run_metrics_basecalling_metric_set(swigCPtr, this), false);
  }

  public void set_color_matrix_metric_set(base_color_matrix_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_color_matrix_metric_set(swigCPtr, this, base_color_matrix_metrics.getCPtr(metrics), metrics);
  }

  public base_color_matrix_metrics color_matrix_metric_set() {
    return new base_color_matrix_metrics(interop_run_metricsJNI.run_metrics_color_matrix_metric_set(swigCPtr, this), false);
  }

  public void set_distortion_metric_set(base_distortion_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_distortion_metric_set(swigCPtr, this, base_distortion_metrics.getCPtr(metrics), metrics);
  }

  public base_distortion_metrics distortion_metric_set() {
    return new base_distortion_metrics(interop_run_metricsJNI.run_metrics_distortion_metric_set(swigCPtr, this), false);
  }

  public void set_dynamic_phasing_metric_set(base_dynamic_phasing_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_dynamic_phasing_metric_set(swigCPtr, this, base_dynamic_phasing_metrics.getCPtr(metrics), metrics);
  }

  public base_dynamic_phasing_metrics dynamic_phasing_metric_set() {
    return new base_dynamic_phasing_metrics(interop_run_metricsJNI.run_metrics_dynamic_phasing_metric_set(swigCPtr, this), false);
  }

  public void set_event_metric_set(base_event_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_event_metric_set(swigCPtr, this, base_event_metrics.getCPtr(metrics), metrics);
  }

  public base_event_metrics event_metric_set() {
    return new base_event_metrics(interop_run_metricsJNI.run_metrics_event_metric_set(swigCPtr, this), false);
  }

  public void set_extended_tile_metric_set(base_extended_tile_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_extended_tile_metric_set(swigCPtr, this, base_extended_tile_metrics.getCPtr(metrics), metrics);
  }

  public base_extended_tile_metrics extended_tile_metric_set() {
    return new base_extended_tile_metrics(interop_run_metricsJNI.run_metrics_extended_tile_metric_set(swigCPtr, this), false);
  }

  public void set_fwhm_grid_metric_set(base_fwhm_grid_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_fwhm_grid_metric_set(swigCPtr, this, base_fwhm_grid_metrics.getCPtr(metrics), metrics);
  }

  public base_fwhm_grid_metrics fwhm_grid_metric_set() {
    return new base_fwhm_grid_metrics(interop_run_metricsJNI.run_metrics_fwhm_grid_metric_set(swigCPtr, this), false);
  }

  public void set_pf_grid_metric_set(base_pf_grid_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_pf_grid_metric_set(swigCPtr, this, base_pf_grid_metrics.getCPtr(metrics), metrics);
  }

  public base_pf_grid_metrics pf_grid_metric_set() {
    return new base_pf_grid_metrics(interop_run_metricsJNI.run_metrics_pf_grid_metric_set(swigCPtr, this), false);
  }

  public void set_phasing_metric_set(base_phasing_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_phasing_metric_set(swigCPtr, this, base_phasing_metrics.getCPtr(metrics), metrics);
  }

  public base_phasing_metrics phasing_metric_set() {
    return new base_phasing_metrics(interop_run_metricsJNI.run_metrics_phasing_metric_set(swigCPtr, this), false);
  }

  public void set_q_grid_metric_set(base_q_grid_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_q_grid_metric_set(swigCPtr, this, base_q_grid_metrics.getCPtr(metrics), metrics);
  }

  public base_q_grid_metrics q_grid_metric_set() {
    return new base_q_grid_metrics(interop_run_metricsJNI.run_metrics_q_grid_metric_set(swigCPtr, this), false);
  }

  public void set_registration_metric_set(base_registration_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_registration_metric_set(swigCPtr, this, base_registration_metrics.getCPtr(metrics), metrics);
  }

  public base_registration_metrics registration_metric_set() {
    return new base_registration_metrics(interop_run_metricsJNI.run_metrics_registration_metric_set(swigCPtr, this), false);
  }

  public void set_run_diagnostics_metric_set(base_run_diagnostics_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_run_diagnostics_metric_set(swigCPtr, this, base_run_diagnostics_metrics.getCPtr(metrics), metrics);
  }

  public base_run_diagnostics_metrics run_diagnostics_metric_set() {
    return new base_run_diagnostics_metrics(interop_run_metricsJNI.run_metrics_run_diagnostics_metric_set(swigCPtr, this), false);
  }

  public void set_static_run_metric_set(base_static_run_metrics metrics) {
    interop_run_metricsJNI.run_metrics_set_static_run_metric_set(swigCPtr, this, base_static_run_metrics.getCPtr(metrics), metrics);
  }

  public base_static_run_metrics static_run_metric_set() {
    return new base_static_run_metrics(interop_run_metricsJNI.run_metrics_static_run_metric_set(swigCPtr, this), false);
  }

}
