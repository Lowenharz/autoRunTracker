/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class interop_summary {
  public static void summarize_run_metrics(run_metrics metrics, run_summary summary, boolean skip_median, boolean trim) throws index_out_of_bounds_exception, invalid_channel_exception, invalid_run_info_exception {
    interop_summaryJNI.summarize_run_metrics__SWIG_0(run_metrics.getCPtr(metrics), metrics, run_summary.getCPtr(summary), summary, skip_median, trim);
  }

  public static void summarize_run_metrics(run_metrics metrics, run_summary summary, boolean skip_median) throws index_out_of_bounds_exception, invalid_channel_exception, invalid_run_info_exception {
    interop_summaryJNI.summarize_run_metrics__SWIG_1(run_metrics.getCPtr(metrics), metrics, run_summary.getCPtr(summary), summary, skip_median);
  }

  public static void summarize_run_metrics(run_metrics metrics, run_summary summary) throws index_out_of_bounds_exception, invalid_channel_exception, invalid_run_info_exception {
    interop_summaryJNI.summarize_run_metrics__SWIG_2(run_metrics.getCPtr(metrics), metrics, run_summary.getCPtr(summary), summary);
  }

  public static void summarize_index_metrics(run_metrics metrics, long lane, index_lane_summary summary) throws index_out_of_bounds_exception {
    interop_summaryJNI.summarize_index_metrics__SWIG_0(run_metrics.getCPtr(metrics), metrics, lane, index_lane_summary.getCPtr(summary), summary);
  }

  public static void summarize_index_metrics(base_index_metrics index_metrics, base_tile_metrics tile_metrics, long lane_count, index_flowcell_summary summary) throws index_out_of_bounds_exception {
    interop_summaryJNI.summarize_index_metrics__SWIG_1(base_index_metrics.getCPtr(index_metrics), index_metrics, base_tile_metrics.getCPtr(tile_metrics), tile_metrics, lane_count, index_flowcell_summary.getCPtr(summary), summary);
  }

  public static void summarize_index_metrics(run_metrics metrics, index_flowcell_summary summary) throws index_out_of_bounds_exception {
    interop_summaryJNI.summarize_index_metrics__SWIG_2(run_metrics.getCPtr(metrics), metrics, index_flowcell_summary.getCPtr(summary), summary);
  }

  public static void summarize_compass_run_metrics(run_metrics metrics, run_summary summary, boolean skip_median, boolean clear) throws index_out_of_bounds_exception, invalid_channel_exception {
    interop_summaryJNI.summarize_compass_run_metrics__SWIG_0(run_metrics.getCPtr(metrics), metrics, run_summary.getCPtr(summary), summary, skip_median, clear);
  }

  public static void summarize_compass_run_metrics(run_metrics metrics, run_summary summary, boolean skip_median) throws index_out_of_bounds_exception, invalid_channel_exception {
    interop_summaryJNI.summarize_compass_run_metrics__SWIG_1(run_metrics.getCPtr(metrics), metrics, run_summary.getCPtr(summary), summary, skip_median);
  }

  public static void summarize_compass_run_metrics(run_metrics metrics, run_summary summary) throws index_out_of_bounds_exception, invalid_channel_exception {
    interop_summaryJNI.summarize_compass_run_metrics__SWIG_2(run_metrics.getCPtr(metrics), metrics, run_summary.getCPtr(summary), summary);
  }

  public static void summarize_compass_cycle_metrics(run_metrics metrics, compass_cycle_table table) throws index_out_of_bounds_exception, invalid_metric_type, invalid_channel_exception, invalid_read_exception {
    interop_summaryJNI.summarize_compass_cycle_metrics(run_metrics.getCPtr(metrics), metrics, compass_cycle_table.getCPtr(table), table);
  }

}
