/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class parameters {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected parameters(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(parameters obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_runJNI.delete_parameters(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public parameters(long version, String instrument_name, instrument_type instrument_type, String experiment_name, String chemistry, long control_lane, rfid_metadata flowcell_rfid, rfid_metadata bottle_rfid, String bottle_barcode, rfid_metadata reagent_rfid, String reagent_barcode) {
    this(interop_runJNI.new_parameters__SWIG_0(version, instrument_name, instrument_type.swigValue(), experiment_name, chemistry, control_lane, rfid_metadata.getCPtr(flowcell_rfid), flowcell_rfid, rfid_metadata.getCPtr(bottle_rfid), bottle_rfid, bottle_barcode, rfid_metadata.getCPtr(reagent_rfid), reagent_rfid, reagent_barcode), true);
  }

  public parameters(long version, String instrument_name, instrument_type instrument_type, String experiment_name, String chemistry, long control_lane, rfid_metadata flowcell_rfid, rfid_metadata bottle_rfid, String bottle_barcode, rfid_metadata reagent_rfid) {
    this(interop_runJNI.new_parameters__SWIG_1(version, instrument_name, instrument_type.swigValue(), experiment_name, chemistry, control_lane, rfid_metadata.getCPtr(flowcell_rfid), flowcell_rfid, rfid_metadata.getCPtr(bottle_rfid), bottle_rfid, bottle_barcode, rfid_metadata.getCPtr(reagent_rfid), reagent_rfid), true);
  }

  public parameters(long version, String instrument_name, instrument_type instrument_type, String experiment_name, String chemistry, long control_lane, rfid_metadata flowcell_rfid, rfid_metadata bottle_rfid, String bottle_barcode) {
    this(interop_runJNI.new_parameters__SWIG_2(version, instrument_name, instrument_type.swigValue(), experiment_name, chemistry, control_lane, rfid_metadata.getCPtr(flowcell_rfid), flowcell_rfid, rfid_metadata.getCPtr(bottle_rfid), bottle_rfid, bottle_barcode), true);
  }

  public parameters(long version, String instrument_name, instrument_type instrument_type, String experiment_name, String chemistry, long control_lane, rfid_metadata flowcell_rfid, rfid_metadata bottle_rfid) {
    this(interop_runJNI.new_parameters__SWIG_3(version, instrument_name, instrument_type.swigValue(), experiment_name, chemistry, control_lane, rfid_metadata.getCPtr(flowcell_rfid), flowcell_rfid, rfid_metadata.getCPtr(bottle_rfid), bottle_rfid), true);
  }

  public parameters(long version, String instrument_name, instrument_type instrument_type, String experiment_name, String chemistry, long control_lane, rfid_metadata flowcell_rfid) {
    this(interop_runJNI.new_parameters__SWIG_4(version, instrument_name, instrument_type.swigValue(), experiment_name, chemistry, control_lane, rfid_metadata.getCPtr(flowcell_rfid), flowcell_rfid), true);
  }

  public parameters(long version, String instrument_name, instrument_type instrument_type, String experiment_name, String chemistry, long control_lane) {
    this(interop_runJNI.new_parameters__SWIG_5(version, instrument_name, instrument_type.swigValue(), experiment_name, chemistry, control_lane), true);
  }

  public parameters(long version, String instrument_name, instrument_type instrument_type, String experiment_name, String chemistry) {
    this(interop_runJNI.new_parameters__SWIG_6(version, instrument_name, instrument_type.swigValue(), experiment_name, chemistry), true);
  }

  public parameters(long version, String instrument_name, instrument_type instrument_type, String experiment_name) {
    this(interop_runJNI.new_parameters__SWIG_7(version, instrument_name, instrument_type.swigValue(), experiment_name), true);
  }

  public parameters(long version, String instrument_name, instrument_type instrument_type) {
    this(interop_runJNI.new_parameters__SWIG_8(version, instrument_name, instrument_type.swigValue()), true);
  }

  public parameters(long version, String instrument_name) {
    this(interop_runJNI.new_parameters__SWIG_9(version, instrument_name), true);
  }

  public parameters(long version) {
    this(interop_runJNI.new_parameters__SWIG_10(version), true);
  }

  public parameters() {
    this(interop_runJNI.new_parameters__SWIG_11(), true);
  }

  public String instrument_name() {
    return interop_runJNI.parameters_instrument_name(swigCPtr, this);
  }

  public instrument_type instrument_type() {
    return instrument_type.swigToEnum(interop_runJNI.parameters_instrument_type(swigCPtr, this));
  }

  public String experiment_name() {
    return interop_runJNI.parameters_experiment_name(swigCPtr, this);
  }

  public String chemistry() {
    return interop_runJNI.parameters_chemistry(swigCPtr, this);
  }

  public long control_lane() {
    return interop_runJNI.parameters_control_lane(swigCPtr, this);
  }

  public long version() {
    return interop_runJNI.parameters_version(swigCPtr, this);
  }

  public rfid_metadata flowcell_rfid() {
    return new rfid_metadata(interop_runJNI.parameters_flowcell_rfid(swigCPtr, this), false);
  }

  public rfid_metadata bottle_rfid() {
    return new rfid_metadata(interop_runJNI.parameters_bottle_rfid(swigCPtr, this), false);
  }

  public String bottle_barcode() {
    return interop_runJNI.parameters_bottle_barcode(swigCPtr, this);
  }

  public rfid_metadata reagent_rfid() {
    return new rfid_metadata(interop_runJNI.parameters_reagent_rfid(swigCPtr, this), false);
  }

  public String reagent_barcode() {
    return interop_runJNI.parameters_reagent_barcode(swigCPtr, this);
  }

  public void read(String run_folder) throws xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception {
    interop_runJNI.parameters_read(swigCPtr, this, run_folder);
  }

  public void read_file(String filename) throws xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception {
    interop_runJNI.parameters_read_file(swigCPtr, this, filename);
  }

  public void parse(String data) throws xml_file_not_found_exception, bad_xml_format_exception, empty_xml_format_exception, missing_xml_element_exception, xml_parse_exception {
    interop_runJNI.parameters_parse(swigCPtr, this, data);
  }

  public static long parse_time(String time_repr) {
    return interop_runJNI.parameters_parse_time(time_repr);
  }

}
