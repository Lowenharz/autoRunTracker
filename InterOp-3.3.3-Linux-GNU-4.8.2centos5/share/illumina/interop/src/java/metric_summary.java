/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.illumina.interop;

public class metric_summary {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected metric_summary(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(metric_summary obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        interop_summaryJNI.delete_metric_summary(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public metric_summary(long channel_count) {
    this(interop_summaryJNI.new_metric_summary(channel_count), true);
  }

  public float error_rate() {
    return interop_summaryJNI.metric_summary_error_rate__SWIG_0(swigCPtr, this);
  }

  public float percent_aligned() {
    return interop_summaryJNI.metric_summary_percent_aligned__SWIG_0(swigCPtr, this);
  }

  public float first_cycle_intensity() {
    return interop_summaryJNI.metric_summary_first_cycle_intensity__SWIG_0(swigCPtr, this);
  }

  public float percent_gt_q30() {
    return interop_summaryJNI.metric_summary_percent_gt_q30__SWIG_0(swigCPtr, this);
  }

  public float yield_g() {
    return interop_summaryJNI.metric_summary_yield_g__SWIG_0(swigCPtr, this);
  }

  public float projected_yield_g() {
    return interop_summaryJNI.metric_summary_projected_yield_g__SWIG_0(swigCPtr, this);
  }

  public float percent_gt_q30_last_10_cycles() {
    return interop_summaryJNI.metric_summary_percent_gt_q30_last_10_cycles__SWIG_0(swigCPtr, this);
  }

  public float percent_occupied() {
    return interop_summaryJNI.metric_summary_percent_occupied__SWIG_0(swigCPtr, this);
  }

  public float theta_z() {
    return interop_summaryJNI.metric_summary_theta_z__SWIG_0(swigCPtr, this);
  }

  public float theta() {
    return interop_summaryJNI.metric_summary_theta__SWIG_0(swigCPtr, this);
  }

  public void first_cycle_intensity(float val) {
    interop_summaryJNI.metric_summary_first_cycle_intensity__SWIG_1(swigCPtr, this, val);
  }

  public void error_rate(float val) {
    interop_summaryJNI.metric_summary_error_rate__SWIG_1(swigCPtr, this, val);
  }

  public void percent_aligned(float val) {
    interop_summaryJNI.metric_summary_percent_aligned__SWIG_1(swigCPtr, this, val);
  }

  public void percent_gt_q30(float val) {
    interop_summaryJNI.metric_summary_percent_gt_q30__SWIG_1(swigCPtr, this, val);
  }

  public void yield_g(float val) {
    interop_summaryJNI.metric_summary_yield_g__SWIG_1(swigCPtr, this, val);
  }

  public void projected_yield_g(float val) {
    interop_summaryJNI.metric_summary_projected_yield_g__SWIG_1(swigCPtr, this, val);
  }

  public void percent_gt_q30_last_10_cycles(float val) {
    interop_summaryJNI.metric_summary_percent_gt_q30_last_10_cycles__SWIG_1(swigCPtr, this, val);
  }

  public void percent_occupied(float val) {
    interop_summaryJNI.metric_summary_percent_occupied__SWIG_1(swigCPtr, this, val);
  }

  public void theta_z(float val) {
    interop_summaryJNI.metric_summary_theta_z__SWIG_1(swigCPtr, this, val);
  }

  public void theta(float val) {
    interop_summaryJNI.metric_summary_theta__SWIG_1(swigCPtr, this, val);
  }

  public float percent_pf() {
    return interop_summaryJNI.metric_summary_percent_pf(swigCPtr, this);
  }

  public float cluster_density() {
    return interop_summaryJNI.metric_summary_cluster_density__SWIG_0(swigCPtr, this);
  }

  public float cluster_density_pf() {
    return interop_summaryJNI.metric_summary_cluster_density_pf__SWIG_0(swigCPtr, this);
  }

  public float_vector percent_base() {
    return new float_vector(interop_summaryJNI.metric_summary_percent_base__SWIG_0(swigCPtr, this), false);
  }

  public float phasing() {
    return interop_summaryJNI.metric_summary_phasing__SWIG_0(swigCPtr, this);
  }

  public float prephasing() {
    return interop_summaryJNI.metric_summary_prephasing__SWIG_0(swigCPtr, this);
  }

  public float percent_no_call() {
    return interop_summaryJNI.metric_summary_percent_no_call__SWIG_0(swigCPtr, this);
  }

  public float_vector fwhm() {
    return new float_vector(interop_summaryJNI.metric_summary_fwhm__SWIG_0(swigCPtr, this), false);
  }

  public float_vector resynthesis() {
    return new float_vector(interop_summaryJNI.metric_summary_resynthesis__SWIG_0(swigCPtr, this), false);
  }

  public void fwhm(long channel, float val) {
    interop_summaryJNI.metric_summary_fwhm__SWIG_1(swigCPtr, this, channel, val);
  }

  public void resynthesis(long channel, float val) {
    interop_summaryJNI.metric_summary_resynthesis__SWIG_1(swigCPtr, this, channel, val);
  }

  public void percent_base(long channel, float val) {
    interop_summaryJNI.metric_summary_percent_base__SWIG_1(swigCPtr, this, channel, val);
  }

  public void phasing(float val) {
    interop_summaryJNI.metric_summary_phasing__SWIG_1(swigCPtr, this, val);
  }

  public void prephasing(float val) {
    interop_summaryJNI.metric_summary_prephasing__SWIG_1(swigCPtr, this, val);
  }

  public void percent_no_call(float val) {
    interop_summaryJNI.metric_summary_percent_no_call__SWIG_1(swigCPtr, this, val);
  }

  public void cluster_density(float val) {
    interop_summaryJNI.metric_summary_cluster_density__SWIG_1(swigCPtr, this, val);
  }

  public void cluster_density_pf(float val) {
    interop_summaryJNI.metric_summary_cluster_density_pf__SWIG_1(swigCPtr, this, val);
  }

  public void resize(long channel_count) {
    interop_summaryJNI.metric_summary_resize(swigCPtr, this, channel_count);
  }

}
